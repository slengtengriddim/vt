[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nLog = Package.logging.Log;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nSpacebars = Package.spacebars.Spacebars;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nFake = Package['anti:fake'].Fake;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nFlowRouterHelpers = Package['arillo:flow-router-helpers'].FlowRouterHelpers;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nR = Package['ramda:ramda'].R;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAccountsTemplates = Package['useraccounts:core'].AccountsTemplates;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\nT9n = Package['softwarerero:accounts-t9n'].T9n;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"lib\":{\"config\":{\"accounts.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// server/lib/config/accounts.js                                                    //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n                                                                                    //\nMeteor.startup(function () {});                                                     // 2\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"email.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// server/lib/config/email.js                                                       //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n                                                                                    //\n// Accounts.emailTemplates.siteName = \"MySite\";                                     //\n//                                                                                  //\n// Accounts.emailTemplates.from = \"MySite <support@mysite.com>\";                    //\n//                                                                                  //\n// Accounts.emailTemplates.resetPassword.subject = function (user) {                //\n//     return \"Message for \" + user.profile.displayName;                            //\n// };                                                                               //\n//                                                                                  //\n// Accounts.emailTemplates.resetPassword.text = function (user, url) {              //\n//     var signature = \"MySite Bot\";                                                //\n//     //var president = President.findOne();                                       //\n//     //if (president)                                                             //\n//     //    president = Meteor.users.findOne(president.presidentId);               //\n//     //    signature = president.profile.displayName + \", the MySite President.\";\n//                                                                                  //\n//     return \"Dear \" + user.profile.displayName + \",\\n\\n\" +                        //\n//         \"Click the following link to set your new password:\\n\" +                 //\n//         url + \"\\n\\n\" +                                                           //\n//         \"Please never forget it again!!!\\n\\n\\n\" +                                //\n//         \"Cheers,\\n\" +                                                            //\n//         signature;                                                               //\n// };                                                                               //\n//////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"methods.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// server/methods.js                                                                //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nMeteor.methods({                                                                    // 1\n\ttoggleFavourite: function () {                                                     // 2\n\t\tfunction toggleFavourite(vocabularyId) {                                          //\n                                                                                    //\n\t\t\tif (Favourites.find({                                                            // 4\n\t\t\t\tvocabularyId: vocabularyId,                                                     // 5\n\t\t\t\tuserId: this.userId                                                             // 6\n\t\t\t}).count() === 0) {                                                              //\n                                                                                    //\n\t\t\t\tFavourites.insert({                                                             // 9\n\t\t\t\t\tvocabularyId: vocabularyId                                                     // 10\n\t\t\t\t});                                                                             //\n\t\t\t} else {                                                                         //\n\t\t\t\tFavourites.remove({                                                             // 13\n\t\t\t\t\tvocabularyId: vocabularyId                                                     // 14\n\t\t\t\t});                                                                             //\n\t\t\t}                                                                                //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn toggleFavourite;                                                           //\n\t}(),                                                                               //\n\tdeleteFavourite: function () {                                                     // 18\n\t\tfunction deleteFavourite(vocabularyId) {                                          //\n\t\t\tvar favEntry = Favourites.findOne({                                              // 19\n\t\t\t\tvocabularyId: vocabularyId                                                      // 20\n\t\t\t});                                                                              //\n                                                                                    //\n\t\t\tFavourites.remove(favEntry._id);                                                 // 23\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn deleteFavourite;                                                           //\n\t}()                                                                                //\n});                                                                                 //\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"publication.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// server/publication.js                                                            //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nMeteor.publish('vocabularyRegister', function (search) {                            // 1\n\tcheck(search, Match.OneOf(String, null, undefined));                               // 2\n                                                                                    //\n\tvar query = {},                                                                    // 4\n\t    projection = {                                                                 //\n\t\tlimit: 0,                                                                         // 6\n\t\tsort: {                                                                           // 7\n\t\t\tterm: 1                                                                          // 8\n\t\t}                                                                                 //\n\t};                                                                                 //\n                                                                                    //\n\tif (search) {                                                                      // 12\n\t\tvar regex = new RegExp(search, 'i');                                              // 13\n\t\tquery = {                                                                         // 14\n\t\t\t$or: [{                                                                          // 15\n\t\t\t\tterm: regex                                                                     // 16\n\t\t\t}, {                                                                             //\n\t\t\t\tdescription: regex                                                              // 18\n\t\t\t}]                                                                               //\n\t\t};                                                                                //\n\t\tprojection.limit = 0;                                                             // 21\n\t}                                                                                  //\n\treturn Vocabulary.find(query, projection);                                         // 23\n});                                                                                 //\n                                                                                    //\nMeteor.publish(\"vocabularyAll\", function () {                                       // 26\n\tvar data = Vocabulary.find({});                                                    // 27\n\tif (data) {                                                                        // 28\n\t\treturn data;                                                                      // 29\n\t}                                                                                  //\n\treturn this.ready();                                                               // 31\n});                                                                                 //\n                                                                                    //\nMeteor.publish(\"vocabularyFavourised\", function () {                                // 34\n\tvar currentUserId = this.userId;                                                   // 35\n\tvar favIds = R.pluck('vocabularyId')(Favourites.find({                             // 36\n\t\tuserId: currentUserId                                                             // 37\n\t}).fetch());                                                                       //\n                                                                                    //\n\treturn Vocabulary.find({                                                           // 40\n\t\t_id: {                                                                            // 41\n\t\t\t$in: favIds                                                                      // 42\n\t\t}                                                                                 //\n\t}, {                                                                               //\n\t\tsort: {                                                                           // 45\n\t\t\tterm: 1                                                                          // 46\n\t\t}                                                                                 //\n\t});                                                                                //\n});                                                                                 //\n                                                                                    //\nMeteor.publish(\"vocabularyWithoutFavourised\", function () {                         // 51\n\tvar currentUserId = this.userId;                                                   // 52\n\tvar favIds = R.pluck('vocabularyId')(Favourites.find({                             // 53\n\t\tuserId: currentUserId                                                             // 54\n\t}).fetch());                                                                       //\n\tvar data = Vocabulary.find({                                                       // 56\n\t\t_id: {                                                                            // 57\n\t\t\t$nin: favIds                                                                     // 58\n\t\t}                                                                                 //\n\t});                                                                                //\n                                                                                    //\n\tif (data) {                                                                        // 62\n\t\treturn data;                                                                      // 63\n\t}                                                                                  //\n\treturn this.ready();                                                               // 65\n});                                                                                 //\n                                                                                    //\nMeteor.publish(\"ownedFavourites\", function () {                                     // 68\n\tvar currentUserId = this.userId;                                                   // 69\n\tvar data = Favourites.find({                                                       // 70\n\t\tuserId: currentUserId                                                             // 71\n\t});                                                                                //\n\tif (data) {                                                                        // 73\n\t\treturn data;                                                                      // 74\n\t}                                                                                  //\n\treturn this.ready();                                                               // 76\n});                                                                                 //\n                                                                                    //\nMeteor.publish('singleEntry', function (entryId) {                                  // 79\n\treturn Vocabulary.find({                                                           // 80\n\t\t_id: entryId                                                                      // 81\n\t});                                                                                //\n});                                                                                 //\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"vocabularySeed.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// server/vocabularySeed.js                                                         //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nMeteor.startup(function () {                                                        // 1\n                                                                                    //\n\t// if (Vocabulary.find().count() === 0) {                                          //\n\t// \tfor (let i = 0; i < 300; i++) {                                                //\n\t// \t\tVocabulary.insert({                                                           //\n\t// \t\t\tterm: Fake.word(),                                                           //\n\t// \t\t\tdescription: Fake.sentence([32])                                             //\n\t// \t\t});                                                                           //\n\t// \t}                                                                              //\n\t// };                                                                              //\n});                                                                                 //\n//////////////////////////////////////////////////////////////////////////////////////\n\n}},\"common\":{\"aux\":{\"aux.js\":function(require,exports){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/aux/aux.js                                                                //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n(function (exports) {                                                               // 1\n    /**                                                                             //\n    * Randomize array element order in-place.                                       //\n    * Using Durstenfeld shuffle algorithm.                                          //\n    */                                                                              //\n    exports.shuffle = function (array) {                                            // 6\n        for (var i = array.length - 1; i > 0; i--) {                                // 7\n            var j = Math.floor(Math.random() * (i + 1));                            // 8\n            var temp = array[i];                                                    // 9\n            array[i] = array[j];                                                    // 10\n            array[j] = temp;                                                        // 11\n        }                                                                           //\n        return array;                                                               // 13\n    };                                                                              //\n})(this.Aux = {});                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"validation.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/aux/validation.js                                                         //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nisAlphabetic = function isAlphabetic(value) {                                       // 1\n  var filter = /^[A-Za-z\\s]+$/;                                                     // 2\n  if (filter.test(value)) {                                                         // 3\n    return true;                                                                    // 4\n  }                                                                                 //\n  return false;                                                                     // 6\n};                                                                                  //\n                                                                                    //\nisLength64 = function isLength64(value) {                                           // 9\n  if (value.length < 65) {                                                          // 10\n    return true;                                                                    // 11\n  }                                                                                 //\n  return false;                                                                     // 13\n};                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"favourites.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/collections/favourites.js                                                 //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nvar FavouritesSchema = new SimpleSchema({                                           // 1\n  userId: {                                                                         // 2\n    type: String,                                                                   // 3\n    autoValue: function () {                                                        // 4\n      function autoValue() {                                                        // 4\n        return this.userId;                                                         // 5\n      }                                                                             //\n                                                                                    //\n      return autoValue;                                                             //\n    }()                                                                             //\n  },                                                                                //\n  vocabularyId: {                                                                   // 8\n    type: String                                                                    // 9\n  },                                                                                //\n  createdAt: {                                                                      // 11\n    type: Date,                                                                     // 12\n    autoValue: function () {                                                        // 13\n      function autoValue() {                                                        // 13\n        return new Date();                                                          // 14\n      }                                                                             //\n                                                                                    //\n      return autoValue;                                                             //\n    }(),                                                                            //\n    autoform: {                                                                     // 16\n      type: \"hidden\"                                                                // 17\n    }                                                                               //\n  }                                                                                 //\n});                                                                                 //\n                                                                                    //\nFavourites = new Mongo.Collection('favourites', {});                                // 22\nFavourites.attachSchema(FavouritesSchema);                                          // 23\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"local.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/collections/local.js                                                      //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n                                                                                    //\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"viewed.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/collections/viewed.js                                                     //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nvar ViewedSchema = new SimpleSchema({                                               // 1\n\tuserId: {                                                                          // 2\n\t\ttype: String,                                                                     // 3\n\t\tautoValue: function () {                                                          // 4\n\t\t\tfunction autoValue() {                                                           // 4\n\t\t\t\treturn this.userId;                                                             // 5\n\t\t\t}                                                                                //\n                                                                                    //\n\t\t\treturn autoValue;                                                                //\n\t\t}()                                                                               //\n\t},                                                                                 //\n\tvocabularyId: {                                                                    // 8\n\t\ttype: String                                                                      // 9\n\t},                                                                                 //\n\tcreatedAt: {                                                                       // 11\n\t\ttype: Date,                                                                       // 12\n\t\tautoValue: function () {                                                          // 13\n\t\t\tfunction autoValue() {                                                           // 13\n\t\t\t\treturn new Date();                                                              // 14\n\t\t\t}                                                                                //\n                                                                                    //\n\t\t\treturn autoValue;                                                                //\n\t\t}(),                                                                              //\n\t\tautoform: {                                                                       // 16\n\t\t\ttype: \"hidden\"                                                                   // 17\n\t\t}                                                                                 //\n\t},                                                                                 //\n\ttimesViewed: {                                                                     // 20\n\t\ttype: Number,                                                                     // 21\n\t\tdefaultValue: 0                                                                   // 22\n\t}                                                                                  //\n\t// link to page the word was looked up from                                        //\n});                                                                                 // 1\n                                                                                    //\nViewed = new Mongo.Collection('viewed', {});                                        // 27\nViewed.attachSchema(ViewedSchema);                                                  // 28\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"vocabulary.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/collections/vocabulary.js                                                 //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nVocabulary = new Mongo.Collection('vocabulary', {});                                // 1\n                                                                                    //\nif (Meteor.isServer) {                                                              // 3\n\tVocabulary._ensureIndex({                                                          // 4\n\t\tterm: 1,                                                                          // 5\n\t\tdescription: 1                                                                    // 6\n\t});                                                                                //\n}                                                                                   //\n                                                                                    //\nVocabulary.allow({                                                                  // 10\n\tinsert: function () {                                                              // 11\n\t\tfunction insert() {                                                               // 11\n\t\t\treturn false;                                                                    //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn insert;                                                                    //\n\t}(),                                                                               //\n\tupdate: function () {                                                              // 12\n\t\tfunction update() {                                                               // 12\n\t\t\treturn false;                                                                    //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn update;                                                                    //\n\t}(),                                                                               //\n\tremove: function () {                                                              // 13\n\t\tfunction remove() {                                                               // 13\n\t\t\treturn false;                                                                    //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn remove;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\n                                                                                    //\nVocabulary.deny({                                                                   // 16\n\tinsert: function () {                                                              // 17\n\t\tfunction insert() {                                                               // 17\n\t\t\treturn true;                                                                     //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn insert;                                                                    //\n\t}(),                                                                               //\n\tupdate: function () {                                                              // 18\n\t\tfunction update() {                                                               // 18\n\t\t\treturn true;                                                                     //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn update;                                                                    //\n\t}(),                                                                               //\n\tremove: function () {                                                              // 19\n\t\tfunction remove() {                                                               // 19\n\t\t\treturn true;                                                                     //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn remove;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\n                                                                                    //\nvar VocabularySchema = new SimpleSchema({                                           // 22\n\tterm: {                                                                            // 23\n\t\ttype: String,                                                                     // 24\n\t\tregEx: /^[a-zA-Z]+$/                                                              // 25\n\t},                                                                                 //\n\tdescription: {                                                                     // 27\n\t\ttype: String                                                                      // 28\n\t}                                                                                  //\n});                                                                                 //\n                                                                                    //\nVocabulary.attachSchema(VocabularySchema);                                          // 32\n//////////////////////////////////////////////////////////////////////////////////////\n\n}},\"config\":{\"accounts_t9n.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/config/accounts_t9n.js                                                    //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nT9n.setLanguage('de');                                                              // 1\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"at_config.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/config/at_config.js                                                       //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n// Options                                                                          //\nAccountsTemplates.configure({                                                       // 2\n  defaultLayout: 'layoutSlim',                                                      // 3\n  defaultLayoutRegions: {                                                           // 4\n    footer: 'footer'                                                                // 5\n  },                                                                                //\n  defaultContentRegion: 'main',                                                     // 7\n  showForgotPasswordLink: false,                                                    // 8\n  overrideLoginErrors: true,                                                        // 9\n  enablePasswordChange: true,                                                       // 10\n                                                                                    //\n  // sendVerificationEmail: true,                                                   //\n  // enforceEmailVerification: true,                                                //\n  //confirmPassword: true,                                                          //\n  //continuousValidation: false,                                                    //\n  //displayFormLabels: true,                                                        //\n  //forbidClientAccountCreation: true,                                              //\n  //formValidationFeedback: true,                                                   //\n  // homeRoutePath: '/',                                                            //\n  // showAddRemoveServices: false,                                                  //\n  //showPlaceholders: true,                                                         //\n                                                                                    //\n  negativeValidation: true,                                                         // 23\n  positiveValidation: true,                                                         // 24\n  negativeFeedback: false,                                                          // 25\n  positiveFeedback: true                                                            // 26\n                                                                                    //\n});                                                                                 //\n                                                                                    //\n// Privacy Policy and Terms of Use                                                  //\n//privacyUrl: 'privacy',                                                            //\n//termsUrl: 'terms-of-use',                                                         //\nvar logout = function logout() {                                                    // 33\n  //example redirect after logout                                                   //\n  FlowRouter.go('/sign-in');                                                        // 35\n};                                                                                  //\n                                                                                    //\nAccountsTemplates.configure({                                                       // 38\n  onLogoutHook: logout                                                              // 39\n});                                                                                 //\n//////////////////////////////////////////////////////////////////////////////////////\n\n}},\"router\":{\"routes.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// common/router/routes.js                                                          //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n// *** ROUTE FUNCTIONS                                                              //\n                                                                                    //\ncheckAttentionModeOff = function checkAttentionModeOff() {                          // 3\n\tif (Session.get(ATTENTION_MODE)) {                                                 // 4\n\t\tSession.set(ATTENTION_MODE, false);                                               // 5\n\t}                                                                                  //\n};                                                                                  //\n                                                                                    //\ncheckAttentionModeOn = function checkAttentionModeOn() {                            // 9\n\tif (!Session.get(ATTENTION_MODE)) {                                                // 10\n\t\tSession.set(ATTENTION_MODE, true);                                                // 11\n\t}                                                                                  //\n};                                                                                  //\n                                                                                    //\nsetTrainerPath = function setTrainerPath() {                                        // 15\n\tSession.set('lastPathTrainer', FlowRouter.current().route.path);                   // 16\n};                                                                                  //\n                                                                                    //\nFlowRouter.triggers.enter([AccountsTemplates.ensureSignedIn]);                      // 19\n                                                                                    //\n// *** ROUTE GROUPS                                                                 //\n                                                                                    //\nvar lowRoutes = FlowRouter.group({                                                  // 23\n\tname: \"low\",                                                                       // 24\n\ttriggersEnter: [checkAttentionModeOn],                                             // 25\n\ttriggersExit: []                                                                   // 26\n});                                                                                 //\nvar basicRoutes = FlowRouter.group({                                                // 28\n\tname: \"basic\",                                                                     // 29\n\ttriggersEnter: [checkAttentionModeOff],                                            // 30\n\ttriggersExit: []                                                                   // 31\n});                                                                                 //\n                                                                                    //\nbasicRoutes.trainerRoutes = FlowRouter.group({                                      // 34\n\tname: \"trainer\",                                                                   // 35\n\ttriggersEnter: [setTrainerPath],                                                   // 36\n\ttriggersExit: []                                                                   // 37\n});                                                                                 //\n                                                                                    //\n// *** ROUTES                                                                       //\n                                                                                    //\nbasicRoutes.route('/', {                                                            // 42\n\tname: \"index\",                                                                     // 43\n\taction: function () {                                                              // 44\n\t\tfunction action(params, queryParams) {                                            // 44\n\t\t\tBlazeLayout.render('layoutBasic', {                                              // 45\n\t\t\t\tbar: \"bar\",                                                                     // 46\n\t\t\t\tnav: \"nav\",                                                                     // 47\n\t\t\t\tmain: \"index\"                                                                   // 48\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\nbasicRoutes.route('/favouriten', {                                                  // 52\n\tname: \"favouriten\",                                                                // 53\n\taction: function () {                                                              // 54\n\t\tfunction action(params, queryParams) {                                            // 54\n\t\t\tBlazeLayout.render('layoutBasic', {                                              // 55\n\t\t\t\tbar: \"bar\",                                                                     // 56\n\t\t\t\tnav: \"nav\",                                                                     // 57\n\t\t\t\tmain: \"favouriten\"                                                              // 58\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\nbasicRoutes.route('/trainer', {                                                     // 62\n\tname: \"trainer\",                                                                   // 63\n\taction: function () {                                                              // 64\n\t\tfunction action(params, queryParams) {                                            // 64\n\t\t\tFlowRouter.go(Session.get('lastPathTrainer'));                                   // 65\n\t\t\t// BlazeLayout.render('trainerLayout', {                                         //\n\t\t\t// \tbar: \"bar\",                                                                  //\n\t\t\t// \tnav: \"nav\",                                                                  //\n\t\t\t// \ttrainerNav: \"trainerNav\",                                                    //\n\t\t\t// \tmain: \"trainer\"                                                              //\n\t\t\t// });                                                                           //\n\t\t}                                                                                 // 64\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\nbasicRoutes.trainerRoutes.route('/trainer/lesen', {                                 // 74\n\tname: \"trainerLesen\",                                                              // 75\n\taction: function () {                                                              // 76\n\t\tfunction action(params, queryParams) {                                            // 76\n\t\t\tBlazeLayout.render('trainerLayout', {                                            // 77\n\t\t\t\tbar: \"bar\",                                                                     // 78\n\t\t\t\tnav: \"nav\",                                                                     // 79\n\t\t\t\ttrainerNav: \"trainerNav\",                                                       // 80\n\t\t\t\tmain: \"trainerLesen\",                                                           // 81\n\t\t\t\trandomNav: \"randomNav\"                                                          // 82\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\nbasicRoutes.trainerRoutes.route('/trainer/eingabe', {                               // 86\n\tname: \"trainerEingabe\",                                                            // 87\n\taction: function () {                                                              // 88\n\t\tfunction action(params, queryParams) {                                            // 88\n\t\t\tBlazeLayout.render('trainerLayout', {                                            // 89\n\t\t\t\tbar: \"bar\",                                                                     // 90\n\t\t\t\tnav: \"nav\",                                                                     // 91\n\t\t\t\ttrainerNav: \"trainerNav\",                                                       // 92\n\t\t\t\tmain: \"trainerEingabe\",                                                         // 93\n\t\t\t\trandomNav: \"randomNav\"                                                          // 94\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\nbasicRoutes.trainerRoutes.route('/trainer/wort', {                                  // 98\n\tname: \"trainerWort\",                                                               // 99\n\taction: function () {                                                              // 100\n\t\tfunction action(params, queryParams) {                                            // 100\n\t\t\tBlazeLayout.render('trainerLayout', {                                            // 101\n\t\t\t\tbar: \"bar\",                                                                     // 102\n\t\t\t\tnav: \"nav\",                                                                     // 103\n\t\t\t\ttrainerNav: \"trainerNav\",                                                       // 104\n\t\t\t\tmain: \"trainerWort\",                                                            // 105\n\t\t\t\trandomNav: \"randomNav\"                                                          // 106\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\nbasicRoutes.trainerRoutes.route('/trainer/bedeutung', {                             // 110\n\tname: \"trainerBedeutung\",                                                          // 111\n\taction: function () {                                                              // 112\n\t\tfunction action(params, queryParams) {                                            // 112\n\t\t\tBlazeLayout.render('trainerLayout', {                                            // 113\n\t\t\t\tbar: \"bar\",                                                                     // 114\n\t\t\t\tnav: \"nav\",                                                                     // 115\n\t\t\t\ttrainerNav: \"trainerNav\",                                                       // 116\n\t\t\t\tmain: \"trainerBedeutung\",                                                       // 117\n\t\t\t\trandomNav: \"randomNav\"                                                          // 118\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\n                                                                                    //\nbasicRoutes.route('/vokabelregister', {                                             // 123\n\tname: \"vokabelregister\",                                                           // 124\n\taction: function () {                                                              // 125\n\t\tfunction action(params, queryParams) {                                            // 125\n\t\t\tBlazeLayout.render('layoutBasic', {                                              // 126\n\t\t\t\tbar: \"bar\",                                                                     // 127\n\t\t\t\tnav: \"nav\",                                                                     // 128\n\t\t\t\tmain: \"vokabelregister\"                                                         // 129\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\nbasicRoutes.route('/vokabelregister/:id', {                                         // 133\n\tname: \"vokabelDetail\",                                                             // 134\n\taction: function () {                                                              // 135\n\t\tfunction action(params, queryParams) {                                            // 135\n\t\t\tconsole.log(params);                                                             // 136\n\t\t\tBlazeLayout.render('layoutBasic', {                                              // 137\n\t\t\t\tbar: \"bar\",                                                                     // 138\n\t\t\t\tnav: \"nav\",                                                                     // 139\n\t\t\t\tmain: \"vokabelDetail\"                                                           // 140\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n});                                                                                 //\n                                                                                    //\nlowRoutes.route('/low', {                                                           // 146\n\tname: \"indexLow\",                                                                  // 147\n\taction: function () {                                                              // 148\n\t\tfunction action(params, queryParams) {                                            // 148\n\t\t\tBlazeLayout.render('layoutBasic', {                                              // 149\n\t\t\t\tbar: \"bar\",                                                                     // 150\n\t\t\t\tmain: \"indexLow\"                                                                // 151\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}(),                                                                               //\n\ttriggersEnter: [function (context, redirect) {}]                                   // 154\n});                                                                                 //\n                                                                                    //\nFlowRouter.notFound = {                                                             // 157\n\taction: function () {                                                              // 158\n\t\tfunction action() {                                                               // 158\n\t\t\tBlazeLayout.render('layoutSlim', {                                               // 159\n\t\t\t\tfooter: \"footer\",                                                               // 160\n\t\t\t\tmain: \"pageNotFound\"                                                            // 161\n\t\t\t});                                                                              //\n\t\t}                                                                                 //\n                                                                                    //\n\t\treturn action;                                                                    //\n\t}()                                                                                //\n};                                                                                  //\n                                                                                    //\n//Routes                                                                            //\nAccountsTemplates.configureRoute('changePwd');                                      // 168\n// AccountsTemplates.configureRoute('forgotPwd');                                   //\nAccountsTemplates.configureRoute('resetPwd');                                       // 170\nAccountsTemplates.configureRoute('signIn');                                         // 171\nAccountsTemplates.configureRoute('signUp');                                         // 172\n// AccountsTemplates.configureRoute('verifyEmail');                                 //\n//////////////////////////////////////////////////////////////////////////////////////\n\n}}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/lib/config/accounts.js\");\nrequire(\"./server/lib/config/email.js\");\nrequire(\"./common/aux/aux.js\");\nrequire(\"./common/aux/validation.js\");\nrequire(\"./common/collections/favourites.js\");\nrequire(\"./common/collections/local.js\");\nrequire(\"./common/collections/viewed.js\");\nrequire(\"./common/collections/vocabulary.js\");\nrequire(\"./common/config/accounts_t9n.js\");\nrequire(\"./common/config/at_config.js\");\nrequire(\"./common/router/routes.js\");\nrequire(\"./server/methods.js\");\nrequire(\"./server/publication.js\");\nrequire(\"./server/vocabularySeed.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/lib/config/accounts.js","/server/methods.js","/server/publication.js","/server/vocabularySeed.js","/common/aux/aux.js","/common/aux/validation.js","/common/collections/favourites.js","/common/collections/viewed.js","/common/collections/vocabulary.js","/common/config/accounts_t9n.js","/common/config/at_config.js","/common/router/routes.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["\nMeteor.startup(function() {\n\n});\n","Meteor.methods({\n\ttoggleFavourite(vocabularyId) {\n\n\t\tif (Favourites.find({\n\t\t\t\tvocabularyId: vocabularyId,\n\t\t\t\tuserId: this.userId\n\t\t\t}).count() === 0) {\n\n\t\t\tFavourites.insert({\n\t\t\t\tvocabularyId: vocabularyId\n\t\t\t});\n\t\t} else {\n\t\t\tFavourites.remove({\n\t\t\t\tvocabularyId: vocabularyId\n\t\t\t});\n\t\t}\n\t},\n\tdeleteFavourite(vocabularyId) {\n\t\tlet favEntry = Favourites.findOne({\n\t\t\tvocabularyId: vocabularyId\n\t\t});\n\n\t\tFavourites.remove(favEntry._id);\n\t}\n});\n","Meteor.publish('vocabularyRegister', function(search) {\n\tcheck(search, Match.OneOf(String, null, undefined));\n\n\tlet query = {},\n\t\tprojection = {\n\t\t\tlimit: 0,\n\t\t\tsort: {\n\t\t\t\tterm: 1\n\t\t\t}\n\t\t};\n\n\tif (search) {\n\t\tlet regex = new RegExp(search, 'i');\n\t\tquery = {\n\t\t\t$or: [{\n\t\t\t\tterm: regex\n\t\t\t}, {\n\t\t\t\tdescription: regex\n\t\t\t}]\n\t\t};\n\t\tprojection.limit = 0;\n\t}\n\treturn Vocabulary.find(query, projection);\n});\n\nMeteor.publish(\"vocabularyAll\", function() {\n\tlet data = Vocabulary.find({});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n\nMeteor.publish(\"vocabularyFavourised\", function() {\n\tlet currentUserId = this.userId;\n\tlet favIds = R.pluck('vocabularyId')(Favourites.find({\n\t\tuserId: currentUserId\n\t}).fetch());\n\n\treturn Vocabulary.find({\n\t\t_id: {\n\t\t\t$in: favIds\n\t\t}\n\t}, {\n\t\tsort: {\n\t\t\tterm: 1\n\t\t}\n\t});\n});\n\nMeteor.publish(\"vocabularyWithoutFavourised\", function() {\n\tlet currentUserId = this.userId;\n\tlet favIds = R.pluck('vocabularyId')(Favourites.find({\n\t\tuserId: currentUserId\n\t}).fetch());\n\tlet data = Vocabulary.find({\n\t\t_id: {\n\t\t\t$nin: favIds\n\t\t}\n\t});\n\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n\nMeteor.publish(\"ownedFavourites\", function() {\n\tlet currentUserId = this.userId;\n\tlet data = Favourites.find({\n\t\tuserId: currentUserId\n\t});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n\nMeteor.publish('singleEntry', function(entryId) {\n\treturn Vocabulary.find({\n\t\t_id: entryId\n\t});\n});\n","Meteor.startup(function() {\n\n\t// if (Vocabulary.find().count() === 0) {\n\t// \tfor (let i = 0; i < 300; i++) {\n\t// \t\tVocabulary.insert({\n\t// \t\t\tterm: Fake.word(),\n\t// \t\t\tdescription: Fake.sentence([32])\n\t// \t\t});\n\t// \t}\n\t// };\n});\n","(function(exports) {\n\t/**\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n */\nexports.shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n};\n})(this.Aux = {})\n","isAlphabetic = value => {\n  const filter = /^[A-Za-z\\s]+$/;\n  if (filter.test(value)) {\n    return true;\n  }\n  return false;\n};\n\nisLength64 = value => {\n  if (value.length < 65) {\n    return true;\n  }\n  return false;\n};\n","let FavouritesSchema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn this.userId;\n\t\t}\n\t},\n\tvocabularyId: {\n\t\ttype: String\n\t},\n  createdAt: {\n    type: Date,\n    autoValue: function() {\n      return new Date();\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\nFavourites = new Mongo.Collection('favourites', {});\nFavourites.attachSchema(FavouritesSchema);\n","let ViewedSchema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn this.userId;\n\t\t}\n\t},\n\tvocabularyId: {\n\t\ttype: String\n\t},\n  createdAt: {\n    type: Date,\n    autoValue: function() {\n      return new Date();\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n\ttimesViewed: {\n\t\ttype: Number,\n\t\tdefaultValue: 0\n\t}\n\t// link to page the word was looked up from \n});\n\nViewed = new Mongo.Collection('viewed', {});\nViewed.attachSchema(ViewedSchema);\n","Vocabulary = new Mongo.Collection('vocabulary', {});\n\nif (Meteor.isServer) {\n\tVocabulary._ensureIndex({\n\t\tterm: 1,\n\t\tdescription: 1\n\t});\n}\n\nVocabulary.allow({\n  insert: () => false,\n  update: () => false,\n  remove: () => false\n});\n\nVocabulary.deny({\n  insert: () => true,\n  update: () => true,\n  remove: () => true\n});\n\nlet VocabularySchema = new SimpleSchema({\n\tterm: {\n\t\ttype: String,\n\t\tregEx: /^[a-zA-Z]+$/\n\t},\n\tdescription: {\n\t\ttype: String\n\t}\n});\n\nVocabulary.attachSchema(VocabularySchema);\n","T9n.setLanguage('de');\n","// Options\nAccountsTemplates.configure({\n  defaultLayout: 'layoutSlim',\n  defaultLayoutRegions: {\n    footer: 'footer'\n  },\n  defaultContentRegion: 'main',\n  showForgotPasswordLink: false,\n  overrideLoginErrors: true,\n  enablePasswordChange: true,\n\n  // sendVerificationEmail: true,\n  // enforceEmailVerification: true,\n  //confirmPassword: true,\n  //continuousValidation: false,\n  //displayFormLabels: true,\n  //forbidClientAccountCreation: true,\n  //formValidationFeedback: true,\n  // homeRoutePath: '/',\n  // showAddRemoveServices: false,\n  //showPlaceholders: true,\n\n  negativeValidation: true,\n  positiveValidation: true,\n  negativeFeedback: false,\n  positiveFeedback: true,\n\n  // Privacy Policy and Terms of Use\n  //privacyUrl: 'privacy',\n  //termsUrl: 'terms-of-use',\n});\n\nvar logout = function(){\n    //example redirect after logout\n    FlowRouter.go('/sign-in');\n};\n\nAccountsTemplates.configure({\n    onLogoutHook: logout\n});\n","// *** ROUTE FUNCTIONS\n\ncheckAttentionModeOff = () => {\n\tif (Session.get(ATTENTION_MODE)) {\n\t\tSession.set(ATTENTION_MODE, false)\n\t}\n}\n\ncheckAttentionModeOn = () => {\n\tif (!Session.get(ATTENTION_MODE)) {\n\t\tSession.set(ATTENTION_MODE, true)\n\t}\n}\n\nsetTrainerPath = () => {\n\tSession.set('lastPathTrainer', FlowRouter.current().route.path)\n}\n\nFlowRouter.triggers.enter([AccountsTemplates.ensureSignedIn]);\n\n// *** ROUTE GROUPS\n\nlet lowRoutes = FlowRouter.group({\n\tname: \"low\",\n\ttriggersEnter: [checkAttentionModeOn],\n\ttriggersExit: []\n});\nlet basicRoutes = FlowRouter.group({\n\tname: \"basic\",\n\ttriggersEnter: [checkAttentionModeOff],\n\ttriggersExit: []\n});\n\nbasicRoutes.trainerRoutes = FlowRouter.group({\n\tname: \"trainer\",\n\ttriggersEnter: [setTrainerPath],\n\ttriggersExit: []\n});\n\n// *** ROUTES\n\nbasicRoutes.route('/', {\n\tname: \"index\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layoutBasic', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"index\"\n\t\t});\n\t}\n});\nbasicRoutes.route('/favouriten', {\n\tname: \"favouriten\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layoutBasic', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"favouriten\"\n\t\t});\n\t}\n});\nbasicRoutes.route('/trainer', {\n\tname: \"trainer\",\n\taction: function(params, queryParams) {\n\t\tFlowRouter.go(Session.get('lastPathTrainer'));\n\t\t// BlazeLayout.render('trainerLayout', {\n\t\t// \tbar: \"bar\",\n\t\t// \tnav: \"nav\",\n\t\t// \ttrainerNav: \"trainerNav\",\n\t\t// \tmain: \"trainer\"\n\t\t// });\n\t}\n});\nbasicRoutes.trainerRoutes.route('/trainer/lesen', {\n\tname: \"trainerLesen\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('trainerLayout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\ttrainerNav: \"trainerNav\",\n\t\t\tmain: \"trainerLesen\",\n\t\t\trandomNav: \"randomNav\"\n\t\t});\n\t}\n});\nbasicRoutes.trainerRoutes.route('/trainer/eingabe', {\n\tname: \"trainerEingabe\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('trainerLayout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\ttrainerNav: \"trainerNav\",\n\t\t\tmain: \"trainerEingabe\",\n\t\t\trandomNav: \"randomNav\"\n\t\t});\n\t}\n});\nbasicRoutes.trainerRoutes.route('/trainer/wort', {\n\tname: \"trainerWort\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('trainerLayout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\ttrainerNav: \"trainerNav\",\n\t\t\tmain: \"trainerWort\",\n\t\t\trandomNav: \"randomNav\"\n\t\t});\n\t}\n});\nbasicRoutes.trainerRoutes.route('/trainer/bedeutung', {\n\tname: \"trainerBedeutung\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('trainerLayout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\ttrainerNav: \"trainerNav\",\n\t\t\tmain: \"trainerBedeutung\",\n\t\t\trandomNav: \"randomNav\"\n\t\t});\n\t}\n});\n\nbasicRoutes.route('/vokabelregister', {\n\tname: \"vokabelregister\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layoutBasic', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"vokabelregister\"\n\t\t});\n\t}\n});\nbasicRoutes.route('/vokabelregister/:id', {\n\tname: \"vokabelDetail\",\n\taction: function(params, queryParams) {\n\t\tconsole.log(params);\n\t\tBlazeLayout.render('layoutBasic', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"vokabelDetail\"\n\t\t});\n\t}\n});\n\n\nlowRoutes.route('/low', {\n\tname: \"indexLow\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layoutBasic', {\n\t\t\tbar: \"bar\",\n\t\t\tmain: \"indexLow\"\n\t\t});\n\t},\n\ttriggersEnter: [function(context, redirect) {}]\n});\n\nFlowRouter.notFound = {\n\taction: function() {\n\t\tBlazeLayout.render('layoutSlim', {\n\t\t\tfooter: \"footer\",\n\t\t\tmain: \"pageNotFound\"\n\t\t});\n\t}\n};\n\n\n//Routes\nAccountsTemplates.configureRoute('changePwd');\n// AccountsTemplates.configureRoute('forgotPwd');\nAccountsTemplates.configureRoute('resetPwd');\nAccountsTemplates.configureRoute('signIn');\nAccountsTemplates.configureRoute('signUp');\n// AccountsTemplates.configureRoute('verifyEmail');\n"]}}]