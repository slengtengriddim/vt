[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar _ = Package.underscore._;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar Random = Package.random.Random;\nvar EJSON = Package.ejson.EJSON;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar Security;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"ongoworks:security\":{\"lib\":{\"client\":{\"Security.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ongoworks_security/lib/client/Security.js                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n// We only stub on the client to prevent errors if putting in common code                           //\n                                                                                                    //\nSecurity = {                                                                                        // 3\n  // the starting point of the chain                                                                //\n  permit: function () {                                                                             // 5\n    function permit() {                                                                             // 5\n      return new Security.Rule();                                                                   // 6\n    }                                                                                               //\n                                                                                                    //\n    return permit;                                                                                  //\n  }(),                                                                                              //\n  can: function () {                                                                                // 8\n    function can() {                                                                                // 8\n      return new Security.Check();                                                                  // 9\n    }                                                                                               //\n                                                                                                    //\n    return can;                                                                                     //\n  }(),                                                                                              //\n  defineMethod: function () {                                                                       // 11\n    function securityDefineMethod(name) {                                                           // 11\n      // Check whether a rule with the given name already exists; can't overwrite                   //\n      if (Security.Rule.prototype[name]) {                                                          // 13\n        throw new Error('A security method with the name \"' + name + '\" has already been defined');\n      }                                                                                             //\n      Security.Rule.prototype[name] = function () {                                                 // 16\n        return this;                                                                                // 17\n      };                                                                                            //\n    }                                                                                               //\n                                                                                                    //\n    return securityDefineMethod;                                                                    //\n  }()                                                                                               //\n};                                                                                                  //\n                                                                                                    //\nMongo.Collection.prototype.permit = function () {                                                   // 22\n  return Security.permit().collections(this);                                                       // 23\n};                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Security.Rule.js\":[\"babel-runtime/helpers/classCallCheck\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ongoworks_security/lib/client/Security.Rule.js                                          //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");                             //\n                                                                                                    //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                    //\n                                                                                                    //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }   //\n                                                                                                    //\n// We only stub on the client to prevent errors if putting in common code                           //\n                                                                                                    //\nSecurity.Rule = function () {                                                                       // 3\n  function _class(types) {                                                                          // 4\n    (0, _classCallCheck3[\"default\"])(this, _class);                                                 //\n  }                                                                                                 //\n                                                                                                    //\n  _class.prototype.collections = function () {                                                      //\n    function collections(_collections) {                                                            //\n      return this;                                                                                  // 7\n    }                                                                                               //\n                                                                                                    //\n    return collections;                                                                             //\n  }();                                                                                              //\n                                                                                                    //\n  _class.prototype.allowInClientCode = function () {                                                //\n    function allowInClientCode() {}                                                                 //\n                                                                                                    //\n    return allowInClientCode;                                                                       //\n  }();                                                                                              //\n                                                                                                    //\n  _class.prototype.allow = function () {                                                            //\n    function allow() {                                                                              //\n      return true;                                                                                  // 13\n    }                                                                                               //\n                                                                                                    //\n    return allow;                                                                                   //\n  }();                                                                                              //\n                                                                                                    //\n  return _class;                                                                                    //\n}();                                                                                                //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Security.Check.js\":[\"babel-runtime/helpers/classCallCheck\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ongoworks_security/lib/client/Security.Check.js                                         //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");                             //\n                                                                                                    //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                    //\n                                                                                                    //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }   //\n                                                                                                    //\n// We only stub on the client to prevent errors if putting in common code                           //\n                                                                                                    //\nSecurity.Check = function () {                                                                      // 3\n  function _class() {                                                                               // 4\n    (0, _classCallCheck3[\"default\"])(this, _class);                                                 //\n  }                                                                                                 //\n                                                                                                    //\n  _class.prototype[\"for\"] = function () {                                                           //\n    function _for() {                                                                               //\n      return this;                                                                                  // 7\n    }                                                                                               //\n                                                                                                    //\n    return _for;                                                                                    //\n  }();                                                                                              //\n                                                                                                    //\n  _class.prototype.insert = function () {                                                           //\n    function insert() {                                                                             //\n      return this;                                                                                  // 11\n    }                                                                                               //\n                                                                                                    //\n    return insert;                                                                                  //\n  }();                                                                                              //\n                                                                                                    //\n  _class.prototype.update = function () {                                                           //\n    function update() {                                                                             //\n      return this;                                                                                  // 15\n    }                                                                                               //\n                                                                                                    //\n    return update;                                                                                  //\n  }();                                                                                              //\n                                                                                                    //\n  _class.prototype.remove = function () {                                                           //\n    function remove() {                                                                             //\n      return this;                                                                                  // 19\n    }                                                                                               //\n                                                                                                    //\n    return remove;                                                                                  //\n  }();                                                                                              //\n                                                                                                    //\n  _class.prototype.check = function () {                                                            //\n    function check() {                                                                              //\n      return true;                                                                                  // 23\n    }                                                                                               //\n                                                                                                    //\n    return check;                                                                                   //\n  }();                                                                                              //\n                                                                                                    //\n  _class.prototype[\"throw\"] = function () {                                                         //\n    function _throw() {}                                                                            //\n                                                                                                    //\n    return _throw;                                                                                  //\n  }();                                                                                              //\n                                                                                                    //\n  return _class;                                                                                    //\n}();                                                                                                //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"builtInRules.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ongoworks_security/lib/builtInRules.js                                                  //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n/*                                                                                                  //\n * This file defines built-in restriction methods                                                   //\n */                                                                                                 //\n                                                                                                    //\n/*                                                                                                  //\n * No one                                                                                           //\n */                                                                                                 //\n                                                                                                    //\nSecurity.defineMethod(\"never\", {                                                                    // 9\n  fetch: [],                                                                                        // 10\n  transform: null,                                                                                  // 11\n  allow: function () {                                                                              // 12\n    function allow() {                                                                              //\n      return false;                                                                                 // 13\n    }                                                                                               //\n                                                                                                    //\n    return allow;                                                                                   //\n  }()                                                                                               //\n});                                                                                                 //\n                                                                                                    //\n/*                                                                                                  //\n * Logged In                                                                                        //\n */                                                                                                 //\n                                                                                                    //\nSecurity.defineMethod(\"ifLoggedIn\", {                                                               // 21\n  fetch: [],                                                                                        // 22\n  transform: null,                                                                                  // 23\n  allow: function () {                                                                              // 24\n    function allow(type, arg, userId) {                                                             //\n      return !!userId;                                                                              // 25\n    }                                                                                               //\n                                                                                                    //\n    return allow;                                                                                   //\n  }()                                                                                               //\n});                                                                                                 //\n                                                                                                    //\n/*                                                                                                  //\n * Specific User ID                                                                                 //\n */                                                                                                 //\n                                                                                                    //\nSecurity.defineMethod(\"ifHasUserId\", {                                                              // 33\n  fetch: [],                                                                                        // 34\n  transform: null,                                                                                  // 35\n  allow: function () {                                                                              // 36\n    function allow(type, arg, userId) {                                                             //\n      return userId === arg;                                                                        // 37\n    }                                                                                               //\n                                                                                                    //\n    return allow;                                                                                   //\n  }()                                                                                               //\n});                                                                                                 //\n                                                                                                    //\n/*                                                                                                  //\n * Specific Roles                                                                                   //\n */                                                                                                 //\n                                                                                                    //\n/*                                                                                                  //\n * alanning:roles support                                                                           //\n */                                                                                                 //\nif (Package && Package[\"alanning:roles\"]) {                                                         // 48\n                                                                                                    //\n  var Roles = Package[\"alanning:roles\"].Roles;                                                      // 50\n                                                                                                    //\n  Security.defineMethod(\"ifHasRole\", {                                                              // 52\n    fetch: [],                                                                                      // 53\n    transform: null,                                                                                // 54\n    allow: function () {                                                                            // 55\n      function allow(type, arg, userId) {                                                           //\n        if (!arg) throw new Error('ifHasRole security rule method requires an argument');           // 56\n        if (arg.role) {                                                                             // 57\n          return Roles.userIsInRole(userId, arg.role, arg.group);                                   // 58\n        } else {                                                                                    //\n          return Roles.userIsInRole(userId, arg);                                                   // 60\n        }                                                                                           //\n      }                                                                                             //\n                                                                                                    //\n      return allow;                                                                                 //\n    }()                                                                                             //\n  });                                                                                               //\n}                                                                                                   //\n                                                                                                    //\n/*                                                                                                  //\n * nicolaslopezj:roles support                                                                      //\n * Note: doesn't support groups                                                                     //\n */                                                                                                 //\nif (Package && Package[\"nicolaslopezj:roles\"]) {                                                    // 71\n                                                                                                    //\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;                                                 // 73\n                                                                                                    //\n  Security.defineMethod(\"ifHasRole\", {                                                              // 75\n    fetch: [],                                                                                      // 76\n    transform: null,                                                                                // 77\n    allow: function () {                                                                            // 78\n      function allow(type, arg, userId) {                                                           //\n        if (!arg) throw new Error('ifHasRole security rule method requires an argument');           // 79\n        return Roles.userHasRole(userId, arg);                                                      // 80\n      }                                                                                             //\n                                                                                                    //\n      return allow;                                                                                 //\n    }()                                                                                             //\n  });                                                                                               //\n}                                                                                                   //\n                                                                                                    //\n/*                                                                                                  //\n * Specific Properties                                                                              //\n */                                                                                                 //\n                                                                                                    //\nSecurity.defineMethod(\"onlyProps\", {                                                                // 90\n  fetch: [],                                                                                        // 91\n  transform: null,                                                                                  // 92\n  allow: function () {                                                                              // 93\n    function allow(type, arg, userId, doc, fieldNames) {                                            //\n      if (!_.isArray(arg)) arg = [arg];                                                             // 94\n                                                                                                    //\n      fieldNames = fieldNames || _.keys(doc);                                                       // 96\n                                                                                                    //\n      return _.every(fieldNames, function (fieldName) {                                             // 98\n        return _.contains(arg, fieldName);                                                          // 99\n      });                                                                                           //\n    }                                                                                               //\n                                                                                                    //\n    return allow;                                                                                   //\n  }()                                                                                               //\n});                                                                                                 //\n                                                                                                    //\nSecurity.defineMethod(\"exceptProps\", {                                                              // 104\n  fetch: [],                                                                                        // 105\n  transform: null,                                                                                  // 106\n  allow: function () {                                                                              // 107\n    function allow(type, arg, userId, doc, fieldNames) {                                            //\n      if (!_.isArray(arg)) arg = [arg];                                                             // 108\n                                                                                                    //\n      fieldNames = fieldNames || _.keys(doc);                                                       // 110\n                                                                                                    //\n      return !_.any(fieldNames, function (fieldName) {                                              // 112\n        return _.contains(arg, fieldName);                                                          // 113\n      });                                                                                           //\n    }                                                                                               //\n                                                                                                    //\n    return allow;                                                                                   //\n  }()                                                                                               //\n});                                                                                                 //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./node_modules/meteor/ongoworks:security/lib/client/Security.js\");\nrequire(\"./node_modules/meteor/ongoworks:security/lib/client/Security.Rule.js\");\nrequire(\"./node_modules/meteor/ongoworks:security/lib/client/Security.Check.js\");\nrequire(\"./node_modules/meteor/ongoworks:security/lib/builtInRules.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['ongoworks:security'] = {}, {\n  Security: Security\n});\n\n})();\n","servePath":"/packages/ongoworks_security.js","sourceMap":{"version":3,"sources":["/packages/ongoworks:security/lib/client/Security.js","/packages/ongoworks:security/lib/client/Security.Rule.js","/packages/ongoworks:security/lib/client/Security.Check.js","/packages/ongoworks:security/lib/builtInRules.js"],"names":[],"mappings":"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","file":"/packages/ongoworks_security.js","sourcesContent":["// We only stub on the client to prevent errors if putting in common code\n\nSecurity = {\n  // the starting point of the chain\n  permit: function permit() {\n    return new Security.Rule();\n  },\n  can: function can() {\n    return new Security.Check();\n  },\n  defineMethod: function securityDefineMethod(name) {\n    // Check whether a rule with the given name already exists; can't overwrite\n    if (Security.Rule.prototype[name]) {\n      throw new Error('A security method with the name \"' + name + '\" has already been defined');\n    }\n    Security.Rule.prototype[name] = function () {\n      return this;\n    };\n  }\n};\n\nMongo.Collection.prototype.permit = function () {\n  return Security.permit().collections(this);\n};\n","// We only stub on the client to prevent errors if putting in common code\n\nSecurity.Rule = class {\n  constructor(types) {}\n\n  collections(collections) {\n    return this;\n  }\n\n  allowInClientCode() {}\n\n  allow() {\n    return true;\n  }\n}\n","// We only stub on the client to prevent errors if putting in common code\n\nSecurity.Check = class {\n  constructor() {}\n\n  for() {\n    return this;\n  }\n\n  insert() {\n    return this;\n  }\n\n  update() {\n    return this;\n  }\n\n  remove() {\n    return this;\n  }\n\n  check() {\n    return true;\n  }\n\n  throw() {}\n}\n","/*\n * This file defines built-in restriction methods\n */\n\n/*\n * No one\n */\n\nSecurity.defineMethod(\"never\", {\n  fetch: [],\n  transform: null,\n  allow() {\n    return false;\n  },\n});\n\n/*\n * Logged In\n */\n\nSecurity.defineMethod(\"ifLoggedIn\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return !!userId;\n  },\n});\n\n/*\n * Specific User ID\n */\n\nSecurity.defineMethod(\"ifHasUserId\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return userId === arg;\n  },\n});\n\n/*\n * Specific Roles\n */\n\n/*\n * alanning:roles support\n */\nif (Package && Package[\"alanning:roles\"]) {\n\n  var Roles = Package[\"alanning:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      if (arg.role) {\n        return Roles.userIsInRole(userId, arg.role, arg.group);\n      } else {\n        return Roles.userIsInRole(userId, arg);\n      }\n    },\n  });\n\n}\n\n/*\n * nicolaslopezj:roles support\n * Note: doesn't support groups\n */\nif (Package && Package[\"nicolaslopezj:roles\"]) {\n\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      return Roles.userHasRole(userId, arg);\n    }\n  });\n\n}\n\n/*\n * Specific Properties\n */\n\nSecurity.defineMethod(\"onlyProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return _.every(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n\nSecurity.defineMethod(\"exceptProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return !_.any(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n"]}}]