[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar FlowRouter = Package['kadira:flow-router'].FlowRouter;\nvar BlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nvar ActiveRoute = Package['zimme:active-route'].ActiveRoute;\nvar AutoForm = Package['aldeed:autoform'].AutoForm;\nvar Roles = Package['alanning:roles'].Roles;\nvar Helpers = Package['raix:handlebar-helpers'].Helpers;\nvar moment = Package['momentjs:moment'].moment;\nvar Tabular = Package['aldeed:tabular'].Tabular;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Session = Package.session.Session;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Template = Package.templating.Template;\nvar Collection2 = Package['aldeed:collection2-core'].Collection2;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar Mongo = Package.mongo.Mongo;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar __coffeescriptShare, AdminDashboard, dataTableOptions, t, pageY, currTop;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/both/AdminDashboard.coffee.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\n                                                                                                                       // 1\n                                                                                                                       //\nAdminDashboard = {                                                                                                     // 1\n  schemas: {},                                                                                                         // 2\n  sidebarItems: [],                                                                                                    // 2\n  collectionItems: [],                                                                                                 // 2\n  alertSuccess: function(message) {                                                                                    // 2\n    Session.set('adminError', null);                                                                                   // 6\n    return Session.set('adminSuccess', message);                                                                       //\n  },                                                                                                                   //\n  alertFailure: function(message) {                                                                                    // 2\n    Session.set('adminSuccess', null);                                                                                 // 9\n    return Session.set('adminError', message);                                                                         //\n  },                                                                                                                   //\n  checkAdmin: function() {                                                                                             // 2\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'])) {                                                             // 13\n      Meteor.call('adminCheckAdmin');                                                                                  // 14\n      if (typeof (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.nonAdminRedirectRoute : void 0) === \"string\") {\n        Router.go(AdminConfig.nonAdminRedirectRoute);                                                                  // 16\n      }                                                                                                                //\n    }                                                                                                                  //\n    if (typeof this.next === 'function') {                                                                             // 17\n      return this.next();                                                                                              //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  adminRoutes: ['adminDashboard', 'adminDashboardUsersNew', 'adminDashboardUsersEdit', 'adminDashboardView', 'adminDashboardNew', 'adminDashboardEdit'],\n  collectionLabel: function(collection) {                                                                              // 2\n    if (collection === 'Users') {                                                                                      // 21\n      return 'Users';                                                                                                  //\n    } else if ((collection != null) && typeof AdminConfig.collections[collection].label === 'string') {                //\n      return AdminConfig.collections[collection].label;                                                                //\n    } else {                                                                                                           //\n      return Session.get('admin_collection_name');                                                                     //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  addSidebarItem: function(title, url, options) {                                                                      // 2\n    var item;                                                                                                          // 28\n    item = {                                                                                                           // 28\n      title: title                                                                                                     // 28\n    };                                                                                                                 //\n    if (_.isObject(url) && typeof options === 'undefined') {                                                           // 29\n      item.options = url;                                                                                              // 30\n    } else {                                                                                                           //\n      item.url = url;                                                                                                  // 32\n      item.options = options;                                                                                          // 32\n    }                                                                                                                  //\n    return this.sidebarItems.push(item);                                                                               //\n  },                                                                                                                   //\n  extendSidebarItem: function(title, urls) {                                                                           // 2\n    var existing;                                                                                                      // 38\n    if (_.isObject(urls)) {                                                                                            // 38\n      urls = [urls];                                                                                                   // 38\n    }                                                                                                                  //\n    existing = _.find(this.sidebarItems, function(item) {                                                              // 38\n      return item.title === title;                                                                                     //\n    });                                                                                                                //\n    if (existing) {                                                                                                    // 41\n      return existing.options.urls = _.union(existing.options.urls, urls);                                             //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  addCollectionItem: function(fn) {                                                                                    // 2\n    return this.collectionItems.push(fn);                                                                              //\n  },                                                                                                                   //\n  path: function(s) {                                                                                                  // 2\n    var path;                                                                                                          // 48\n    path = '/admin';                                                                                                   // 48\n    if (typeof s === 'string' && s.length > 0) {                                                                       // 49\n      path += (s[0] === '/' ? '' : '/') + s;                                                                           // 50\n    }                                                                                                                  //\n    return path;                                                                                                       //\n  }                                                                                                                    //\n};                                                                                                                     //\n                                                                                                                       //\nAdminDashboard.schemas.newUser = new SimpleSchema({                                                                    // 1\n  email: {                                                                                                             // 55\n    type: String,                                                                                                      // 56\n    label: \"Email address\"                                                                                             // 56\n  },                                                                                                                   //\n  chooseOwnPassword: {                                                                                                 // 55\n    type: Boolean,                                                                                                     // 59\n    label: 'Let this user choose their own password with an email',                                                    // 59\n    defaultValue: true                                                                                                 // 59\n  },                                                                                                                   //\n  password: {                                                                                                          // 55\n    type: String,                                                                                                      // 63\n    label: 'Password',                                                                                                 // 63\n    optional: true                                                                                                     // 63\n  },                                                                                                                   //\n  sendPassword: {                                                                                                      // 55\n    type: Boolean,                                                                                                     // 67\n    label: 'Send this user their password by email',                                                                   // 67\n    optional: true                                                                                                     // 67\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nAdminDashboard.schemas.sendResetPasswordEmail = new SimpleSchema({                                                     // 1\n  _id: {                                                                                                               // 72\n    type: String                                                                                                       // 73\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nAdminDashboard.schemas.changePassword = new SimpleSchema({                                                             // 1\n  _id: {                                                                                                               // 76\n    type: String                                                                                                       // 77\n  },                                                                                                                   //\n  password: {                                                                                                          // 76\n    type: String                                                                                                       // 79\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/both/routes.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nvar fadminRoutes = FlowRouter.group({                                                                                  // 2\n  name: \"AdminController\",                                                                                             // 3\n  prefix: '/admin',                                                                                                    // 4\n  subscriptions: function() {                                                                                          // 5\n    this.register('fadminUsers', Meteor.subscribe('adminUsers'));                                                      // 6\n    this.register('fadminUser', Meteor.subscribe('adminUser'));                                                        // 7\n    this.register('fadminCollectionsCount', Meteor.subscribe('adminCollectionsCount'));                                // 8\n  },                                                                                                                   // 9\n triggersEnter: [                                                                                                      // 10\n  \tfunction(context) {                                                                                                 // 11\n  \t\tif(!Roles.userIsInRole (Meteor.userId(),['admin']))                                                                // 12\n  \t\t{                                                                                                                  // 13\n  \t\t\tMeteor.call('adminCheckAdmin');                                                                                   // 14\n  \t\t\t//if (typeof AdminConfig.nonAdminRedirectRoute == 'string')                                                       // 15\n  \t\t\t//\tFlowRouter.go(AdminController.nonAdminRedirectRoute);                                                          // 16\n  \t\t}                                                                                                                  // 17\n  \t},                                                                                                                  // 18\n    function(context) {                                                                                                // 19\n      Session.set('adminSuccess', null);                                                                               // 20\n      Session.set('adminError', null);                                                                                 // 21\n      Session.set('admin_title', null);                                                                                // 22\n      Session.set('admin_subtitle', null);                                                                             // 23\n      Session.set('admin_collection_name', null);                                                                      // 24\n      Session.set('admin_collection_page', null);                                                                      // 25\n      Session.set('admin_id',null);                                                                                    // 26\n      Session.set('admin_doc', null);                                                                                  // 27\n    }                                                                                                                  // 28\n  ]                                                                                                                    // 29\n});                                                                                                                    // 30\n                                                                                                                       // 31\nfadminRoutes.route('/',{                                                                                               // 32\n\tname: 'adminDashboard',                                                                                               // 33\n\ttriggersEnter: [                                                                                                      // 34\n\t function(context){                                                                                                   // 35\n\t \tSession.set('admin_title',\"Dashboard\");                                                                             // 36\n\t \tSession.set('admin_collection_name',\"\");                                                                            // 37\n\t \tSession.set('admin_collection_page',\"\");                                                                            // 38\n\t }                                                                                                                    // 39\n\t],                                                                                                                    // 40\n\taction: function ()                                                                                                   // 41\n\t{                                                                                                                     // 42\n\t\tBlazeLayout.render('fAdminLayout', {main: 'AdminDashboard'});                                                        // 43\n\t}                                                                                                                     // 44\n});                                                                                                                    // 45\n                                                                                                                       // 46\n                                                                                                                       // 47\nfadminRoutes.route('/view/:collectionName',{                                                                           // 48\n\ttriggersEnter: [                                                                                                      // 49\n\t\tfunction(context){                                                                                                   // 50\n\t\tSession.set('admin_title', context.params.collectionName);                                                           // 51\n\t\tSession.set('admin_subtitle', 'View');                                                                               // 52\n\t\tSession.set('admin_collection_page', 'view');                                                                        // 53\n\t\tSession.set('admin_collection_name', context.params.collectionName);                                                 // 54\n\t}],                                                                                                                   // 55\n\ttriggersExit: [                                                                                                       // 56\n\t\tfunction(context){                                                                                                   // 57\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminLoading'});                                                          // 58\n\t\t}                                                                                                                    // 59\n\t],                                                                                                                    // 60\n\taction: function(params)                                                                                              // 61\n\t{                                                                                                                     // 62\n\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardView'});                                                     // 63\n\t}                                                                                                                     // 64\n});                                                                                                                    // 65\n                                                                                                                       // 66\nfadminRoutes.route('/new/:collectionName',{                                                                            // 67\n\ttriggersEnter: [function(context){                                                                                    // 68\n\t\tSession.set('admin_title', context.params.collectionName);                                                           // 69\n\t\tSession.set('admin_subtitle', 'Create New');                                                                         // 70\n\t\tSession.set('admin_collection_page', 'new');                                                                         // 71\n\t\tSession.set('admin_collection_name', context.params.collectionName);                                                 // 72\n\t}],                                                                                                                   // 73\n\ttriggersExit: [                                                                                                       // 74\n\t\tfunction(context){                                                                                                   // 75\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminLoading'});                                                          // 76\n\t\t}                                                                                                                    // 77\n\t],                                                                                                                    // 78\n\taction: function(params)                                                                                              // 79\n\t{\tif(params.collectionName == 'Users')                                                                                // 80\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardUsersNew'});                                                // 81\n\t\telse                                                                                                                 // 82\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardNew'});                                                     // 83\n\t}                                                                                                                     // 84\n});                                                                                                                    // 85\n                                                                                                                       // 86\nfadminRoutes.route('/edit/:collectionName/:_id',{                                                                      // 87\n\ttriggersEnter: [function(context){                                                                                    // 88\n\t\tSession.set('admin_title', context.params.collectionName);                                                           // 89\n\t\tSession.set('admin_subtitle', 'Edit');                                                                               // 90\n\t\tSession.set('admin_collection_page', 'edit');                                                                        // 91\n\t\tSession.set('admin_collection_name', context.params.collectionName);                                                 // 92\n\t\tif (context.params.collectionName == 'Users')                                                                        // 93\n\t\t\tSession.set('admin_id', context.params._id);                                                                        // 94\n\t\telse                                                                                                                 // 95\n\t\t\tSession.set('admin_id', null);                                                                                      // 96\n                                                                                                                       // 97\n\t}],                                                                                                                   // 98\n\ttriggersExit: [                                                                                                       // 99\n\t\tfunction(context){                                                                                                   // 100\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminLoading'});                                                          // 101\n\t\t\tSession.set('admin_id',null);                                                                                       // 102\n\t\t}                                                                                                                    // 103\n\t],                                                                                                                    // 104\n\tsubscriptions : function(params){                                                                                     // 105\n\t\tif (params.collectionName !== 'Users')                                                                               // 106\n\t\tthis.register('admindoc2edit', Meteor.subscribe('adminCollectionDoc', params.collectionName, parseID(params._id)));  // 107\n\t},                                                                                                                    // 108\n\taction: function(params)                                                                                              // 109\n\t{                                                                                                                     // 110\n\t\tif(params.collectionName == 'Users')                                                                                 // 111\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardUsersEdit'});                                               // 112\n\t\telse                                                                                                                 // 113\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardEdit'});                                                    // 114\n\t}                                                                                                                     // 115\n});                                                                                                                    // 116\n                                                                                                                       // 117\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/both/utils.coffee.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nthis.adminCollectionObject = function(collection) {                                                                    // 1\n  if (typeof AdminConfig.collections[collection] !== 'undefined' && typeof AdminConfig.collections[collection].collectionObject !== 'undefined') {\n    return AdminConfig.collections[collection].collectionObject;                                                       //\n  } else {                                                                                                             //\n    return lookup(collection);                                                                                         //\n  }                                                                                                                    //\n};                                                                                                                     // 1\n                                                                                                                       //\nthis.adminCallback = function(name, args, callback) {                                                                  // 1\n  var ref1, ref2, stop;                                                                                                // 8\n  stop = false;                                                                                                        // 8\n  if (typeof (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? (ref1 = AdminConfig.callbacks) != null ? ref1[name] : void 0 : void 0) === 'function') {\n    stop = (ref2 = AdminConfig.callbacks)[name].apply(ref2, args) === false;                                           // 10\n  }                                                                                                                    //\n  if (typeof callback === 'function') {                                                                                // 11\n    if (!stop) {                                                                                                       // 12\n      return callback.apply(null, args);                                                                               //\n    }                                                                                                                  //\n  }                                                                                                                    //\n};                                                                                                                     // 7\n                                                                                                                       //\nthis.lookup = function(obj, root, required) {                                                                          // 1\n  var arr, ref;                                                                                                        // 15\n  if (required == null) {                                                                                              //\n    required = true;                                                                                                   //\n  }                                                                                                                    //\n  if (typeof root === 'undefined') {                                                                                   // 15\n    root = Meteor.isServer ? global : window;                                                                          // 16\n  }                                                                                                                    //\n  if (typeof obj === 'string') {                                                                                       // 17\n    ref = root;                                                                                                        // 18\n    arr = obj.split('.');                                                                                              // 18\n    while (arr.length && (ref = ref[arr.shift()])) {                                                                   // 20\n      continue;                                                                                                        // 20\n    }                                                                                                                  //\n    if (!ref && required) {                                                                                            // 21\n      throw new Error(obj + ' is not in the ' + root.toString());                                                      // 22\n    } else {                                                                                                           //\n      return ref;                                                                                                      // 24\n    }                                                                                                                  //\n  }                                                                                                                    //\n  return obj;                                                                                                          // 25\n};                                                                                                                     // 14\n                                                                                                                       //\nthis.parseID = function(id) {                                                                                          // 1\n  if (typeof id === 'string') {                                                                                        // 28\n    if (id.indexOf(\"ObjectID\") > -1) {                                                                                 // 29\n      return new Mongo.ObjectID(id.slice(id.indexOf('\"') + 1, id.lastIndexOf('\"')));                                   // 30\n    } else {                                                                                                           //\n      return id;                                                                                                       // 32\n    }                                                                                                                  //\n  } else {                                                                                                             //\n    return id;                                                                                                         // 34\n  }                                                                                                                    //\n};                                                                                                                     // 27\n                                                                                                                       //\nthis.parseIDs = function(ids) {                                                                                        // 1\n  return _.map(ids, function(id) {                                                                                     // 37\n    return parseID(id);                                                                                                //\n  });                                                                                                                  //\n};                                                                                                                     // 36\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/both/startup.coffee.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar adminCreateTables, adminDelButton, adminEditButton, adminEditDelButtons, adminPublishTables, adminTablePubName, adminTablesDom, defaultColumns;\n                                                                                                                       //\nthis.AdminTables = {};                                                                                                 // 1\n                                                                                                                       //\nadminTablesDom = '<\"box\"<\"box-header\"<\"box-toolbar\"<\"pull-left\"<lf>><\"pull-right\"p>>><\"box-body\"t>>';                  // 1\n                                                                                                                       //\nadminEditButton = {                                                                                                    // 1\n  data: '_id',                                                                                                         // 5\n  title: 'Edit',                                                                                                       // 5\n  createdCell: function(node, cellData, rowData) {                                                                     // 5\n    return $(node).html(Blaze.toHTMLWithData(Template.adminEditBtn, {                                                  //\n      _id: cellData                                                                                                    // 9\n    }, node));                                                                                                         //\n  },                                                                                                                   //\n  width: '40px',                                                                                                       // 5\n  orderable: false                                                                                                     // 5\n};                                                                                                                     //\n                                                                                                                       //\nadminDelButton = {                                                                                                     // 1\n  data: '_id',                                                                                                         // 13\n  title: 'Delete',                                                                                                     // 13\n  createdCell: function(node, cellData, rowData) {                                                                     // 13\n    return $(node).html(Blaze.toHTMLWithData(Template.adminDeleteBtn, {                                                //\n      _id: cellData                                                                                                    // 17\n    }, node));                                                                                                         //\n  },                                                                                                                   //\n  width: '40px',                                                                                                       // 13\n  orderable: false                                                                                                     // 13\n};                                                                                                                     //\n                                                                                                                       //\nadminEditDelButtons = [adminEditButton, adminDelButton];                                                               // 1\n                                                                                                                       //\ndefaultColumns = function() {                                                                                          // 1\n  return [                                                                                                             //\n    {                                                                                                                  //\n      data: '_id',                                                                                                     // 28\n      title: 'ID'                                                                                                      // 28\n    }                                                                                                                  //\n  ];                                                                                                                   //\n};                                                                                                                     // 27\n                                                                                                                       //\nAdminTables.Users = new Tabular.Table({                                                                                // 1\n  changeSelector: function(selector, userId) {                                                                         // 34\n    var $or;                                                                                                           // 35\n    $or = selector['$or'];                                                                                             // 35\n    $or && (selector['$or'] = _.map($or, function(exp) {                                                               // 35\n      var ref;                                                                                                         // 37\n      if (((ref = exp.emails) != null ? ref['$regex'] : void 0) != null) {                                             // 37\n        return {                                                                                                       //\n          emails: {                                                                                                    // 38\n            $elemMatch: {                                                                                              // 38\n              address: exp.emails                                                                                      // 38\n            }                                                                                                          //\n          }                                                                                                            //\n        };                                                                                                             //\n      } else {                                                                                                         //\n        return exp;                                                                                                    //\n      }                                                                                                                //\n    }));                                                                                                               //\n    return selector;                                                                                                   //\n  },                                                                                                                   //\n  name: 'Users',                                                                                                       // 34\n  collection: Meteor.users,                                                                                            // 34\n  columns: _.union([                                                                                                   // 34\n    {                                                                                                                  //\n      data: '_id',                                                                                                     // 46\n      title: 'Admin',                                                                                                  // 46\n      createdCell: function(node, cellData, rowData) {                                                                 // 46\n        return $(node).html(Blaze.toHTMLWithData(Template.adminUsersIsAdmin, {                                         //\n          _id: cellData                                                                                                // 51\n        }, node));                                                                                                     //\n      },                                                                                                               //\n      width: '40px'                                                                                                    // 46\n    }, {                                                                                                               //\n      data: 'emails',                                                                                                  // 54\n      title: 'Email',                                                                                                  // 54\n      render: function(value) {                                                                                        // 54\n        if (value) {                                                                                                   // 58\n          return value[0].address;                                                                                     //\n        } else {                                                                                                       //\n          return '';                                                                                                   //\n        }                                                                                                              //\n      },                                                                                                               //\n      searchable: true                                                                                                 // 54\n    }, {                                                                                                               //\n      data: 'emails',                                                                                                  // 61\n      title: 'Mail',                                                                                                   // 61\n      createdCell: function(node, cellData, rowData) {                                                                 // 61\n        return $(node).html(Blaze.toHTMLWithData(Template.adminUsersMailBtn, {                                         //\n          emails: cellData                                                                                             // 66\n        }, node));                                                                                                     //\n      },                                                                                                               //\n      width: '40px'                                                                                                    // 61\n    }, {                                                                                                               //\n      data: 'createdAt',                                                                                               // 69\n      title: 'Joined'                                                                                                  // 69\n    }                                                                                                                  //\n  ], adminEditDelButtons),                                                                                             //\n  dom: adminTablesDom                                                                                                  // 34\n});                                                                                                                    //\n                                                                                                                       //\nadminTablePubName = function(collection) {                                                                             // 1\n  return \"admin_tabular_\" + collection;                                                                                //\n};                                                                                                                     // 73\n                                                                                                                       //\nadminCreateTables = function(collections) {                                                                            // 1\n  return _.each(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0, function(collection, name) {\n    var columns;                                                                                                       // 78\n    _.defaults(collection, {                                                                                           // 78\n      showEditColumn: true,                                                                                            // 78\n      showDelColumn: true                                                                                              // 78\n    });                                                                                                                //\n    columns = _.map(collection.tableColumns, function(column) {                                                        // 78\n      var createdCell;                                                                                                 // 84\n      if (column.template) {                                                                                           // 84\n        createdCell = function(node, cellData, rowData) {                                                              // 85\n          $(node).html('');                                                                                            // 86\n          return Blaze.renderWithData(Template[column.template], {                                                     //\n            value: cellData,                                                                                           // 87\n            doc: rowData                                                                                               // 87\n          }, node);                                                                                                    //\n        };                                                                                                             //\n      }                                                                                                                //\n      return {                                                                                                         //\n        data: column.name,                                                                                             // 89\n        title: column.label,                                                                                           // 89\n        createdCell: createdCell                                                                                       // 89\n      };                                                                                                               //\n    });                                                                                                                //\n    if (columns.length === 0) {                                                                                        // 93\n      columns = defaultColumns();                                                                                      // 94\n    }                                                                                                                  //\n    if (collection.showEditColumn) {                                                                                   // 96\n      columns.push(adminEditButton);                                                                                   // 97\n    }                                                                                                                  //\n    if (collection.showDelColumn) {                                                                                    // 98\n      columns.push(adminDelButton);                                                                                    // 99\n    }                                                                                                                  //\n    return AdminTables[name] = new Tabular.Table({                                                                     //\n      name: name,                                                                                                      // 102\n      collection: adminCollectionObject(name),                                                                         // 102\n      pub: collection.children && adminTablePubName(name),                                                             // 102\n      sub: collection.sub,                                                                                             // 102\n      columns: columns,                                                                                                // 102\n      extraFields: collection.extraFields,                                                                             // 102\n      dom: adminTablesDom                                                                                              // 102\n    });                                                                                                                //\n  });                                                                                                                  //\n};                                                                                                                     // 76\n                                                                                                                       //\nadminPublishTables = function(collections) {                                                                           // 1\n  return _.each(collections, function(collection, name) {                                                              //\n    if (!collection.children) {                                                                                        // 113\n      return void 0;                                                                                                   // 113\n    }                                                                                                                  //\n    return Meteor.publishComposite(adminTablePubName(name), function(tableName, ids, fields) {                         //\n      var extraFields;                                                                                                 // 115\n      check(tableName, String);                                                                                        // 115\n      check(ids, Array);                                                                                               // 115\n      check(fields, Match.Optional(Object));                                                                           // 115\n      extraFields = _.reduce(collection.extraFields, function(fields, name) {                                          // 115\n        fields[name] = 1;                                                                                              // 120\n        return fields;                                                                                                 //\n      }, {});                                                                                                          //\n      _.extend(fields, extraFields);                                                                                   // 115\n      this.unblock();                                                                                                  // 115\n      return {                                                                                                         //\n        find: function() {                                                                                             // 127\n          this.unblock();                                                                                              // 128\n          return adminCollectionObject(name).find({                                                                    //\n            _id: {                                                                                                     // 129\n              $in: ids                                                                                                 // 129\n            }                                                                                                          //\n          }, {                                                                                                         //\n            fields: fields                                                                                             // 129\n          });                                                                                                          //\n        },                                                                                                             //\n        children: collection.children                                                                                  // 127\n      };                                                                                                               //\n    });                                                                                                                //\n  });                                                                                                                  //\n};                                                                                                                     // 111\n                                                                                                                       //\nMeteor.startup(function() {                                                                                            // 1\n  adminCreateTables(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);    // 133\n  if (Meteor.isServer) {                                                                                               // 134\n    return adminPublishTables(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n  }                                                                                                                    //\n});                                                                                                                    // 132\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/both/collections.coffee.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nthis.AdminCollectionsCount = new Mongo.Collection('adminCollectionsCount');                                            // 1\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/html/template.admin_templates.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"AdminDashboard\");                                                                                // 2\nTemplate[\"AdminDashboard\"] = new Template(\"Template.AdminDashboard\", (function() {                                     // 3\n  var view = this;                                                                                                     // 4\n  return Blaze.Each(function() {                                                                                       // 5\n    return Spacebars.call(view.lookup(\"adminWidgets\"));                                                                // 6\n  }, function() {                                                                                                      // 7\n    return [ \"\\n\t\", Blaze._TemplateWith(function() {                                                                   // 8\n      return {                                                                                                         // 9\n        template: Spacebars.call(view.lookup(\"template\")),                                                             // 10\n        data: Spacebars.call(view.lookup(\"data\"))                                                                      // 11\n      };                                                                                                               // 12\n    }, function() {                                                                                                    // 13\n      return Spacebars.include(function() {                                                                            // 14\n        return Spacebars.call(Template.__dynamic);                                                                     // 15\n      });                                                                                                              // 16\n    }), \"\\n\t\" ];                                                                                                       // 17\n  }, function() {                                                                                                      // 18\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"adminDefaultWidgets\")), \"\\n\t\" ];                            // 19\n  });                                                                                                                  // 20\n}));                                                                                                                   // 21\n                                                                                                                       // 22\nTemplate.__checkName(\"AdminDashboardNew\");                                                                             // 23\nTemplate[\"AdminDashboardNew\"] = new Template(\"Template.AdminDashboardNew\", (function() {                               // 24\n  var view = this;                                                                                                     // 25\n  return [ Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\", Blaze.If(function() {                          // 26\n    return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"new\");          // 27\n  }, function() {                                                                                                      // 28\n    return [ \"\\n\t\t\", Spacebars.With(function() {                                                                       // 29\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"new\");        // 30\n    }, function() {                                                                                                    // 31\n      return [ \"\\n\t\t\", HTML.P(\"start of dynamic temp\"), \"\\n\t\t\", Blaze._TemplateWith(function() {                       // 32\n        return {                                                                                                       // 33\n          template: Spacebars.call(view.lookup(\"name\")),                                                               // 34\n          data: Spacebars.call(view.lookup(\"data\"))                                                                    // 35\n        };                                                                                                             // 36\n      }, function() {                                                                                                  // 37\n        return Spacebars.include(function() {                                                                          // 38\n          return Spacebars.call(Template.__dynamic);                                                                   // 39\n        });                                                                                                            // 40\n      }), \"\\n\t\t\", HTML.P(\"end of dynamic temp\"), \"\\n\t\t\" ];                                                             // 41\n    }), \"\\n\t\" ];                                                                                                       // 42\n  }, function() {                                                                                                      // 43\n    return [ \"\\n\t\t\", HTML.DIV({                                                                                        // 44\n      \"class\": \"box box-default\"                                                                                       // 45\n    }, \"\\n\t\t\t\", HTML.DIV({                                                                                             // 46\n      \"class\": \"box-body\"                                                                                              // 47\n    }, \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {                                                                      // 48\n      return {                                                                                                         // 49\n        id: Spacebars.call(\"admin_insert\"),                                                                            // 50\n        collection: Spacebars.call(view.lookup(\"admin_collection_name\")),                                              // 51\n        fields: Spacebars.call(view.lookup(\"admin_fields\")),                                                           // 52\n        omitFields: Spacebars.call(view.lookup(\"admin_omit_fields\")),                                                  // 53\n        buttonContent: Spacebars.call(\"Create\")                                                                        // 54\n      };                                                                                                               // 55\n    }, function() {                                                                                                    // 56\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                      // 57\n    }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\" ];                                                                                    // 58\n  }) ];                                                                                                                // 59\n}));                                                                                                                   // 60\n                                                                                                                       // 61\nTemplate.__checkName(\"AdminDashboardEdit\");                                                                            // 62\nTemplate[\"AdminDashboardEdit\"] = new Template(\"Template.AdminDashboardEdit\", (function() {                             // 63\n  var view = this;                                                                                                     // 64\n  return Blaze.If(function() {                                                                                         // 65\n    return Spacebars.call(view.lookup(\"isSubReady\"));                                                                  // 66\n  }, function() {                                                                                                      // 67\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\", Blaze.If(function() {                 // 68\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"edit\");       // 69\n    }, function() {                                                                                                    // 70\n      return [ \"\\n\t\t\", Spacebars.With(function() {                                                                     // 71\n        return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"edit\");     // 72\n      }, function() {                                                                                                  // 73\n        return [ \"\\n\t\t\", Blaze._TemplateWith(function() {                                                              // 74\n          return {                                                                                                     // 75\n            template: Spacebars.call(view.lookup(\"name\")),                                                             // 76\n            data: Spacebars.call(view.lookup(\"data\"))                                                                  // 77\n          };                                                                                                           // 78\n        }, function() {                                                                                                // 79\n          return Spacebars.include(function() {                                                                        // 80\n            return Spacebars.call(Template.__dynamic);                                                                 // 81\n          });                                                                                                          // 82\n        }), \"\\n\t\t\" ];                                                                                                  // 83\n      }), \"\\n\t\" ];                                                                                                     // 84\n    }, function() {                                                                                                    // 85\n      return [ \"\\n\t \", Blaze.If(function() {                                                                           // 86\n        return Spacebars.call(view.lookup(\"action\"));                                                                  // 87\n      }, function() {                                                                                                  // 88\n        return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminDeleteWidget\")), \"\\n\t \" ];                       // 89\n      }), \"\\n\t\t\", HTML.DIV({                                                                                           // 90\n        \"class\": \"box box-default\"                                                                                     // 91\n      }, \"\\n\t\t\t\", HTML.DIV({                                                                                           // 92\n        \"class\": \"box-body\"                                                                                            // 93\n      }, \"\\n\t\t\t\t\", Blaze.If(function() {                                                                               // 94\n        return Spacebars.call(view.lookup(\"fadmin_doc\"));                                                              // 95\n      }, function() {                                                                                                  // 96\n        return [ \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {                                                            // 97\n          return {                                                                                                     // 98\n            id: Spacebars.call(\"admin_update\"),                                                                        // 99\n            collection: Spacebars.call(view.lookup(\"admin_collection_name\")),                                          // 100\n            doc: Spacebars.call(view.lookup(\"fadmin_doc\")),                                                            // 101\n            fields: Spacebars.call(view.lookup(\"admin_fields\")),                                                       // 102\n            omitFields: Spacebars.call(view.lookup(\"admin_omit_fields\")),                                              // 103\n            buttonContent: Spacebars.call(\"Update\")                                                                    // 104\n          };                                                                                                           // 105\n        }, function() {                                                                                                // 106\n          return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                  // 107\n        }), \"\\n\t\t\t\t\" ];                                                                                                // 108\n      }, function() {                                                                                                  // 109\n        return \"\\n\t\t\t\t\tcan't find current doc\\n\t\t\t\t\";                                                                  // 110\n      }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\" ];                                                                                  // 111\n    }), \"\\n\t\" ];                                                                                                       // 112\n  }, function() {                                                                                                      // 113\n    return [ \"\\n\t\t\", HTML.DIV({                                                                                        // 114\n      \"class\": \"box box-default\"                                                                                       // 115\n    }, HTML.DIV({                                                                                                      // 116\n      \"class\": \"box-body\"                                                                                              // 117\n    }, \"Loading...\")), \"\\n\t\" ];                                                                                        // 118\n  });                                                                                                                  // 119\n}));                                                                                                                   // 120\n                                                                                                                       // 121\nTemplate.__checkName(\"AdminDashboardViewWrapper\");                                                                     // 122\nTemplate[\"AdminDashboardViewWrapper\"] = new Template(\"Template.AdminDashboardViewWrapper\", (function() {               // 123\n  var view = this;                                                                                                     // 124\n  return HTML.Raw(\"<div></div>\\n\t\");                                                                                   // 125\n}));                                                                                                                   // 126\n                                                                                                                       // 127\nTemplate.__checkName(\"AdminDashboardView\");                                                                            // 128\nTemplate[\"AdminDashboardView\"] = new Template(\"Template.AdminDashboardView\", (function() {                             // 129\n  var view = this;                                                                                                     // 130\n  return Blaze.If(function() {                                                                                         // 131\n    return Spacebars.call(view.lookup(\"isSubReady\"));                                                                  // 132\n  }, function() {                                                                                                      // 133\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\", Blaze.If(function() {                 // 134\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"view\");       // 135\n    }, function() {                                                                                                    // 136\n      return [ \"\\n\t\t\", Spacebars.With(function() {                                                                     // 137\n        return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"view\");     // 138\n      }, function() {                                                                                                  // 139\n        return [ \"\\n\t\t\", Blaze._TemplateWith(function() {                                                              // 140\n          return {                                                                                                     // 141\n            template: Spacebars.call(view.lookup(\"name\")),                                                             // 142\n            data: Spacebars.call(view.lookup(\"data\"))                                                                  // 143\n          };                                                                                                           // 144\n        }, function() {                                                                                                // 145\n          return Spacebars.include(function() {                                                                        // 146\n            return Spacebars.call(Template.__dynamic);                                                                 // 147\n          });                                                                                                          // 148\n        }), \"\\n\t\t\" ];                                                                                                  // 149\n      }), \"\\n\t\" ];                                                                                                     // 150\n    }, function() {                                                                                                    // 151\n      return [ \"\\n\t\t\", Blaze.If(function() {                                                                           // 152\n        return Spacebars.call(view.lookup(\"hasDocuments\"));                                                            // 153\n      }, function() {                                                                                                  // 154\n        return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {                                                             // 155\n          return {                                                                                                     // 156\n            table: Spacebars.call(view.lookup(\"admin_table\")),                                                         // 157\n            \"class\": Spacebars.call(\"table dataTable\")                                                                 // 158\n          };                                                                                                           // 159\n        }, function() {                                                                                                // 160\n          return Spacebars.include(view.lookupTemplate(\"tabular\"));                                                    // 161\n        }), \"\\n\t\t\" ];                                                                                                  // 162\n      }, function() {                                                                                                  // 163\n        return [ \"\\n\t\t\t\", HTML.DIV({                                                                                   // 164\n          \"class\": \"alert alert-info\"                                                                                  // 165\n        }, \"\\n\t\t\t\t\", HTML.P(\"There are no visible items in this collection.\"), \"\\n\t\t\t\t\", HTML.P(HTML.A({               // 166\n          href: function() {                                                                                           // 167\n            return Spacebars.mustache(view.lookup(\"newPath\"));                                                         // 168\n          },                                                                                                           // 169\n          \"class\": \"btn btn-primary\"                                                                                   // 170\n        }, HTML.I({                                                                                                    // 171\n          \"class\": \"fa fa-plus\"                                                                                        // 172\n        }), \" Add one\")), \"\\n\t\t\t\"), \"\\n\t\t\" ];                                                                          // 173\n      }), \"\\n\t\" ];                                                                                                     // 174\n    }), \"\\n\t\" ];                                                                                                       // 175\n  }, function() {                                                                                                      // 176\n    return [ \"\\n\t\t\", HTML.DIV({                                                                                        // 177\n      \"class\": \"box box-default\"                                                                                       // 178\n    }, HTML.DIV({                                                                                                      // 179\n      \"class\": \"box-body\"                                                                                              // 180\n    }, \"Loading...\")), \"\\n\t\" ];                                                                                        // 181\n  });                                                                                                                  // 182\n}));                                                                                                                   // 183\n                                                                                                                       // 184\nTemplate.__checkName(\"AdminDashboardUsersNew\");                                                                        // 185\nTemplate[\"AdminDashboardUsersNew\"] = new Template(\"Template.AdminDashboardUsersNew\", (function() {                     // 186\n  var view = this;                                                                                                     // 187\n  return HTML.DIV({                                                                                                    // 188\n    \"class\": \"box box-default\"                                                                                         // 189\n  }, \"\\n\t\t\", HTML.DIV({                                                                                                // 190\n    \"class\": \"box-body\"                                                                                                // 191\n  }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\t\t\", Blaze._TemplateWith(function() {          // 192\n    return {                                                                                                           // 193\n      id: Spacebars.call(\"adminNewUser\"),                                                                              // 194\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"newUser\")),                                   // 195\n      type: Spacebars.call(\"method\"),                                                                                  // 196\n      meteormethod: Spacebars.call(\"adminNewUser\")                                                                     // 197\n    };                                                                                                                 // 198\n  }, function() {                                                                                                      // 199\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 200\n      return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {                                                               // 201\n        return {                                                                                                       // 202\n          name: Spacebars.call(\"email\")                                                                                // 203\n        };                                                                                                             // 204\n      }, function() {                                                                                                  // 205\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 206\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {                                                                    // 207\n        return {                                                                                                       // 208\n          name: Spacebars.call(\"chooseOwnPassword\")                                                                    // 209\n        };                                                                                                             // 210\n      }, function() {                                                                                                  // 211\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 212\n      }), \"\\n\t\t\t\", Blaze.If(function() {                                                                               // 213\n        return Spacebars.dataMustache(view.lookup(\"afFieldValueIs\"), Spacebars.kw({                                    // 214\n          name: \"chooseOwnPassword\",                                                                                   // 215\n          value: false                                                                                                 // 216\n        }));                                                                                                           // 217\n      }, function() {                                                                                                  // 218\n        return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {                                                             // 219\n          return {                                                                                                     // 220\n            name: Spacebars.call(\"password\")                                                                           // 221\n          };                                                                                                           // 222\n        }, function() {                                                                                                // 223\n          return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                               // 224\n        }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {                                                                  // 225\n          return {                                                                                                     // 226\n            name: Spacebars.call(\"sendPassword\")                                                                       // 227\n          };                                                                                                           // 228\n        }, function() {                                                                                                // 229\n          return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                               // 230\n        }), \"\\n\t\t\t\" ];                                                                                                 // 231\n      }), \"\\n\t\t\t\", HTML.BUTTON({                                                                                       // 232\n        type: \"submit\",                                                                                                // 233\n        \"class\": \"btn btn-primary\"                                                                                     // 234\n      }, \"Add User\"), \"\\n\t\t\t\" ];                                                                                       // 235\n    });                                                                                                                // 236\n  }), \"\\n\t\t\"), \"\\n\t\");                                                                                                 // 237\n}));                                                                                                                   // 238\n                                                                                                                       // 239\nTemplate.__checkName(\"AdminDashboardUsersEdit\");                                                                       // 240\nTemplate[\"AdminDashboardUsersEdit\"] = new Template(\"Template.AdminDashboardUsersEdit\", (function() {                   // 241\n  var view = this;                                                                                                     // 242\n  return [ Blaze.If(function() {                                                                                       // 243\n    return Spacebars.call(view.lookup(\"action\"));                                                                      // 244\n  }, function() {                                                                                                      // 245\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"adminDeleteWidget\")), \"\\n\t\" ];                             // 246\n  }), \"\\n\t\", HTML.DIV({                                                                                                // 247\n    \"class\": \"box box-default\"                                                                                         // 248\n  }, \"\\n\t\t\", HTML.DIV({                                                                                                // 249\n    \"class\": \"box-body\"                                                                                                // 250\n  }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\t\t\", Blaze.If(function() {                     // 251\n    return Spacebars.call(view.lookup(\"adminGetUserSchema\"));                                                          // 252\n  }, function() {                                                                                                      // 253\n    return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {                                                                 // 254\n      return {                                                                                                         // 255\n        id: Spacebars.call(\"adminUpdateUser\"),                                                                         // 256\n        buttonContent: Spacebars.call(\"Update\"),                                                                       // 257\n        buttonClasses: Spacebars.call(\"btn btn-primary btn-sm\"),                                                       // 258\n        collection: Spacebars.call(view.lookup(\"adminGetUsers\")),                                                      // 259\n        schema: Spacebars.call(view.lookup(\"adminGetUserSchema\")),                                                     // 260\n        doc: Spacebars.call(view.lookup(\"admin_current_doc\")),                                                         // 261\n        omitFields: Spacebars.call(\"roles,services\")                                                                   // 262\n      };                                                                                                               // 263\n    }, function() {                                                                                                    // 264\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));                                                      // 265\n    }), \"\\n\t\t\t\", HTML.HR(), \"\\n\t\t\t\" ];                                                                                 // 266\n  }), \"\\n\\n\t\t\t\", HTML.Raw(\"<h4>User Roles</h4>\"), \"\\n\t\t\t\", Blaze.Each(function() {                                     // 267\n    return Spacebars.call(view.lookup(\"roles\"));                                                                       // 268\n  }, function() {                                                                                                      // 269\n    return [ \"\\n\t\t\t\", HTML.BUTTON({                                                                                    // 270\n      \"class\": \"btn btn-primary btn-xs btn-remove-role\",                                                               // 271\n      role: function() {                                                                                               // 272\n        return Spacebars.mustache(view.lookup(\".\"));                                                                   // 273\n      },                                                                                                               // 274\n      user: function() {                                                                                               // 275\n        return Spacebars.mustache(view.lookup(\"admin_current_id\"));                                                    // 276\n      }                                                                                                                // 277\n    }, Blaze.View(\"lookup:.\", function() {                                                                             // 278\n      return Spacebars.mustache(view.lookup(\".\"));                                                                     // 279\n    })), \"\\n\t\t\t\" ];                                                                                                    // 280\n  }), \"\\n\t\t\t\", Blaze.Each(function() {                                                                                 // 281\n    return Spacebars.call(view.lookup(\"otherRoles\"));                                                                  // 282\n  }, function() {                                                                                                      // 283\n    return [ \"\\n\t\t\t\", HTML.BUTTON({                                                                                    // 284\n      \"class\": \"btn btn-default btn-xs btn-add-role\",                                                                  // 285\n      role: function() {                                                                                               // 286\n        return Spacebars.mustache(view.lookup(\".\"));                                                                   // 287\n      },                                                                                                               // 288\n      user: function() {                                                                                               // 289\n        return Spacebars.mustache(view.lookup(\"admin_current_id\"));                                                    // 290\n      }                                                                                                                // 291\n    }, Blaze.View(\"lookup:.\", function() {                                                                             // 292\n      return Spacebars.mustache(view.lookup(\".\"));                                                                     // 293\n    })), \"\\n\t\t\t\" ];                                                                                                    // 294\n  }), \"\\n\t\t\t\", Blaze.If(function() {                                                                                   // 295\n    return Spacebars.call(view.lookup(\"roles\"));                                                                       // 296\n  }, function() {                                                                                                      // 297\n    return [ \"\\n\t\t\t\", HTML.P({                                                                                         // 298\n      style: \"margin-top:5px;\"                                                                                         // 299\n    }, \"Click a role to toggle it.\"), \"\\n\t\t\t\" ];                                                                       // 300\n  }, function() {                                                                                                      // 301\n    return [ \"\\n\t\t\t\", HTML.P(\"User not in any roles. Click a role to add it to a user.\"), \"\\n\t\t\t\" ];                   // 302\n  }), \"\\n\\n\t\t\t\", HTML.Raw(\"<hr>\"), \"\\n\t\t\t\", HTML.Raw(\"<h4>Reset Password</h4>\"), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n    return {                                                                                                           // 304\n      id: Spacebars.call(\"adminSendResetPasswordEmail\"),                                                               // 305\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"sendResetPasswordEmail\")),                    // 306\n      type: Spacebars.call(\"method\"),                                                                                  // 307\n      meteormethod: Spacebars.call(\"adminSendResetPasswordEmail\")                                                      // 308\n    };                                                                                                                 // 309\n  }, function() {                                                                                                      // 310\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 311\n      return [ \"\\n\t\t\t\", HTML.DIV({                                                                                     // 312\n        \"class\": \"form-group hidden\"                                                                                   // 313\n      }, \"\\n\t\t\t\t\", HTML.LABEL({                                                                                        // 314\n        \"class\": \"control-label\",                                                                                      // 315\n        \"for\": \"title\"                                                                                                 // 316\n      }, \"ID\"), \"\\n\t\t\t\t\", HTML.INPUT({                                                                                 // 317\n        value: function() {                                                                                            // 318\n          return Spacebars.mustache(view.lookup(\"admin_current_id\"));                                                  // 319\n        },                                                                                                             // 320\n        type: \"text\",                                                                                                  // 321\n        name: \"_id\",                                                                                                   // 322\n        omitfields: \"createdAtupdatedAt\",                                                                              // 323\n        required: \"\",                                                                                                  // 324\n        \"data-schema-key\": \"_id\",                                                                                      // 325\n        \"class\": \"form-control\",                                                                                       // 326\n        autocomplete: \"off\"                                                                                            // 327\n      }), \"\\n\t\t\t\t\", HTML.SPAN({                                                                                        // 328\n        \"class\": \"help-block\"                                                                                          // 329\n      }), \"\\n\t\t\t\"), \"\\n\t\t\t\", HTML.P(\"Send a reset password email to \", Blaze.View(\"lookup:admin_current_doc.emails.0.address\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"admin_current_doc\"), \"emails\", \"0\", \"address\"));          // 331\n      })), \"\\n\t\t\t\", HTML.BUTTON({                                                                                      // 332\n        type: \"submit\",                                                                                                // 333\n        \"class\": \"btn btn-primary btn-sm\"                                                                              // 334\n      }, \"Send Email\"), \"\\n\t\t\t\" ];                                                                                     // 335\n    });                                                                                                                // 336\n  }), \"\\n\\n\t\t\t\", HTML.Raw(\"<hr>\"), \"\\n\t\t\t\", HTML.Raw(\"<h4>Change Password</h4>\"), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n    return {                                                                                                           // 338\n      id: Spacebars.call(\"adminChangePassword\"),                                                                       // 339\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"changePassword\")),                            // 340\n      type: Spacebars.call(\"method\"),                                                                                  // 341\n      meteormethod: Spacebars.call(\"adminChangePassword\")                                                              // 342\n    };                                                                                                                 // 343\n  }, function() {                                                                                                      // 344\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {                                             // 345\n      return [ \"\\n\t\t\t\", HTML.DIV({                                                                                     // 346\n        \"class\": \"form-group hidden\"                                                                                   // 347\n      }, \"\\n\t\t\t\t\", HTML.LABEL({                                                                                        // 348\n        \"class\": \"control-label\",                                                                                      // 349\n        \"for\": \"title\"                                                                                                 // 350\n      }, \"ID\"), \"\\n\t\t\t\t\", HTML.INPUT({                                                                                 // 351\n        value: function() {                                                                                            // 352\n          return Spacebars.mustache(view.lookup(\"admin_current_id\"));                                                  // 353\n        },                                                                                                             // 354\n        type: \"text\",                                                                                                  // 355\n        name: \"_id\",                                                                                                   // 356\n        omitfields: \"createdAtupdatedAt\",                                                                              // 357\n        required: \"\",                                                                                                  // 358\n        \"data-schema-key\": \"_id\",                                                                                      // 359\n        \"class\": \"form-control\",                                                                                       // 360\n        autocomplete: \"off\"                                                                                            // 361\n      }), \"\\n\t\t\t\t\", HTML.SPAN({                                                                                        // 362\n        \"class\": \"help-block\"                                                                                          // 363\n      }), \"\\n\t\t\t\"), \"\\n\t\t\t\", Blaze._TemplateWith(function() {                                                          // 364\n        return {                                                                                                       // 365\n          name: Spacebars.call(\"password\")                                                                             // 366\n        };                                                                                                             // 367\n      }, function() {                                                                                                  // 368\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));                                                 // 369\n      }), \"\\n\t\t\t\", HTML.BUTTON({                                                                                       // 370\n        type: \"submit\",                                                                                                // 371\n        \"class\": \"btn btn-primary btn-sm\"                                                                              // 372\n      }, \"Change Password\"), \"\\n\t\t\t\" ];                                                                                // 373\n    });                                                                                                                // 374\n  }), \"\\n\t\t\"), \"\\n\t\") ];                                                                                               // 375\n}));                                                                                                                   // 376\n                                                                                                                       // 377\nTemplate.__checkName(\"adminAlert\");                                                                                    // 378\nTemplate[\"adminAlert\"] = new Template(\"Template.adminAlert\", (function() {                                             // 379\n  var view = this;                                                                                                     // 380\n  return [ Blaze.If(function() {                                                                                       // 381\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminSuccess\");                  // 382\n  }, function() {                                                                                                      // 383\n    return [ \"\\n\t\", HTML.DIV({                                                                                         // 384\n      \"class\": \"alert alert-success admin-alert\"                                                                       // 385\n    }, \"\\n\t\t\", Blaze.View(\"lookup:$.Session.get\", function() {                                                         // 386\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminSuccess\");                    // 387\n    }), \"\\n\t\"), \"\\n\t\" ];                                                                                               // 388\n  }), \"\\n\\n\t\", Blaze.If(function() {                                                                                   // 389\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminError\");                    // 390\n  }, function() {                                                                                                      // 391\n    return [ \"\\n\t\", HTML.DIV({                                                                                         // 392\n      \"class\": \"alert alert-danger admin-alert\"                                                                        // 393\n    }, \"\\n\t\t\", Blaze.View(\"lookup:$.Session.get\", function() {                                                         // 394\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminError\");                      // 395\n    }), \"\\n\t\"), \"\\n\t\" ];                                                                                               // 396\n  }) ];                                                                                                                // 397\n}));                                                                                                                   // 398\n                                                                                                                       // 399\nTemplate.__checkName(\"adminUsersIsAdmin\");                                                                             // 400\nTemplate[\"adminUsersIsAdmin\"] = new Template(\"Template.adminUsersIsAdmin\", (function() {                               // 401\n  var view = this;                                                                                                     // 402\n  return Blaze.If(function() {                                                                                         // 403\n    return Spacebars.call(view.lookup(\"checkadmin\"));                                                                  // 404\n  }, function() {                                                                                                      // 405\n    return HTML.I({                                                                                                    // 406\n      \"class\": \"fa fa-check\"                                                                                           // 407\n    });                                                                                                                // 408\n  });                                                                                                                  // 409\n}));                                                                                                                   // 410\n                                                                                                                       // 411\nTemplate.__checkName(\"adminUsersMailBtn\");                                                                             // 412\nTemplate[\"adminUsersMailBtn\"] = new Template(\"Template.adminUsersMailBtn\", (function() {                               // 413\n  var view = this;                                                                                                     // 414\n  return HTML.A({                                                                                                      // 415\n    href: function() {                                                                                                 // 416\n      return [ \"mailto:\", Spacebars.mustache(view.lookup(\"adminUserEmail\")) ];                                         // 417\n    },                                                                                                                 // 418\n    \"class\": \"btn btn-default btn-xs\"                                                                                  // 419\n  }, HTML.Raw('<i class=\"fa fa-envelope\"></i>'));                                                                      // 420\n}));                                                                                                                   // 421\n                                                                                                                       // 422\nTemplate.__checkName(\"adminEditBtn\");                                                                                  // 423\nTemplate[\"adminEditBtn\"] = new Template(\"Template.adminEditBtn\", (function() {                                         // 424\n  var view = this;                                                                                                     // 425\n  return [ HTML.A({                                                                                                    // 426\n    href: function() {                                                                                                 // 427\n      return Spacebars.mustache(view.lookup(\"path\"));                                                                  // 428\n    },                                                                                                                 // 429\n    \"class\": \"hidden-xs btn btn-xs btn-primary\"                                                                        // 430\n  }, HTML.Raw('<i class=\"fa fa-pencil\"></i>')), \"\\n\t\", HTML.A({                                                        // 431\n    href: function() {                                                                                                 // 432\n      return Spacebars.mustache(view.lookup(\"path\"));                                                                  // 433\n    },                                                                                                                 // 434\n    \"class\": \"visible-xs btn btn-sm btn-primary\"                                                                       // 435\n  }, HTML.Raw('<i class=\"fa fa-pencil\"></i>'), \" Edit\") ];                                                             // 436\n}));                                                                                                                   // 437\n                                                                                                                       // 438\nTemplate.__checkName(\"adminDeleteBtn\");                                                                                // 439\nTemplate[\"adminDeleteBtn\"] = new Template(\"Template.adminDeleteBtn\", (function() {                                     // 440\n  var view = this;                                                                                                     // 441\n  return [ HTML.A({                                                                                                    // 442\n    href: function() {                                                                                                 // 443\n      return Spacebars.mustache(view.lookup(\"path\"));                                                                  // 444\n    },                                                                                                                 // 445\n    \"class\": \"hidden-xs btn btn-xs btn-primary\"                                                                        // 446\n  }, HTML.Raw('<i class=\"fa fa-times\"></i>')), \"\\n\t \", HTML.A({                                                        // 447\n    href: function() {                                                                                                 // 448\n      return Spacebars.mustache(view.lookup(\"path\"));                                                                  // 449\n    },                                                                                                                 // 450\n    \"class\": \"visible-xs btn btn-sm btn-primary\"                                                                       // 451\n  }, HTML.Raw('<i class=\"fa fa-times\"></i>'), \"Delete\") ];                                                             // 452\n}));                                                                                                                   // 453\n                                                                                                                       // 454\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/html/template.admin_widgets.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"adminDefaultWidgets\");                                                                           // 2\nTemplate[\"adminDefaultWidgets\"] = new Template(\"Template.adminDefaultWidgets\", (function() {                           // 3\n  var view = this;                                                                                                     // 4\n  return Blaze.Each(function() {                                                                                       // 5\n    return Spacebars.call(view.lookup(\"admin_collections\"));                                                           // 6\n  }, function() {                                                                                                      // 7\n    return [ \"\\n\t\t\", Blaze.Unless(function() {                                                                         // 8\n      return Spacebars.dataMustache(view.lookup(\"$eq\"), view.lookup(\"showWidget\"), false);                             // 9\n    }, function() {                                                                                                    // 10\n      return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {                                                               // 11\n        return {                                                                                                       // 12\n          collection: Spacebars.call(view.lookup(\"name\"))                                                              // 13\n        };                                                                                                             // 14\n      }, function() {                                                                                                  // 15\n        return Spacebars.include(view.lookupTemplate(\"adminCollectionWidget\"));                                        // 16\n      }), \"\\n\t\t\" ];                                                                                                    // 17\n    }), \"\\n\t\" ];                                                                                                       // 18\n  });                                                                                                                  // 19\n}));                                                                                                                   // 20\n                                                                                                                       // 21\nTemplate.__checkName(\"adminCollectionWidget\");                                                                         // 22\nTemplate[\"adminCollectionWidget\"] = new Template(\"Template.adminCollectionWidget\", (function() {                       // 23\n  var view = this;                                                                                                     // 24\n  return HTML.DIV({                                                                                                    // 25\n    \"class\": function() {                                                                                              // 26\n      return Blaze.If(function() {                                                                                     // 27\n        return Spacebars.call(view.lookup(\"class\"));                                                                   // 28\n      }, function() {                                                                                                  // 29\n        return Blaze.View(\"lookup:class\", function() {                                                                 // 30\n          return Spacebars.mustache(view.lookup(\"class\"));                                                             // 31\n        });                                                                                                            // 32\n      }, function() {                                                                                                  // 33\n        return \"col-lg-3 col-xs-6\";                                                                                    // 34\n      });                                                                                                              // 35\n    }                                                                                                                  // 36\n  }, \"\\n\t\", Spacebars.With(function() {                                                                                // 37\n    return Spacebars.dataMustache(view.lookup(\"adminGetCollection\"), view.lookup(\"collection\"));                       // 38\n  }, function() {                                                                                                      // 39\n    return [ \"\\n\t\t\", HTML.A({                                                                                          // 40\n      href: function() {                                                                                               // 41\n        return Spacebars.mustache(view.lookup(\"adminViewPath\"), Spacebars.dot(view.lookup(\".\"), \"name\"));              // 42\n      }                                                                                                                // 43\n    }, \"\\n\t\t\t\", HTML.DIV({                                                                                             // 44\n      \"class\": function() {                                                                                            // 45\n        return [ \"small-box bg-\", Spacebars.mustache(view.lookup(\"color\")) ];                                          // 46\n      }                                                                                                                // 47\n    }, \"\\n\t\t\t\t\", HTML.DIV({                                                                                            // 48\n      \"class\": \"inner\"                                                                                                 // 49\n    }, \"\\n\t\t\t\t\t\", HTML.H3(\"\\n\t\t\t\t\t\t\", Blaze.View(\"lookup:adminCollectionCount\", function() {                           // 50\n      return Spacebars.mustache(view.lookup(\"adminCollectionCount\"), view.lookup(\"name\"));                             // 51\n    }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.P(\"\\n\t\t\t\t\t\t\", Blaze.View(\"lookup:..label\", function() {                            // 52\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                             // 53\n    }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.DIV({                                                                    // 54\n      \"class\": \"icon\"                                                                                                  // 55\n    }, \"\\n\t\t\t\t\t\", HTML.I({                                                                                             // 56\n      \"class\": function() {                                                                                            // 57\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"icon\")) ];                              // 58\n      }                                                                                                                // 59\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.A({                                                                                  // 60\n      \"class\": \"small-box-footer\"                                                                                      // 61\n    }, \"\\n\t\t\t\t\tSee all \", HTML.I({                                                                                     // 62\n      \"class\": \"fa fa-arrow-circle-right\"                                                                              // 63\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\t\" ];                                                                        // 64\n  }), \"\\n\t\");                                                                                                          // 65\n}));                                                                                                                   // 66\n                                                                                                                       // 67\nTemplate.__checkName(\"adminDeleteWidget\");                                                                             // 68\nTemplate[\"adminDeleteWidget\"] = new Template(\"Template.adminDeleteWidget\", (function() {                               // 69\n  var view = this;                                                                                                     // 70\n  return HTML.Raw('<div class=\"alert alert-warning admin-alert\">\\n\t\t<h4>Confirm delete</h4>\\n\t\t<div>\\n\t\t\t<p>Are you sure you want to delete this document ? </p>\\n\t\t</div>\\n\t\t<div>\\n\t\t\t<button type=\"button\" id=\"confirm-delete\" class=\"btn btn-danger\">Delete</button>\\n\t\t</div>\\n\t</div>');\n}));                                                                                                                   // 72\n                                                                                                                       // 73\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/html/template.fadmin_layouts.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"fAdminLayout\");                                                                                  // 2\nTemplate[\"fAdminLayout\"] = new Template(\"Template.fAdminLayout\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return Blaze.If(function() {                                                                                         // 5\n    return Spacebars.call(view.lookup(\"AdminConfig\"));                                                                 // 6\n  }, function() {                                                                                                      // 7\n    return [ \"\\n  \", Blaze.If(function() {                                                                             // 8\n      return Spacebars.dataMustache(view.lookup(\"isInRole\"), \"admin\");                                                 // 9\n    }, function() {                                                                                                    // 10\n      return [ \"\\n    \", HTML.DIV({                                                                                    // 11\n        \"class\": \"admin-layout\"                                                                                        // 12\n      }, \"\\n    \", Blaze._TemplateWith(function() {                                                                    // 13\n        return {                                                                                                       // 14\n          skin: Spacebars.call(view.lookup(\"admin_skin\"))                                                              // 15\n        };                                                                                                             // 16\n      }, function() {                                                                                                  // 17\n        return Spacebars.include(view.lookupTemplate(\"AdminLTE\"), function() {                                         // 18\n          return [ \"\\n  \t\t\t\", Spacebars.include(view.lookupTemplate(\"AdminHeader\")), \"\\n  \t\t\t\", Spacebars.include(view.lookupTemplate(\"AdminSidebar\")), \"\\n\t\t\t\t\", HTML.DIV({\n            \"class\": \"content-wrapper\",                                                                                // 20\n            style: function() {                                                                                        // 21\n              return [ \"min-height: \", Spacebars.mustache(view.lookup(\"minHeight\")) ];                                 // 22\n            }                                                                                                          // 23\n          }, \"\\n\t\t\t\t\t\", HTML.SECTION({                                                                                 // 24\n            \"class\": \"content-header\"                                                                                  // 25\n          }, \"\\n\t\t\t\t\t\t\", HTML.H1(\"\\n\t\t\t\t\t\t\t\", Blaze.View(\"lookup:$.Session.get\", function() {                          // 26\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"admin_title\");               // 27\n          }), \"\\n\t\t\t\t\t\t\t\", HTML.SMALL(Blaze.View(\"lookup:$.Session.get\", function() {                                  // 28\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"admin_subtitle\");            // 29\n          })), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\", HTML.BR(), \"\\n\t\t\t\t\t\t\", HTML.OL({                                               // 30\n            \"class\": \"breadcrumb\"                                                                                      // 31\n          }, \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                             // 32\n            href: \"/admin/\"                                                                                            // 33\n          }, \"Dashboard\")), \"\\n\t\t\t\t\t\t\t\", Blaze.If(function() {                                                         // 34\n            return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"admin_collection_name\");\n          }, function() {                                                                                              // 36\n            return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({                                                                     // 37\n              href: function() {                                                                                       // 38\n                return [ \"/admin/view/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"admin_collection_name\"), \"/\" ];\n              }                                                                                                        // 40\n            }, Blaze.View(\"lookup:adminCollectionLabel\", function() {                                                  // 41\n              return Spacebars.mustache(view.lookup(\"adminCollectionLabel\"), view.lookup(\"admin_collection_name\"));    // 42\n            }))), \"\\n\t\t\t\t\t\t\t\" ];                                                                                       // 43\n          }), \"\\n\t\t\t\t\t\t\t\", Blaze.If(function() {                                                                       // 44\n            return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"equals\"), \"admin_collection_page\", \"new\");\n          }, function() {                                                                                              // 46\n            return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(\"New\"), \"\\n\t\t\t\t\t\t\t\" ];                                                       // 47\n          }), \"\\n\t\t\t\t\t\t\t\", Blaze.If(function() {                                                                       // 48\n            return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"equals\"), \"admin_collection_page\", \"edit\");\n          }, function() {                                                                                              // 50\n            return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(\"Edit\"), \"\\n\t\t\t\t\t\t\t\" ];                                                      // 51\n          }), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.SECTION({                                                       // 52\n            \"class\": \"content\"                                                                                         // 53\n          }, \"\\n\t\t\t\t\t\t\", Blaze._TemplateWith(function() {                                                              // 54\n            return {                                                                                                   // 55\n              template: Spacebars.call(view.lookup(\"main\"))                                                            // 56\n            };                                                                                                         // 57\n          }, function() {                                                                                              // 58\n            return Spacebars.include(function() {                                                                      // 59\n              return Spacebars.call(Template.__dynamic);                                                               // 60\n            });                                                                                                        // 61\n          }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n    \" ];                                                                       // 62\n        });                                                                                                            // 63\n      }), \"\\n    \"), \"\\n\t\" ];                                                                                          // 64\n    }, function() {                                                                                                    // 65\n      return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"NotAdmin\")), \"\\n\t\" ];                                     // 66\n    }), \"\\n\t\" ];                                                                                                       // 67\n  }, function() {                                                                                                      // 68\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"NoConfig\")), \"\\n\t\" ];                                       // 69\n  });                                                                                                                  // 70\n}));                                                                                                                   // 71\n                                                                                                                       // 72\nTemplate.__checkName(\"NotAdmin\");                                                                                      // 73\nTemplate[\"NotAdmin\"] = new Template(\"Template.NotAdmin\", (function() {                                                 // 74\n  var view = this;                                                                                                     // 75\n  return HTML.Raw('<div class=\"container\">\\n<div class=\"row\">\\n\t<div class=\"col-md-4 col-md-offset-4\">\\n\t\t<p class=\"alert alert-info\" style=\"margin-top:100px;\">\\n\t\t\tYou need to be an admin to view this page\\n\t\t</p>\\n\t</div>\\n</div>\\n</div>');\n}));                                                                                                                   // 77\n                                                                                                                       // 78\nTemplate.__checkName(\"AdminLoading\");                                                                                  // 79\nTemplate[\"AdminLoading\"] = new Template(\"Template.AdminLoading\", (function() {                                         // 80\n  var view = this;                                                                                                     // 81\n  return HTML.Raw(\"<p> Loading....</p>\");                                                                              // 82\n}));                                                                                                                   // 83\n                                                                                                                       // 84\nTemplate.__checkName(\"NoConfig\");                                                                                      // 85\nTemplate[\"NoConfig\"] = new Template(\"Template.NoConfig\", (function() {                                                 // 86\n  var view = this;                                                                                                     // 87\n  return HTML.Raw(\"<p class=\\\"alert alert-info\\\">\\n\t\tYou need to define an AdminConfig object to use the admin dashboard.\\n\t\t<br>\\n\t\tA basic config to manage the 'Posts' and 'Comments' collection would look like this:\\n\t\t<br>\\n\t\t<code>\\n\t\tAdminConfig = {\\n\t\t<br>\\n\t\t\tadminEmails: ['\tben@code2create.com'],\\n\t\t<br>\\n\t\t\tcollections:\\n\t\t<br>\\n\t\t\t\t{\\n\t\t<br>\\n\t\t\t\t\tPosts: {},\\n\t\t<br>\\n\t\t\t\t\tComments: {}\\n\t\t<br>\\n\t\t\t\t}\\n\t\t<br>\\n\t\t}\\n\t\t</code>\\n\t</p>\");\n}));                                                                                                                   // 89\n                                                                                                                       // 90\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/html/template.admin_sidebar.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"AdminSidebar\");                                                                                  // 2\nTemplate[\"AdminSidebar\"] = new Template(\"Template.AdminSidebar\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.ASIDE({                                                                                                  // 5\n    \"class\": \"main-sidebar\"                                                                                            // 6\n  }, \"\\n\t\t\", HTML.DIV({                                                                                                // 7\n    \"class\": \"sidebar\"                                                                                                 // 8\n  }, \"\\n\t\t\t\", HTML.UL({                                                                                                // 9\n    \"class\": \"sidebar-menu\"                                                                                            // 10\n  }, \"\\n\t\t\t\t\", HTML.LI({                                                                                               // 11\n    \"class\": function() {                                                                                              // 12\n      return Spacebars.mustache(view.lookup(\"isActiveRoute\"), \"adminDashboard\");                                       // 13\n    }                                                                                                                  // 14\n  }, \"\\n\t\t\t\t\t\", HTML.Raw('<a href=\"/admin\">\\n\t\t\t\t\t\t<i class=\"fa fa-dashboard\"></i> <span>Dashboard</span>\\n\t\t\t\t\t</a>'), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"admin_collections\"));                                                           // 16\n  }, function() {                                                                                                      // 17\n    return [ \"\\n\t\t\t\t\", HTML.LI({                                                                                       // 18\n      \"class\": \"treeview\"                                                                                              // 19\n    }, \"\\n\t\t\t\t\t\", HTML.A({                                                                                             // 20\n      href: \"#\"                                                                                                        // 21\n    }, \"\\n\t\t\t\t\t\t\", HTML.I({                                                                                            // 22\n      \"class\": function() {                                                                                            // 23\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"icon\")) ];                              // 24\n      }                                                                                                                // 25\n    }), \"\\n\t\t\t\t\t\t\", HTML.SPAN(Blaze.View(\"lookup:..label\", function() {                                                // 26\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));                                             // 27\n    })), \"\\n\t\t\t\t\t\t\", HTML.I({                                                                                          // 28\n      \"class\": \"fa fa-angle-left pull-right\"                                                                           // 29\n    }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.UL({                                                                               // 30\n      \"class\": \"treeview-menu\"                                                                                         // 31\n    }, \"\\n\t\t\t\t\t\t\", HTML.LI({                                                                                           // 32\n      \"class\": function() {                                                                                            // 33\n        return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"newPath\"));                                // 34\n      }                                                                                                                // 35\n    }, HTML.A({                                                                                                        // 36\n      href: function() {                                                                                               // 37\n        return Spacebars.mustache(view.lookup(\"newPath\"));                                                             // 38\n      }                                                                                                                // 39\n    }, HTML.I({                                                                                                        // 40\n      \"class\": \"fa fa-angle-double-right\"                                                                              // 41\n    }), \" New\")), \"\\n\t\t\t\t\t\t\", HTML.LI({                                                                                // 42\n      \"class\": function() {                                                                                            // 43\n        return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"viewPath\"));                               // 44\n      }                                                                                                                // 45\n    }, HTML.A({                                                                                                        // 46\n      href: function() {                                                                                               // 47\n        return Spacebars.mustache(view.lookup(\"viewPath\"));                                                            // 48\n      }                                                                                                                // 49\n    }, HTML.I({                                                                                                        // 50\n      \"class\": \"fa fa-angle-double-right\"                                                                              // 51\n    }), \" View All\")), \"\\n\t\t\t\t\t\t\", Blaze.Each(function() {                                                             // 52\n      return Spacebars.call(view.lookup(\"admin_collection_items\"));                                                    // 53\n    }, function() {                                                                                                    // 54\n      return [ \"\\n\t\t\t\t\t\t\", HTML.LI({                                                                                   // 55\n        \"class\": function() {                                                                                          // 56\n          return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"url\"));                                  // 57\n        }                                                                                                              // 58\n      }, HTML.A({                                                                                                      // 59\n        href: function() {                                                                                             // 60\n          return Spacebars.mustache(view.lookup(\"url\"));                                                               // 61\n        }                                                                                                              // 62\n      }, HTML.I({                                                                                                      // 63\n        \"class\": \"fa fa-angle-double-right\"                                                                            // 64\n      }), \" \", Blaze.View(\"lookup:title\", function() {                                                                 // 65\n        return Spacebars.mustache(view.lookup(\"title\"));                                                               // 66\n      }))), \"\\n\t\t\t\t\t\t\" ];                                                                                              // 67\n    }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\" ];                                                                             // 68\n  }), \"\\n\t\t\t\t\", Blaze.Each(function() {                                                                                // 69\n    return Spacebars.call(view.lookup(\"admin_sidebar_items\"));                                                         // 70\n  }, function() {                                                                                                      // 71\n    return [ \"\\n\t\t\t\t\t\", Blaze.If(function() {                                                                          // 72\n      return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"urls\"));                                            // 73\n    }, function() {                                                                                                    // 74\n      return [ \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminSidebarItemTree\")), \" -->\\n\t\t\t\t\t\" ];            // 75\n    }, function() {                                                                                                    // 76\n      return [ \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminSidebarItem\")), \" -->\\n\t\t\t\t\t\" ];                // 77\n    }), \"\\n\t\t\t\t\" ];                                                                                                    // 78\n  }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\");                                                                                       // 79\n}));                                                                                                                   // 80\n                                                                                                                       // 81\nTemplate.__checkName(\"adminSidebarItem\");                                                                              // 82\nTemplate[\"adminSidebarItem\"] = new Template(\"Template.adminSidebarItem\", (function() {                                 // 83\n  var view = this;                                                                                                     // 84\n  return HTML.LI({                                                                                                     // 85\n    \"class\": function() {                                                                                              // 86\n      return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"url\"));                                      // 87\n    }                                                                                                                  // 88\n  }, \"\\n\t\t\", HTML.A({                                                                                                  // 89\n    href: function() {                                                                                                 // 90\n      return Spacebars.mustache(view.lookup(\"url\"));                                                                   // 91\n    }                                                                                                                  // 92\n  }, \"\\n\t\t\t\", Blaze.If(function() {                                                                                    // 93\n    return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"icon\"));                                              // 94\n  }, function() {                                                                                                      // 95\n    return [ \"\\n\t\t\t\", HTML.I({                                                                                         // 96\n      \"class\": function() {                                                                                            // 97\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"options\"), \"icon\")) ];                        // 98\n      }                                                                                                                // 99\n    }), \"\\n\t\t\t\" ];                                                                                                     // 100\n  }), \"\\n\t\t\t\", HTML.SPAN(Blaze.View(\"lookup:title\", function() {                                                       // 101\n    return Spacebars.mustache(view.lookup(\"title\"));                                                                   // 102\n  })), \"\\n\t\t\"), \"\\n\t\");                                                                                                // 103\n}));                                                                                                                   // 104\n                                                                                                                       // 105\nTemplate.__checkName(\"adminSidebarItemTree\");                                                                          // 106\nTemplate[\"adminSidebarItemTree\"] = new Template(\"Template.adminSidebarItemTree\", (function() {                         // 107\n  var view = this;                                                                                                     // 108\n  return HTML.LI({                                                                                                     // 109\n    \"class\": \"treeview\"                                                                                                // 110\n  }, \"\\n\t\t\", HTML.A({                                                                                                  // 111\n    href: \"#\"                                                                                                          // 112\n  }, \"\\n\t\t\t\", Blaze.If(function() {                                                                                    // 113\n    return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"icon\"));                                              // 114\n  }, function() {                                                                                                      // 115\n    return [ \"\\n\t\t\t\", HTML.I({                                                                                         // 116\n      \"class\": function() {                                                                                            // 117\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"options\"), \"icon\")) ];                        // 118\n      }                                                                                                                // 119\n    }), \"\\n\t\t\t\" ];                                                                                                     // 120\n  }), \"\\n\t\t\t\", HTML.SPAN(Blaze.View(\"lookup:title\", function() {                                                       // 121\n    return Spacebars.mustache(view.lookup(\"title\"));                                                                   // 122\n  })), \"\\n\t\t\t\", HTML.Raw('<i class=\"fa fa-angle-left pull-right\"></i>'), \"\\n\t\t\"), \"\\n\t\t\", HTML.UL({                    // 123\n    \"class\": \"treeview-menu\"                                                                                           // 124\n  }, \"\\n\t\t\t\", Blaze.Each(function() {                                                                                  // 125\n    return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"urls\"));                                              // 126\n  }, function() {                                                                                                      // 127\n    return [ \"\\n\t\t\t\", HTML.LI({                                                                                        // 128\n      \"class\": function() {                                                                                            // 129\n        return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"url\"));                                    // 130\n      }                                                                                                                // 131\n    }, HTML.A({                                                                                                        // 132\n      href: function() {                                                                                               // 133\n        return Spacebars.mustache(view.lookup(\"url\"));                                                                 // 134\n      }                                                                                                                // 135\n    }, HTML.I({                                                                                                        // 136\n      \"class\": \"fa fa-angle-double-right\"                                                                              // 137\n    }), Blaze.View(\"lookup:title\", function() {                                                                        // 138\n      return Spacebars.mustache(view.lookup(\"title\"));                                                                 // 139\n    }))), \"\\n\t\t\t\" ];                                                                                                   // 140\n  }), \"\\n\t\t\"), \"\\n\t\");                                                                                                 // 141\n}));                                                                                                                   // 142\n                                                                                                                       // 143\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/html/template.admin_header.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"AdminHeader\");                                                                                   // 2\nTemplate[\"AdminHeader\"] = new Template(\"Template.AdminHeader\", (function() {                                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.HEADER({                                                                                                 // 5\n    \"class\": \"main-header\"                                                                                             // 6\n  }, \"\\n        \", HTML.A({                                                                                            // 7\n    href: \"/admin\",                                                                                                    // 8\n    \"class\": \"logo\"                                                                                                    // 9\n  }, \"\\n            \", Blaze.If(function() {                                                                           // 10\n    return Spacebars.call(Spacebars.dot(view.lookup(\"AdminConfig\"), \"name\"));                                          // 11\n  }, function() {                                                                                                      // 12\n    return [ \"\\n            \", Blaze.View(\"lookup:AdminConfig.name\", function() {                                      // 13\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"AdminConfig\"), \"name\"));                                    // 14\n    }), \"\\n            \" ];                                                                                            // 15\n  }, function() {                                                                                                      // 16\n    return \"\\n            Flow-DB-Admin\\n            \";                                                                // 17\n  }), \"\\n        \"), \"\\n        \", HTML.NAV({                                                                          // 18\n    \"class\": \"navbar navbar-static-top\",                                                                               // 19\n    role: \"navigation\"                                                                                                 // 20\n  }, \"\\n            \", HTML.Raw(\"<!-- Sidebar toggle button-->\"), \"\\n            \", HTML.Raw('<a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"offcanvas\" role=\"button\">\\n                <span class=\"sr-only\">Toggle navigation</span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n            </a>'), \"\\n            \", HTML.DIV({\n    \"class\": \"navbar-custom-menu\"                                                                                      // 22\n  }, \"\\n                \", HTML.UL({                                                                                   // 23\n    \"class\": \"nav navbar-nav\"                                                                                          // 24\n  }, \"\\n                    \", HTML.LI(\"\\n                        \", Blaze.If(function() {                             // 25\n    return Spacebars.call(Spacebars.dot(view.lookup(\"AdminConfig\"), \"dashboard\", \"homeUrl\"));                          // 26\n  }, function() {                                                                                                      // 27\n    return [ \"\\n                        \", HTML.A({                                                                    // 28\n      href: function() {                                                                                               // 29\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"AdminConfig\"), \"dashboard\", \"homeUrl\"));                  // 30\n      }                                                                                                                // 31\n    }, \"Home\"), \"\\n                        \" ];                                                                        // 32\n  }, function() {                                                                                                      // 33\n    return [ \"\\n                        \", HTML.A({                                                                    // 34\n      href: \"/\"                                                                                                        // 35\n    }, \"Home\"), \"\\n                        \" ];                                                                        // 36\n  }), \"\\n\\n                    \"), \"\\n                    \", HTML.LI({                                                 // 37\n    \"class\": \"dropdown\"                                                                                                // 38\n  }, \"\\n                        \", HTML.Raw('<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            <span>Admin<i class=\"caret\"></i></span>\\n                        </a>'), \"\\n                        \", HTML.UL({\n    \"class\": \"dropdown-menu\"                                                                                           // 40\n  }, \"\\n                            \", HTML.LI({                                                                       // 41\n    \"class\": \"\"                                                                                                        // 42\n  }, \"\\n                            \", HTML.A({                                                                        // 43\n    href: function() {                                                                                                 // 44\n      return Spacebars.mustache(view.lookup(\"profilepath\"));                                                           // 45\n    }                                                                                                                  // 46\n  }, \"\\n                                Your profile\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.Raw('<li class=\"\">\\n                                <a href=\"#\" class=\"btn-sign-out\">Sign out\\n                                </a>\\n                            </li>'), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));                                                                                                                   // 48\n                                                                                                                       // 49\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/js/admin_layout.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nBlazeLayout.setRoot('body');                                                                                           // 1\nTemplate.fAdminLayout.created = function () {                                                                          // 2\n  var self = this;                                                                                                     // 3\n                                                                                                                       // 4\n  self.minHeight = new ReactiveVar(                                                                                    // 5\n    $(window).height() - $('.main-header').height());                                                                  // 6\n                                                                                                                       // 7\n  $(window).resize(function () {                                                                                       // 8\n    self.minHeight.set($(window).height() - $('.main-header').height());                                               // 9\n  });                                                                                                                  // 10\n                                                                                                                       // 11\n  $('body').addClass('fixed');                                                                                         // 12\n};                                                                                                                     // 13\n                                                                                                                       // 14\nTemplate.fAdminLayout.helpers({                                                                                        // 15\n  minHeight: function () {                                                                                             // 16\n    return Template.instance().minHeight.get() + 'px'                                                                  // 17\n  }                                                                                                                    // 18\n});                                                                                                                    // 19\n                                                                                                                       // 20\n                                                                                                                       // 21\ndataTableOptions = {                                                                                                   // 22\n    \"aaSorting\": [],                                                                                                   // 23\n    \"bPaginate\": true,                                                                                                 // 24\n    \"bLengthChange\": false,                                                                                            // 25\n    \"bFilter\": true,                                                                                                   // 26\n    \"bSort\": true,                                                                                                     // 27\n    \"bInfo\": true,                                                                                                     // 28\n    \"bAutoWidth\": false                                                                                                // 29\n};                                                                                                                     // 30\n                                                                                                                       // 31\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/js/helpers.coffee.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar adminCollections;                                                                                                  // 1\n                                                                                                                       //\nTemplate.registerHelper('AdminTables', AdminTables);                                                                   // 1\n                                                                                                                       //\nadminCollections = function() {                                                                                        // 1\n  var collections;                                                                                                     // 4\n  collections = {};                                                                                                    // 4\n  if (typeof AdminConfig !== 'undefined' && typeof AdminConfig.collections === 'object') {                             // 6\n    collections = AdminConfig.collections;                                                                             // 7\n  }                                                                                                                    //\n  collections.Users = {                                                                                                // 4\n    collectionObject: Meteor.users,                                                                                    // 10\n    icon: 'user',                                                                                                      // 10\n    label: 'Users'                                                                                                     // 10\n  };                                                                                                                   //\n  return _.map(collections, function(obj, key) {                                                                       //\n    obj = _.extend(obj, {                                                                                              // 15\n      name: key                                                                                                        // 15\n    });                                                                                                                //\n    obj = _.defaults(obj, {                                                                                            // 15\n      label: key,                                                                                                      // 16\n      icon: 'plus',                                                                                                    // 16\n      color: 'blue'                                                                                                    // 16\n    });                                                                                                                //\n    return obj = _.extend(obj, {                                                                                       //\n      viewPath: FlowRouter.path(\"/admin/view/:coll\", {                                                                 // 18\n        coll: key                                                                                                      // 18\n      }),                                                                                                              //\n      newPath: FlowRouter.path(\"/admin/new/:coll\", {                                                                   // 18\n        coll: key                                                                                                      // 19\n      })                                                                                                               //\n    });                                                                                                                //\n  });                                                                                                                  //\n};                                                                                                                     // 3\n                                                                                                                       //\nTemplate.registerHelper('AdminConfig', function() {                                                                    // 1\n  if (typeof AdminConfig !== 'undefined') {                                                                            // 22\n    return AdminConfig;                                                                                                //\n  }                                                                                                                    //\n});                                                                                                                    // 21\n                                                                                                                       //\nTemplate.registerHelper('admin_skin', function() {                                                                     // 1\n  return (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.skin : void 0) || 'black-light';    //\n});                                                                                                                    // 24\n                                                                                                                       //\nTemplate.registerHelper('admin_collections', adminCollections);                                                        // 1\n                                                                                                                       //\nTemplate.registerHelper('admin_collection_name', function() {                                                          // 1\n  return Session.get('admin_collection_name');                                                                         //\n});                                                                                                                    // 29\n                                                                                                                       //\nTemplate.registerHelper('admin_current_id', function() {                                                               // 1\n  return Session.get('admin_id');                                                                                      //\n});                                                                                                                    // 32\n                                                                                                                       //\nTemplate.registerHelper('admin_current_doc', function() {                                                              // 1\n  return Session.get('admin_doc');                                                                                     //\n});                                                                                                                    // 35\n                                                                                                                       //\nTemplate.registerHelper('admin_is_users_collection', function() {                                                      // 1\n  return Session.get('admin_collection_name') === 'Users';                                                             //\n});                                                                                                                    // 38\n                                                                                                                       //\nTemplate.registerHelper('admin_sidebar_items', function() {                                                            // 1\n  return AdminDashboard.sidebarItems;                                                                                  //\n});                                                                                                                    // 41\n                                                                                                                       //\nTemplate.registerHelper('admin_collection_items', function() {                                                         // 1\n  var items;                                                                                                           // 45\n  items = [];                                                                                                          // 45\n  _.each(AdminDashboard.collectionItems, (function(_this) {                                                            // 45\n    return function(fn) {                                                                                              //\n      var item;                                                                                                        // 47\n      item = fn(_this.name, '/admin/' + _this.name);                                                                   // 47\n      if ((item != null ? item.title : void 0) && (item != null ? item.url : void 0)) {                                // 48\n        return items.push(item);                                                                                       //\n      }                                                                                                                //\n    };                                                                                                                 //\n  })(this));                                                                                                           //\n  return items;                                                                                                        //\n});                                                                                                                    // 44\n                                                                                                                       //\nTemplate.registerHelper('admin_omit_fields', function() {                                                              // 1\n  var collection, global;                                                                                              // 53\n  if (typeof AdminConfig.autoForm !== 'undefined' && typeof AdminConfig.autoForm.omitFields === 'object') {            // 53\n    global = AdminConfig.autoForm.omitFields;                                                                          // 54\n  }                                                                                                                    //\n  if (!Session.equals('admin_collection_name', 'Users') && typeof AdminConfig !== 'undefined' && typeof AdminConfig.collections[Session.get('admin_collection_name')].omitFields === 'object') {\n    collection = AdminConfig.collections[Session.get('admin_collection_name')].omitFields;                             // 56\n  }                                                                                                                    //\n  if (typeof global === 'object' && typeof collection === 'object') {                                                  // 57\n    return _.union(global, collection);                                                                                //\n  } else if (typeof global === 'object') {                                                                             //\n    return global;                                                                                                     //\n  } else if (typeof collection === 'object') {                                                                         //\n    return collection;                                                                                                 //\n  }                                                                                                                    //\n});                                                                                                                    // 52\n                                                                                                                       //\nTemplate.registerHelper('AdminSchemas', function() {                                                                   // 1\n  return AdminDashboard.schemas;                                                                                       //\n});                                                                                                                    // 64\n                                                                                                                       //\nTemplate.registerHelper('adminGetUsers', function() {                                                                  // 1\n  return Meteor.users;                                                                                                 //\n});                                                                                                                    // 70\n                                                                                                                       //\nTemplate.registerHelper('adminGetUserSchema', function() {                                                             // 1\n  var schema;                                                                                                          // 74\n  if (_.has(AdminConfig, 'userSchema')) {                                                                              // 74\n    schema = AdminConfig.userSchema;                                                                                   // 75\n  } else if (typeof Meteor.users._c2 === 'object') {                                                                   //\n    schema = Meteor.users.simpleSchema();                                                                              // 77\n  }                                                                                                                    //\n  return schema;                                                                                                       // 79\n});                                                                                                                    // 73\n                                                                                                                       //\nTemplate.registerHelper('adminCollectionLabel', function(collection) {                                                 // 1\n  if (collection != null) {                                                                                            // 82\n    return AdminDashboard.collectionLabel(collection);                                                                 //\n  }                                                                                                                    //\n});                                                                                                                    // 81\n                                                                                                                       //\nTemplate.registerHelper('adminCollectionCount', function(collection) {                                                 // 1\n  var ref;                                                                                                             // 85\n  if (collection === 'Users') {                                                                                        // 85\n    return Meteor.users.find().count();                                                                                //\n  } else {                                                                                                             //\n    return (ref = AdminCollectionsCount.findOne({                                                                      //\n      collection: collection                                                                                           //\n    })) != null ? ref.count : void 0;                                                                                  //\n  }                                                                                                                    //\n});                                                                                                                    // 84\n                                                                                                                       //\nTemplate.registerHelper('adminTemplate', function(collection, mode) {                                                  // 1\n  var ref, ref1;                                                                                                       // 91\n  if ((collection != null ? collection.toLowerCase() : void 0) !== 'users' && typeof (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? (ref = AdminConfig.collections) != null ? (ref1 = ref[collection]) != null ? ref1.templates : void 0 : void 0 : void 0) !== 'undefined') {\n    return AdminConfig.collections[collection].templates[mode];                                                        //\n  }                                                                                                                    //\n});                                                                                                                    // 90\n                                                                                                                       //\nTemplate.registerHelper('adminGetCollection', function(collection) {                                                   // 1\n  return _.find(adminCollections(), function(item) {                                                                   //\n    return item.name === collection;                                                                                   //\n  });                                                                                                                  //\n});                                                                                                                    // 94\n                                                                                                                       //\nTemplate.registerHelper('adminWidgets', function() {                                                                   // 1\n  if (typeof AdminConfig.dashboard !== 'undefined' && typeof AdminConfig.dashboard.widgets !== 'undefined') {          // 98\n    return AdminConfig.dashboard.widgets;                                                                              //\n  }                                                                                                                    //\n});                                                                                                                    // 97\n                                                                                                                       //\nTemplate.registerHelper('adminViewPath', function(collection) {                                                        // 1\n  return FlowRouter.path(\"/admin/view/:coll\", {                                                                        //\n    coll: collection                                                                                                   // 110\n  });                                                                                                                  //\n});                                                                                                                    // 109\n                                                                                                                       //\nTemplate.registerHelper('adminNewPath', function(collection) {                                                         // 1\n  return FlowRouter.path(\"/admin/new/:coll\", {                                                                         //\n    coll: collection                                                                                                   // 113\n  });                                                                                                                  //\n});                                                                                                                    // 112\n                                                                                                                       //\nTemplate.registerHelper('AdminDashboardPath', function() {                                                             // 1\n  return FlowRouter.path('AdminDashboard');                                                                            //\n});                                                                                                                    // 115\n                                                                                                                       //\nTemplate.registerHelper('isSubReady', function(sub) {                                                                  // 1\n  if (sub) {                                                                                                           // 119\n    return FlowRouter.subsReady(sub);                                                                                  //\n  } else {                                                                                                             //\n    return FlowRouter.subsReady();                                                                                     //\n  }                                                                                                                    //\n});                                                                                                                    // 118\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/js/templates.coffee.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nTemplate.AdminDashboardView.rendered = function() {                                                                    // 1\n  var table;                                                                                                           // 2\n  return table = this.$('.dataTable').DataTable();                                                                     //\n};                                                                                                                     // 1\n                                                                                                                       //\nTemplate.AdminDashboardView.helpers({                                                                                  // 1\n  hasDocuments: function() {                                                                                           // 5\n    var ref;                                                                                                           // 6\n    return ((ref = AdminCollectionsCount.findOne({                                                                     //\n      collection: Session.get('admin_collection_name')                                                                 //\n    })) != null ? ref.count : void 0) > 0;                                                                             //\n  },                                                                                                                   //\n  newPath: function() {                                                                                                // 5\n    return FlowRouter.path(\"/admin/new/:coll\", {                                                                       //\n      coll: Session.get('admin_collection_name')                                                                       // 8\n    });                                                                                                                //\n  },                                                                                                                   //\n  admin_table: function() {                                                                                            // 5\n    return AdminTables[Session.get('admin_collection_name')];                                                          //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.adminUsersIsAdmin.helpers({                                                                                   // 1\n  checkadmin: function() {                                                                                             // 12\n    return Roles.userIsInRole(this._id, 'admin');                                                                      //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.adminUsersMailBtn.helpers({                                                                                   // 1\n  adminUserEmail: function() {                                                                                         // 15\n    var user;                                                                                                          // 16\n    user = this;                                                                                                       // 16\n    if (user && user.emails && user.emails[0] && user.emails[0].address) {                                             // 17\n      return user.emails[0].address;                                                                                   //\n    } else if (user && user.services && user.services.facebook && user.services.facebook.email) {                      //\n      return user.services.facebook.email;                                                                             //\n    } else if (user && user.services && user.services.google && user.services.google.email) {                          //\n      return user.services.google.email;                                                                               //\n    } else {                                                                                                           //\n      return 'null@null.null';                                                                                         //\n    }                                                                                                                  //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.adminEditBtn.helpers({                                                                                        // 1\n  path: function() {                                                                                                   // 25\n    return FlowRouter.path('/admin/edit/:coll/:_id', {                                                                 //\n      coll: Session.get('admin_collection_name'),                                                                      // 27\n      _id: this._id                                                                                                    // 27\n    });                                                                                                                //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.adminDeleteBtn.helpers({                                                                                      // 1\n  path: function() {                                                                                                   // 30\n    return FlowRouter.path('/admin/edit/:coll/:_id', {                                                                 //\n      coll: Session.get('admin_collection_name'),                                                                      // 31\n      _id: this._id                                                                                                    // 31\n    }, {                                                                                                               //\n      action: 'delete'                                                                                                 // 34\n    });                                                                                                                //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.AdminHeader.helpers({                                                                                         // 1\n  profilepath: function() {                                                                                            // 37\n    return FlowRouter.path('/admin/edit/:coll/:_id', {                                                                 //\n      coll: 'Users',                                                                                                   // 38\n      _id: Meteor.userId()                                                                                             // 38\n    });                                                                                                                //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.AdminDashboardEdit.rendered = function() {                                                                    // 1\n  var editId, editcollectionName;                                                                                      // 42\n  editcollectionName = FlowRouter.getParam('collectionName');                                                          // 42\n  editId = FlowRouter.getParam('_id');                                                                                 // 42\n  return Session.set('admin_doc', adminCollectionObject(editcollectionName).findOne({                                  //\n    _id: editId                                                                                                        // 44\n  }));                                                                                                                 //\n};                                                                                                                     // 41\n                                                                                                                       //\nTemplate.AdminDashboardEdit.helpers({                                                                                  // 1\n  fadmin_doc: function() {                                                                                             // 47\n    var editId, editcollectionName;                                                                                    // 48\n    editcollectionName = FlowRouter.getParam('collectionName');                                                        // 48\n    editId = FlowRouter.getParam('_id');                                                                               // 48\n    if (editcollectionName && editId) {                                                                                // 50\n      return adminCollectionObject(editcollectionName).findOne({                                                       //\n        _id: editId                                                                                                    // 50\n      });                                                                                                              //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  action: function() {                                                                                                 // 47\n    return FlowRouter.getQueryParam('action');                                                                         //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.AdminDashboardUsersEdit.helpers({                                                                             // 1\n  user: function() {                                                                                                   // 54\n    return Meteor.users.find(FlowRouter.getParam('_id')).fetch();                                                      //\n  },                                                                                                                   //\n  action: function() {                                                                                                 // 54\n    return FlowRouter.getQueryParam('action');                                                                         //\n  },                                                                                                                   //\n  roles: function() {                                                                                                  // 54\n    return Roles.getRolesForUser(FlowRouter.getParam('_id'));                                                          //\n  },                                                                                                                   //\n  otherRoles: function() {                                                                                             // 54\n    return _.difference(_.map(Meteor.roles.find().fetch(), function(role) {                                            //\n      return role.name;                                                                                                //\n    }), Roles.getRolesForUser(FlowRouter.getParam('_id')));                                                            //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/js/events.coffee.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nTemplate.fAdminLayout.events({                                                                                         // 1\n  'click .btn-delete': function(e, t) {                                                                                // 2\n    var _id;                                                                                                           // 3\n    _id = $(e.target).attr('doc');                                                                                     // 3\n    if (Session.equals('admin_collection_name', 'Users')) {                                                            // 4\n      Session.set('admin_id', _id);                                                                                    // 5\n      return Session.set('admin_doc', Meteor.users.findOne(_id));                                                      //\n    } else {                                                                                                           //\n      Session.set('admin_id', parseID(_id));                                                                           // 8\n      return Session.set('admin_doc', adminCollectionObject(Session.get('admin_collection_name')).findOne(parseID(_id)));\n    }                                                                                                                  //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.AdminDashboardUsersEdit.events({                                                                              // 1\n  'click .btn-add-role': function(e, t) {                                                                              // 12\n    console.log('adding user to role');                                                                                // 13\n    return Meteor.call('adminAddUserToRole', $(e.target).attr('user'), $(e.target).attr('role'));                      //\n  },                                                                                                                   //\n  'click .btn-remove-role': function(e, t) {                                                                           // 12\n    console.log('removing user from role');                                                                            // 16\n    return Meteor.call('adminRemoveUserToRole', $(e.target).attr('user'), $(e.target).attr('role'));                   //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.AdminHeader.events({                                                                                          // 1\n  'click .btn-sign-out': function() {                                                                                  // 20\n    return Meteor.logout(function() {                                                                                  //\n      return FlowRouter.go('/');                                                                                       //\n    });                                                                                                                //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.adminDeleteWidget.events({                                                                                    // 1\n  'click #confirm-delete': function() {                                                                                // 25\n    var _id, collection;                                                                                               // 26\n    collection = FlowRouter.getParam('collectionName');                                                                // 26\n    _id = FlowRouter.getParam('_id');                                                                                  // 26\n    return Meteor.call('adminRemoveDoc', collection, _id, function(e, r) {                                             //\n      return FlowRouter.go('/admin/view/' + collection);                                                               //\n    });                                                                                                                //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/js/slim_scroll.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)                                                                 // 1\n * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)                                    // 2\n * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.                                              // 3\n *                                                                                                                     // 4\n * Version: 1.3.0                                                                                                      // 5\n *                                                                                                                     // 6\n */                                                                                                                    // 7\n(function(f){jQuery.fn.extend({slimScroll:function(h){var a=f.extend({width:\"auto\",height:\"250px\",size:\"7px\",color:\"#000\",position:\"right\",distance:\"1px\",start:\"top\",opacity:0.4,alwaysVisible:!1,disableFadeOut:!1,railVisible:!1,railColor:\"#333\",railOpacity:0.2,railDraggable:!0,railClass:\"slimScrollRail\",barClass:\"slimScrollBar\",wrapperClass:\"slimScrollDiv\",allowPageScroll:!1,wheelStep:20,touchScrollStep:200,borderRadius:\"7px\",railBorderRadius:\"7px\"},h);this.each(function(){function r(d){if(s){d=d||\nwindow.event;var c=0;d.wheelDelta&&(c=-d.wheelDelta/120);d.detail&&(c=d.detail/3);f(d.target||d.srcTarget||d.srcElement).closest(\".\"+a.wrapperClass).is(b.parent())&&m(c,!0);d.preventDefault&&!k&&d.preventDefault();k||(d.returnValue=!1)}}function m(d,f,h){k=!1;var e=d,g=b.outerHeight()-c.outerHeight();f&&(e=parseInt(c.css(\"top\"))+d*parseInt(a.wheelStep)/100*c.outerHeight(),e=Math.min(Math.max(e,0),g),e=0<d?Math.ceil(e):Math.floor(e),c.css({top:e+\"px\"}));l=parseInt(c.css(\"top\"))/(b.outerHeight()-c.outerHeight());\ne=l*(b[0].scrollHeight-b.outerHeight());h&&(e=d,d=e/b[0].scrollHeight*b.outerHeight(),d=Math.min(Math.max(d,0),g),c.css({top:d+\"px\"}));b.scrollTop(e);b.trigger(\"slimscrolling\",~~e);v();p()}function C(){window.addEventListener?(this.addEventListener(\"DOMMouseScroll\",r,!1),this.addEventListener(\"mousewheel\",r,!1),this.addEventListener(\"MozMousePixelScroll\",r,!1)):document.attachEvent(\"onmousewheel\",r)}function w(){u=Math.max(b.outerHeight()/b[0].scrollHeight*b.outerHeight(),D);c.css({height:u+\"px\"});\nvar a=u==b.outerHeight()?\"none\":\"block\";c.css({display:a})}function v(){w();clearTimeout(A);l==~~l?(k=a.allowPageScroll,B!=l&&b.trigger(\"slimscroll\",0==~~l?\"top\":\"bottom\")):k=!1;B=l;u>=b.outerHeight()?k=!0:(c.stop(!0,!0).fadeIn(\"fast\"),a.railVisible&&g.stop(!0,!0).fadeIn(\"fast\"))}function p(){a.alwaysVisible||(A=setTimeout(function(){a.disableFadeOut&&s||(x||y)||(c.fadeOut(\"slow\"),g.fadeOut(\"slow\"))},1E3))}var s,x,y,A,z,u,l,B,D=30,k=!1,b=f(this);if(b.parent().hasClass(a.wrapperClass)){var n=b.scrollTop(),\nc=b.parent().find(\".\"+a.barClass),g=b.parent().find(\".\"+a.railClass);w();if(f.isPlainObject(h)){if(\"height\"in h&&\"auto\"==h.height){b.parent().css(\"height\",\"auto\");b.css(\"height\",\"auto\");var q=b.parent().parent().height();b.parent().css(\"height\",q);b.css(\"height\",q)}if(\"scrollTo\"in h)n=parseInt(a.scrollTo);else if(\"scrollBy\"in h)n+=parseInt(a.scrollBy);else if(\"destroy\"in h){c.remove();g.remove();b.unwrap();return}m(n,!1,!0)}}else{a.height=\"auto\"==a.height?b.parent().height():a.height;n=f(\"<div></div>\").addClass(a.wrapperClass).css({position:\"relative\",\noverflow:\"hidden\",width:a.width,height:a.height});b.css({overflow:\"hidden\",width:a.width,height:a.height});var g=f(\"<div></div>\").addClass(a.railClass).css({width:a.size,height:\"100%\",position:\"absolute\",top:0,display:a.alwaysVisible&&a.railVisible?\"block\":\"none\",\"border-radius\":a.railBorderRadius,background:a.railColor,opacity:a.railOpacity,zIndex:90}),c=f(\"<div></div>\").addClass(a.barClass).css({background:a.color,width:a.size,position:\"absolute\",top:0,opacity:a.opacity,display:a.alwaysVisible?\n\"block\":\"none\",\"border-radius\":a.borderRadius,BorderRadius:a.borderRadius,MozBorderRadius:a.borderRadius,WebkitBorderRadius:a.borderRadius,zIndex:99}),q=\"right\"==a.position?{right:a.distance}:{left:a.distance};g.css(q);c.css(q);b.wrap(n);b.parent().append(c);b.parent().append(g);a.railDraggable&&c.bind(\"mousedown\",function(a){var b=f(document);y=!0;t=parseFloat(c.css(\"top\"));pageY=a.pageY;b.bind(\"mousemove.slimscroll\",function(a){currTop=t+a.pageY-pageY;c.css(\"top\",currTop);m(0,c.position().top,!1)});\nb.bind(\"mouseup.slimscroll\",function(a){y=!1;p();b.unbind(\".slimscroll\")});return!1}).bind(\"selectstart.slimscroll\",function(a){a.stopPropagation();a.preventDefault();return!1});g.hover(function(){v()},function(){p()});c.hover(function(){x=!0},function(){x=!1});b.hover(function(){s=!0;v();p()},function(){s=!1;p()});b.bind(\"touchstart\",function(a,b){a.originalEvent.touches.length&&(z=a.originalEvent.touches[0].pageY)});b.bind(\"touchmove\",function(b){k||b.originalEvent.preventDefault();b.originalEvent.touches.length&&\n(m((z-b.originalEvent.touches[0].pageY)/a.touchScrollStep,!0),z=b.originalEvent.touches[0].pageY)});w();\"bottom\"===a.start?(c.css({top:b.outerHeight()-c.outerHeight()}),m(0,!0)):\"top\"!==a.start&&(m(f(a.start).position().top,null,!0),a.alwaysVisible||c.hide());C()}});return this}});jQuery.fn.extend({slimscroll:jQuery.fn.slimScroll})})(jQuery);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/sach_flow-db-admin/lib/client/js/autoForm.coffee.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nAutoForm.addHooks(['admin_insert', 'admin_update', 'adminNewUser', 'adminUpdateUser', 'adminSendResetPasswordEmail', 'adminChangePassword'], {\n  beginSubmit: function() {                                                                                            // 9\n    return $('.btn-primary').addClass('disabled');                                                                     //\n  },                                                                                                                   //\n  endSubmit: function() {                                                                                              // 9\n    return $('.btn-primary').removeClass('disabled');                                                                  //\n  },                                                                                                                   //\n  onError: function(formType, error) {                                                                                 // 9\n    return AdminDashboard.alertFailure(error.message);                                                                 //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\nAutoForm.hooks({                                                                                                       // 2\n  admin_insert: {                                                                                                      // 17\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {                                                             // 18\n      var hook;                                                                                                        // 19\n      hook = this;                                                                                                     // 19\n      Meteor.call('adminInsertDoc', insertDoc, Session.get('admin_collection_name'), function(e, r) {                  // 19\n        if (e) {                                                                                                       // 21\n          return hook.done(e);                                                                                         //\n        } else {                                                                                                       //\n          return adminCallback('onInsert', [Session.get('admin_collection_name', insertDoc, updateDoc, currentDoc)], function(collection) {\n            return hook.done(null, collection);                                                                        //\n          });                                                                                                          //\n        }                                                                                                              //\n      });                                                                                                              //\n      return false;                                                                                                    // 26\n    },                                                                                                                 //\n    onSuccess: function(formType, collection) {                                                                        // 18\n      AdminDashboard.alertSuccess('Successfully created');                                                             // 28\n      return FlowRouter.go(\"/admin/view/\" + collection);                                                               //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  admin_update: {                                                                                                      // 17\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {                                                             // 32\n      var hook;                                                                                                        // 33\n      hook = this;                                                                                                     // 33\n      Meteor.call('adminUpdateDoc', updateDoc, Session.get('admin_collection_name'), this.docId, function(e, r) {      // 33\n        if (e) {                                                                                                       // 35\n          return hook.done(e);                                                                                         //\n        } else {                                                                                                       //\n          return adminCallback('onUpdate', [Session.get('admin_collection_name', insertDoc, updateDoc, currentDoc)], function(collection) {\n            return hook.done(null, collection);                                                                        //\n          });                                                                                                          //\n        }                                                                                                              //\n      });                                                                                                              //\n      return false;                                                                                                    // 40\n    },                                                                                                                 //\n    onSuccess: function(formType, collection) {                                                                        // 32\n      return AdminDashboard.alertSuccess('Successfully updated');                                                      //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  adminNewUser: {                                                                                                      // 17\n    onSuccess: function(formType, result) {                                                                            // 45\n      return AdminDashboard.alertSuccess('Created user');                                                              //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  adminUpdateUser: {                                                                                                   // 17\n    onSubmit: function(insertDoc, updateDoc, currentDoc) {                                                             // 49\n      Meteor.call('adminUpdateUser', updateDoc, Session.get('admin_id'), this.done);                                   // 50\n      return false;                                                                                                    // 51\n    },                                                                                                                 //\n    onSuccess: function(formType, result) {                                                                            // 49\n      return AdminDashboard.alertSuccess('Updated user');                                                              //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  adminSendResetPasswordEmail: {                                                                                       // 17\n    onSuccess: function(formType, result) {                                                                            // 56\n      return AdminDashboard.alertSuccess('Email sent');                                                                //\n    }                                                                                                                  //\n  },                                                                                                                   //\n  adminChangePassword: {                                                                                               // 17\n    onSuccess: function(operation, result, template) {                                                                 // 60\n      return AdminDashboard.alertSuccess('Password reset');                                                            //\n    }                                                                                                                  //\n  }                                                                                                                    //\n});                                                                                                                    //\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['sach:flow-db-admin'] = {}, {\n  AdminDashboard: AdminDashboard\n});\n\n})();\n","servePath":"/packages/sach_flow-db-admin.js","sourceMap":{"version":3,"sources":["/packages/sach_flow-db-admin/lib/both/AdminDashboard.coffee","/packages/sach_flow-db-admin/lib/both/routes.js","/packages/sach_flow-db-admin/lib/both/utils.coffee","/packages/sach_flow-db-admin/lib/both/startup.coffee","/packages/sach_flow-db-admin/lib/both/collections.coffee","/packages/sach_flow-db-admin/lib/client/html/template.admin_templates.js","/packages/sach_flow-db-admin/lib/client/html/template.admin_widgets.js","/packages/sach_flow-db-admin/lib/client/html/template.fadmin_layouts.js","/packages/sach_flow-db-admin/lib/client/html/template.admin_sidebar.js","/packages/sach_flow-db-admin/lib/client/html/template.admin_header.js","/packages/sach_flow-db-admin/lib/client/js/admin_layout.js","/packages/sach_flow-db-admin/lib/client/js/helpers.coffee","/packages/sach_flow-db-admin/lib/client/js/templates.coffee","/packages/sach_flow-db-admin/lib/client/js/events.coffee","/packages/sach_flow-db-admin/lib/client/js/slim_scroll.js","/packages/sach_flow-db-admin/lib/client/js/autoForm.coffee"],"names":[],"mappings":"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AAO,CAAC,cAAvB,GAA4C,iBAC3C;AAAA,OACC;AAAA,UAAM,MAAN;GADD;AAAA,EAEA,UACC;AAAA,UAAM,MAAN;GAHD;CAD2C,CA1E5C;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6H;;;;;;;;;;;;;;;;;;;ACpHA,IAAC,sBAAD,GAAyB,SAAC,UAAD;AACxB,MAAG,kBAAkB,CAAC,WAAY,YAA/B,KAA8C,WAA9C,IAA8D,kBAAkB,CAAC,WAAY,YAAW,CAAC,gBAA3C,KAA+D,WAAhI;WACC,WAAW,CAAC,WAAY,YAAW,CAAC,iBADrC;GAAA;WAGC,OAAO,UAAP,EAHD;GADwB;AAAA,CAAzB;;AAAA,IAMC,cAAD,GAAiB,SAAC,IAAD,EAAO,IAAP,EAAa,QAAb;AAChB;AAAA,SAAO,KAAP;AACA,MAAG,kHAA+B,yBAA/B,KAAwC,UAA3C;AACC,WAAO,mBAAW,CAAC,SAAZ,CAAsB,MAAtB,aAA4B,IAA5B,MAAwC,KAA/C,CADD;GADA;AAGA,MAAG,oBAAmB,UAAtB;AACC;aAAA,qBAAS,IAAT;KADD;GAJgB;AAAA,CANjB;;AAAA,IAaC,OA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K;QAAA,CAAN;AAAA,QAGA,UAAU,UAAU,CAAC,QAHrB;QAbgD;IAAA,CAAjD,EAFmB;EAAA,CAApB,EADoB;AAAA,CA9GrB;;AAAA,MAmIM,CAAC,OAAP,CAAe;AACd,iFAAkB,WAAW,CAAE,oBAA/B;AACA,MAA+C,MAAM,CAAC,QAAtD;WAAA,gFAAmB,WAAW,CAAE,oBAAhC;GAFc;AAAA,CAAf,CAnIA;;;;;;;;;;;;;;;;;;;;ACAA,IAAC,sBAAD,GAA6B,SAAK,CAAC,UAAN,CAAiB,uBAAjrcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACzhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"/packages/sach_flow-db-admin.js","sourcesContent":["AdminDashboard =\n\tschemas: {}\n\tsidebarItems: []\n\tcollectionItems: []\n\talertSuccess: (message)->\n\t\tSession.set 'adminError', null\n\t\tSession.set 'adminSuccess', message\n\talertFailure: (message)->\n\t\tSession.set 'adminSuccess', null\n\t\tSession.set 'adminError', message\n\n\tcheckAdmin: ->\n\t\tif not Roles.userIsInRole Meteor.userId(), ['admin']\n\t\t\tMeteor.call 'adminCheckAdmin'\n\t\t\tif (typeof AdminConfig?.nonAdminRedirectRoute == \"string\")\n\t\t\t  Router.go AdminConfig.nonAdminRedirectRoute\n\t\tif typeof @.next == 'function'\n\t\t\t@next()\n\tadminRoutes: ['adminDashboard','adminDashboardUsersNew','adminDashboardUsersEdit','adminDashboardView','adminDashboardNew','adminDashboardEdit']\n\tcollectionLabel: (collection)->\n\t\tif collection == 'Users'\n\t\t\t'Users'\n\t\telse if collection? and typeof AdminConfig.collections[collection].label == 'string'\n\t\t\tAdminConfig.collections[collection].label\n\t\telse Session.get 'admin_collection_name'\n\n\taddSidebarItem: (title, url, options) ->\n\t\titem = title: title\n\t\tif _.isObject(url) and typeof options == 'undefined'\n\t\t\titem.options = url\n\t\telse\n\t\t\titem.url = url\n\t\t\titem.options = options\n\n\t\t@sidebarItems.push item\n\n\textendSidebarItem: (title, urls) ->\n\t\tif _.isObject(urls) then urls = [urls]\n\n\t\texisting = _.find @sidebarItems, (item) -> item.title == title\n\t\tif existing\n\t\t\texisting.options.urls = _.union existing.options.urls, urls\n\n\taddCollectionItem: (fn) ->\n\t\t@collectionItems.push fn\n\n\tpath: (s) ->\n\t\tpath = '/admin'\n\t\tif typeof s == 'string' and s.length > 0\n\t\t\tpath += (if s[0] == '/' then '' else '/') + s\n\t\tpath\n\n\nAdminDashboard.schemas.newUser = new SimpleSchema\n\temail: \n\t\ttype: String\n\t\tlabel: \"Email address\"\n\tchooseOwnPassword:\n\t\ttype: Boolean\n\t\tlabel: 'Let this user choose their own password with an email'\n\t\tdefaultValue: true\n\tpassword:\n\t\ttype: String\n\t\tlabel: 'Password'\n\t\toptional: true\n\tsendPassword:\n\t\ttype: Boolean\n\t\tlabel: 'Send this user their password by email'\n\t\toptional: true\n\nAdminDashboard.schemas.sendResetPasswordEmail = new SimpleSchema\n\t_id:\n\t\ttype: String\n\nAdminDashboard.schemas.changePassword = new SimpleSchema\n\t_id:\n\t\ttype: String\n\tpassword:\n\t\ttype: String\n","\nvar fadminRoutes = FlowRouter.group({\n  name: \"AdminController\",\n  prefix: '/admin',\n  subscriptions: function() {\n    this.register('fadminUsers', Meteor.subscribe('adminUsers'));\n    this.register('fadminUser', Meteor.subscribe('adminUser'));\n    this.register('fadminCollectionsCount', Meteor.subscribe('adminCollectionsCount'));\n  },\n triggersEnter: [\n  \tfunction(context) {\n  \t\tif(!Roles.userIsInRole (Meteor.userId(),['admin']))\n  \t\t{\n  \t\t\tMeteor.call('adminCheckAdmin');\n  \t\t\t//if (typeof AdminConfig.nonAdminRedirectRoute == 'string')\n  \t\t\t//\tFlowRouter.go(AdminController.nonAdminRedirectRoute);\n  \t\t}\n  \t},\n    function(context) {\n      Session.set('adminSuccess', null);\n      Session.set('adminError', null);\n      Session.set('admin_title', null);\n      Session.set('admin_subtitle', null);\n      Session.set('admin_collection_name', null);\n      Session.set('admin_collection_page', null);\n      Session.set('admin_id',null);\n      Session.set('admin_doc', null);\n    }\n  ]\n});\n\nfadminRoutes.route('/',{\n\tname: 'adminDashboard',\n\ttriggersEnter: [\n\t function(context){\n\t \tSession.set('admin_title',\"Dashboard\");\n\t \tSession.set('admin_collection_name',\"\");\n\t \tSession.set('admin_collection_page',\"\");\n\t }\n\t],\n\taction: function ()\n\t{\n\t\tBlazeLayout.render('fAdminLayout', {main: 'AdminDashboard'});\n\t}\n});\n\n\nfadminRoutes.route('/view/:collectionName',{\n\ttriggersEnter: [\n\t\tfunction(context){\n\t\tSession.set('admin_title', context.params.collectionName);\n\t\tSession.set('admin_subtitle', 'View');\n\t\tSession.set('admin_collection_page', 'view');\n\t\tSession.set('admin_collection_name', context.params.collectionName);\n\t}],\n\ttriggersExit: [\n\t\tfunction(context){\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminLoading'});\n\t\t}\n\t],\n\taction: function(params)\n\t{\n\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardView'});\n\t}\n});\n\nfadminRoutes.route('/new/:collectionName',{\n\ttriggersEnter: [function(context){\n\t\tSession.set('admin_title', context.params.collectionName);\n\t\tSession.set('admin_subtitle', 'Create New');\n\t\tSession.set('admin_collection_page', 'new');\n\t\tSession.set('admin_collection_name', context.params.collectionName);\n\t}],\n\ttriggersExit: [\n\t\tfunction(context){\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminLoading'});\n\t\t}\n\t],\n\taction: function(params)\n\t{\tif(params.collectionName == 'Users')\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardUsersNew'});\n\t\telse\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardNew'});\n\t}\n});\n\nfadminRoutes.route('/edit/:collectionName/:_id',{\n\ttriggersEnter: [function(context){\n\t\tSession.set('admin_title', context.params.collectionName);\n\t\tSession.set('admin_subtitle', 'Edit');\n\t\tSession.set('admin_collection_page', 'edit');\n\t\tSession.set('admin_collection_name', context.params.collectionName);\n\t\tif (context.params.collectionName == 'Users')\n\t\t\tSession.set('admin_id', context.params._id);\n\t\telse\n\t\t\tSession.set('admin_id', null);\n\n\t}],\n\ttriggersExit: [\n\t\tfunction(context){\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminLoading'});\n\t\t\tSession.set('admin_id',null);\n\t\t}\n\t],\n\tsubscriptions : function(params){\n\t\tif (params.collectionName !== 'Users')\n\t\tthis.register('admindoc2edit', Meteor.subscribe('adminCollectionDoc', params.collectionName, parseID(params._id)));\n\t},\n\taction: function(params)\n\t{\n\t\tif(params.collectionName == 'Users')\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardUsersEdit'});\n\t\telse\n\t\t\tBlazeLayout.render('fAdminLayout',{main: 'AdminDashboardEdit'});\n\t}\n});\n","@adminCollectionObject = (collection) ->\n\tif typeof AdminConfig.collections[collection] != 'undefined' and typeof AdminConfig.collections[collection].collectionObject != 'undefined'\n\t\tAdminConfig.collections[collection].collectionObject\n\telse\n\t\tlookup collection\n\n@adminCallback = (name, args, callback) ->\n\tstop = false\n\tif typeof AdminConfig?.callbacks?[name] == 'function'\n\t\tstop = AdminConfig.callbacks[name](args...) is false\n\tif typeof callback == 'function'\n\t\tcallback args... unless stop\n\n@lookup = (obj, root, required=true) ->\n\tif typeof root == 'undefined'\n\t\troot = if Meteor.isServer then global else window\n\tif typeof obj == 'string'\n\t\tref = root\n\t\tarr = obj.split '.'\n\t\tcontinue while arr.length and (ref = ref[arr.shift()])\n\t\tif not ref and required\n\t\t\tthrow new Error(obj + ' is not in the ' + root.toString())\n\t\telse\n\t\t\treturn ref\n\treturn obj\n\t\n@parseID = (id) ->\n\tif typeof id == 'string'\n\t\tif(id.indexOf(\"ObjectID\") > -1)\n\t\t\treturn new Mongo.ObjectID(id.slice(id.indexOf('\"') + 1,id.lastIndexOf('\"')))\n\t\telse\n\t\t\treturn id\n\telse\n\t\treturn id\n\n@parseIDs = (ids) ->\n    return _.map ids, (id) ->\n        parseID id\n","@AdminTables = {}\n\nadminTablesDom = '<\"box\"<\"box-header\"<\"box-toolbar\"<\"pull-left\"<lf>><\"pull-right\"p>>><\"box-body\"t>>'\n\nadminEditButton = {\n\tdata: '_id'\n\ttitle: 'Edit'\n\tcreatedCell: (node, cellData, rowData) ->\n\t\t$(node).html(Blaze.toHTMLWithData Template.adminEditBtn, {_id: cellData}, node)\n\twidth: '40px'\n\torderable: false\n}\nadminDelButton = {\n\tdata: '_id'\n\ttitle: 'Delete'\n\tcreatedCell: (node, cellData, rowData) ->\n\t $(node).html(Blaze.toHTMLWithData Template.adminDeleteBtn, {_id: cellData}, node)\n\twidth: '40px'\n\torderable: false\n}\n\nadminEditDelButtons = [\n\tadminEditButton,\n\tadminDelButton\n]\n\ndefaultColumns = () -> [\n  data: '_id',\n  title: 'ID'\n]\n\nAdminTables.Users = new Tabular.Table\n\t# Modify selector to allow search by email\n\tchangeSelector: (selector, userId) ->\n\t\t$or = selector['$or']\n\t\t$or and selector['$or'] = _.map $or, (exp) ->\n\t\t\tif exp.emails?['$regex']?\n\t\t\t\temails: $elemMatch: address: exp.emails\n\t\t\telse\n\t\t\t\texp\n\t\tselector\n\n\tname: 'Users'\n\tcollection: Meteor.users\n\tcolumns: _.union [\n\t\t{\n\t\t\tdata: '_id'\n\t\t\ttitle: 'Admin'\n\t\t\t# TODO: use `tmpl`\n\t\t\tcreatedCell: (node, cellData, rowData) ->\n\t\t\t\t$(node).html(Blaze.toHTMLWithData Template.adminUsersIsAdmin, {_id: cellData}, node)\n\t\t\twidth: '40px'\n\t\t}\n\t\t{\n\t\t\tdata: 'emails'\n\t\t\ttitle: 'Email'\n\t\t\trender: (value) ->\n\t\t\t\tif value then value[0].address else ''\n\t\t\tsearchable: true\n\t\t}\n\t\t{\n\t\t\tdata: 'emails'\n\t\t\ttitle: 'Mail'\n\t\t\t# TODO: use `tmpl`\n\t\t\tcreatedCell: (node, cellData, rowData) ->\n\t\t\t\t$(node).html(Blaze.toHTMLWithData Template.adminUsersMailBtn, {emails: cellData}, node)\n\t\t\twidth: '40px'\n\t\t}\n\t\t{ data: 'createdAt', title: 'Joined' }\n\t], adminEditDelButtons\n\tdom: adminTablesDom\n\nadminTablePubName = (collection) ->\n\t\"admin_tabular_#{collection}\"\n\nadminCreateTables = (collections) ->\n\t_.each AdminConfig?.collections, (collection, name) ->\n\t\t_.defaults collection, {\n\t\t\tshowEditColumn: true\n\t\t\tshowDelColumn: true\n\t\t}\n\n\t\tcolumns = _.map collection.tableColumns, (column) ->\n\t\t\tif column.template\n\t\t\t\tcreatedCell = (node, cellData, rowData) ->\n\t\t\t\t\t$(node).html ''\n\t\t\t\t\tBlaze.renderWithData(Template[column.template], {value: cellData, doc: rowData}, node)\n\n\t\t\tdata: column.name\n\t\t\ttitle: column.label\n\t\t\tcreatedCell: createdCell\n\n\t\tif columns.length == 0\n\t\t\tcolumns = defaultColumns()\n\n\t\tif collection.showEditColumn\n\t\t\tcolumns.push(adminEditButton)\n\t\tif collection.showDelColumn\n\t\t\tcolumns.push(adminDelButton)\n\n\t\tAdminTables[name] = new Tabular.Table\n\t\t\tname: name\n\t\t\tcollection: adminCollectionObject(name)\n\t\t\tpub: collection.children and adminTablePubName(name)\n\t\t\tsub: collection.sub\n\t\t\tcolumns: columns\n\t\t\textraFields: collection.extraFields\n\t\t\tdom: adminTablesDom\n\n\nadminPublishTables = (collections) ->\n\t_.each collections, (collection, name) ->\n\t\tif not collection.children then return undefined\n\t\tMeteor.publishComposite adminTablePubName(name), (tableName, ids, fields) ->\n\t\t\tcheck tableName, String\n\t\t\tcheck ids, Array\n\t\t\tcheck fields, Match.Optional Object\n\n\t\t\textraFields = _.reduce collection.extraFields, (fields, name) ->\n\t\t\t\tfields[name] = 1\n\t\t\t\tfields\n\t\t\t, {}\n\t\t\t_.extend fields, extraFields\n\n\t\t\t@unblock()\n\n\t\t\tfind: ->\n\t\t\t\t@unblock()\n\t\t\t\tadminCollectionObject(name).find {_id: {$in: ids}}, {fields: fields}\n\t\t\tchildren: collection.children\n\nMeteor.startup ->\n\tadminCreateTables AdminConfig?.collections\n\tadminPublishTables AdminConfig?.collections if Meteor.isServer\n","@AdminCollectionsCount = new Mongo.Collection 'adminCollectionsCount'","\nTemplate.__checkName(\"AdminDashboard\");\nTemplate[\"AdminDashboard\"] = new Template(\"Template.AdminDashboard\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"adminWidgets\"));\n  }, function() {\n    return [ \"\\n\t\", Blaze._TemplateWith(function() {\n      return {\n        template: Spacebars.call(view.lookup(\"template\")),\n        data: Spacebars.call(view.lookup(\"data\"))\n      };\n    }, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(Template.__dynamic);\n      });\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"adminDefaultWidgets\")), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"AdminDashboardNew\");\nTemplate[\"AdminDashboardNew\"] = new Template(\"Template.AdminDashboardNew\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"new\");\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.With(function() {\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"new\");\n    }, function() {\n      return [ \"\\n\t\t\", HTML.P(\"start of dynamic temp\"), \"\\n\t\t\", Blaze._TemplateWith(function() {\n        return {\n          template: Spacebars.call(view.lookup(\"name\")),\n          data: Spacebars.call(view.lookup(\"data\"))\n        };\n      }, function() {\n        return Spacebars.include(function() {\n          return Spacebars.call(Template.__dynamic);\n        });\n      }), \"\\n\t\t\", HTML.P(\"end of dynamic temp\"), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"box box-default\"\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": \"box-body\"\n    }, \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n      return {\n        id: Spacebars.call(\"admin_insert\"),\n        collection: Spacebars.call(view.lookup(\"admin_collection_name\")),\n        fields: Spacebars.call(view.lookup(\"admin_fields\")),\n        omitFields: Spacebars.call(view.lookup(\"admin_omit_fields\")),\n        buttonContent: Spacebars.call(\"Create\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"AdminDashboardEdit\");\nTemplate[\"AdminDashboardEdit\"] = new Template(\"Template.AdminDashboardEdit\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isSubReady\"));\n  }, function() {\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"edit\");\n    }, function() {\n      return [ \"\\n\t\t\", Spacebars.With(function() {\n        return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"edit\");\n      }, function() {\n        return [ \"\\n\t\t\", Blaze._TemplateWith(function() {\n          return {\n            template: Spacebars.call(view.lookup(\"name\")),\n            data: Spacebars.call(view.lookup(\"data\"))\n          };\n        }, function() {\n          return Spacebars.include(function() {\n            return Spacebars.call(Template.__dynamic);\n          });\n        }), \"\\n\t\t\" ];\n      }), \"\\n\t\" ];\n    }, function() {\n      return [ \"\\n\t \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"action\"));\n      }, function() {\n        return [ \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminDeleteWidget\")), \"\\n\t \" ];\n      }), \"\\n\t\t\", HTML.DIV({\n        \"class\": \"box box-default\"\n      }, \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"box-body\"\n      }, \"\\n\t\t\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"fadmin_doc\"));\n      }, function() {\n        return [ \"\\n\t\t\t\t\", Blaze._TemplateWith(function() {\n          return {\n            id: Spacebars.call(\"admin_update\"),\n            collection: Spacebars.call(view.lookup(\"admin_collection_name\")),\n            doc: Spacebars.call(view.lookup(\"fadmin_doc\")),\n            fields: Spacebars.call(view.lookup(\"admin_fields\")),\n            omitFields: Spacebars.call(view.lookup(\"admin_omit_fields\")),\n            buttonContent: Spacebars.call(\"Update\")\n          };\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n        }), \"\\n\t\t\t\t\" ];\n      }, function() {\n        return \"\\n\t\t\t\t\tcan't find current doc\\n\t\t\t\t\";\n      }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\" ];\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"box box-default\"\n    }, HTML.DIV({\n      \"class\": \"box-body\"\n    }, \"Loading...\")), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"AdminDashboardViewWrapper\");\nTemplate[\"AdminDashboardViewWrapper\"] = new Template(\"Template.AdminDashboardViewWrapper\", (function() {\n  var view = this;\n  return HTML.Raw(\"<div></div>\\n\t\");\n}));\n\nTemplate.__checkName(\"AdminDashboardView\");\nTemplate[\"AdminDashboardView\"] = new Template(\"Template.AdminDashboardView\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isSubReady\"));\n  }, function() {\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"view\");\n    }, function() {\n      return [ \"\\n\t\t\", Spacebars.With(function() {\n        return Spacebars.dataMustache(view.lookup(\"adminTemplate\"), view.lookup(\"admin_collection_name\"), \"view\");\n      }, function() {\n        return [ \"\\n\t\t\", Blaze._TemplateWith(function() {\n          return {\n            template: Spacebars.call(view.lookup(\"name\")),\n            data: Spacebars.call(view.lookup(\"data\"))\n          };\n        }, function() {\n          return Spacebars.include(function() {\n            return Spacebars.call(Template.__dynamic);\n          });\n        }), \"\\n\t\t\" ];\n      }), \"\\n\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasDocuments\"));\n      }, function() {\n        return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n          return {\n            table: Spacebars.call(view.lookup(\"admin_table\")),\n            \"class\": Spacebars.call(\"table dataTable\")\n          };\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"tabular\"));\n        }), \"\\n\t\t\" ];\n      }, function() {\n        return [ \"\\n\t\t\t\", HTML.DIV({\n          \"class\": \"alert alert-info\"\n        }, \"\\n\t\t\t\t\", HTML.P(\"There are no visible items in this collection.\"), \"\\n\t\t\t\t\", HTML.P(HTML.A({\n          href: function() {\n            return Spacebars.mustache(view.lookup(\"newPath\"));\n          },\n          \"class\": \"btn btn-primary\"\n        }, HTML.I({\n          \"class\": \"fa fa-plus\"\n        }), \" Add one\")), \"\\n\t\t\t\"), \"\\n\t\t\" ];\n      }), \"\\n\t\" ];\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\", HTML.DIV({\n      \"class\": \"box box-default\"\n    }, HTML.DIV({\n      \"class\": \"box-body\"\n    }, \"Loading...\")), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"AdminDashboardUsersNew\");\nTemplate[\"AdminDashboardUsersNew\"] = new Template(\"Template.AdminDashboardUsersNew\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"box box-default\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"box-body\"\n  }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n    return {\n      id: Spacebars.call(\"adminNewUser\"),\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"newUser\")),\n      type: Spacebars.call(\"method\"),\n      meteormethod: Spacebars.call(\"adminNewUser\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"email\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"chooseOwnPassword\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"afFieldValueIs\"), Spacebars.kw({\n          name: \"chooseOwnPassword\",\n          value: false\n        }));\n      }, function() {\n        return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n          return {\n            name: Spacebars.call(\"password\")\n          };\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n        }), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n          return {\n            name: Spacebars.call(\"sendPassword\")\n          };\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n        }), \"\\n\t\t\t\" ];\n      }), \"\\n\t\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary\"\n      }, \"Add User\"), \"\\n\t\t\t\" ];\n    });\n  }), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"AdminDashboardUsersEdit\");\nTemplate[\"AdminDashboardUsersEdit\"] = new Template(\"Template.AdminDashboardUsersEdit\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"action\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"adminDeleteWidget\")), \"\\n\t\" ];\n  }), \"\\n\t\", HTML.DIV({\n    \"class\": \"box box-default\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"box-body\"\n  }, \"\\n\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminAlert\")), \"\\n\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"adminGetUserSchema\"));\n  }, function() {\n    return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n      return {\n        id: Spacebars.call(\"adminUpdateUser\"),\n        buttonContent: Spacebars.call(\"Update\"),\n        buttonClasses: Spacebars.call(\"btn btn-primary btn-sm\"),\n        collection: Spacebars.call(view.lookup(\"adminGetUsers\")),\n        schema: Spacebars.call(view.lookup(\"adminGetUserSchema\")),\n        doc: Spacebars.call(view.lookup(\"admin_current_doc\")),\n        omitFields: Spacebars.call(\"roles,services\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n    }), \"\\n\t\t\t\", HTML.HR(), \"\\n\t\t\t\" ];\n  }), \"\\n\\n\t\t\t\", HTML.Raw(\"<h4>User Roles</h4>\"), \"\\n\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"roles\"));\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-primary btn-xs btn-remove-role\",\n      role: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      user: function() {\n        return Spacebars.mustache(view.lookup(\"admin_current_id\"));\n      }\n    }, Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"otherRoles\"));\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.BUTTON({\n      \"class\": \"btn btn-default btn-xs btn-add-role\",\n      role: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      user: function() {\n        return Spacebars.mustache(view.lookup(\"admin_current_id\"));\n      }\n    }, Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"roles\"));\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.P({\n      style: \"margin-top:5px;\"\n    }, \"Click a role to toggle it.\"), \"\\n\t\t\t\" ];\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.P(\"User not in any roles. Click a role to add it to a user.\"), \"\\n\t\t\t\" ];\n  }), \"\\n\\n\t\t\t\", HTML.Raw(\"<hr>\"), \"\\n\t\t\t\", HTML.Raw(\"<h4>Reset Password</h4>\"), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n    return {\n      id: Spacebars.call(\"adminSendResetPasswordEmail\"),\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"sendResetPasswordEmail\")),\n      type: Spacebars.call(\"method\"),\n      meteormethod: Spacebars.call(\"adminSendResetPasswordEmail\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"form-group hidden\"\n      }, \"\\n\t\t\t\t\", HTML.LABEL({\n        \"class\": \"control-label\",\n        \"for\": \"title\"\n      }, \"ID\"), \"\\n\t\t\t\t\", HTML.INPUT({\n        value: function() {\n          return Spacebars.mustache(view.lookup(\"admin_current_id\"));\n        },\n        type: \"text\",\n        name: \"_id\",\n        omitfields: \"createdAtupdatedAt\",\n        required: \"\",\n        \"data-schema-key\": \"_id\",\n        \"class\": \"form-control\",\n        autocomplete: \"off\"\n      }), \"\\n\t\t\t\t\", HTML.SPAN({\n        \"class\": \"help-block\"\n      }), \"\\n\t\t\t\"), \"\\n\t\t\t\", HTML.P(\"Send a reset password email to \", Blaze.View(\"lookup:admin_current_doc.emails.0.address\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"admin_current_doc\"), \"emails\", \"0\", \"address\"));\n      })), \"\\n\t\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary btn-sm\"\n      }, \"Send Email\"), \"\\n\t\t\t\" ];\n    });\n  }), \"\\n\\n\t\t\t\", HTML.Raw(\"<hr>\"), \"\\n\t\t\t\", HTML.Raw(\"<h4>Change Password</h4>\"), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n    return {\n      id: Spacebars.call(\"adminChangePassword\"),\n      schema: Spacebars.call(Spacebars.dot(view.lookup(\"AdminSchemas\"), \"changePassword\")),\n      type: Spacebars.call(\"method\"),\n      meteormethod: Spacebars.call(\"adminChangePassword\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n\t\t\t\", HTML.DIV({\n        \"class\": \"form-group hidden\"\n      }, \"\\n\t\t\t\t\", HTML.LABEL({\n        \"class\": \"control-label\",\n        \"for\": \"title\"\n      }, \"ID\"), \"\\n\t\t\t\t\", HTML.INPUT({\n        value: function() {\n          return Spacebars.mustache(view.lookup(\"admin_current_id\"));\n        },\n        type: \"text\",\n        name: \"_id\",\n        omitfields: \"createdAtupdatedAt\",\n        required: \"\",\n        \"data-schema-key\": \"_id\",\n        \"class\": \"form-control\",\n        autocomplete: \"off\"\n      }), \"\\n\t\t\t\t\", HTML.SPAN({\n        \"class\": \"help-block\"\n      }), \"\\n\t\t\t\"), \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"password\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n      }), \"\\n\t\t\t\", HTML.BUTTON({\n        type: \"submit\",\n        \"class\": \"btn btn-primary btn-sm\"\n      }, \"Change Password\"), \"\\n\t\t\t\" ];\n    });\n  }), \"\\n\t\t\"), \"\\n\t\") ];\n}));\n\nTemplate.__checkName(\"adminAlert\");\nTemplate[\"adminAlert\"] = new Template(\"Template.adminAlert\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminSuccess\");\n  }, function() {\n    return [ \"\\n\t\", HTML.DIV({\n      \"class\": \"alert alert-success admin-alert\"\n    }, \"\\n\t\t\", Blaze.View(\"lookup:$.Session.get\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminSuccess\");\n    }), \"\\n\t\"), \"\\n\t\" ];\n  }), \"\\n\\n\t\", Blaze.If(function() {\n    return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminError\");\n  }, function() {\n    return [ \"\\n\t\", HTML.DIV({\n      \"class\": \"alert alert-danger admin-alert\"\n    }, \"\\n\t\t\", Blaze.View(\"lookup:$.Session.get\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"adminError\");\n    }), \"\\n\t\"), \"\\n\t\" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"adminUsersIsAdmin\");\nTemplate[\"adminUsersIsAdmin\"] = new Template(\"Template.adminUsersIsAdmin\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"checkadmin\"));\n  }, function() {\n    return HTML.I({\n      \"class\": \"fa fa-check\"\n    });\n  });\n}));\n\nTemplate.__checkName(\"adminUsersMailBtn\");\nTemplate[\"adminUsersMailBtn\"] = new Template(\"Template.adminUsersMailBtn\", (function() {\n  var view = this;\n  return HTML.A({\n    href: function() {\n      return [ \"mailto:\", Spacebars.mustache(view.lookup(\"adminUserEmail\")) ];\n    },\n    \"class\": \"btn btn-default btn-xs\"\n  }, HTML.Raw('<i class=\"fa fa-envelope\"></i>'));\n}));\n\nTemplate.__checkName(\"adminEditBtn\");\nTemplate[\"adminEditBtn\"] = new Template(\"Template.adminEditBtn\", (function() {\n  var view = this;\n  return [ HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"path\"));\n    },\n    \"class\": \"hidden-xs btn btn-xs btn-primary\"\n  }, HTML.Raw('<i class=\"fa fa-pencil\"></i>')), \"\\n\t\", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"path\"));\n    },\n    \"class\": \"visible-xs btn btn-sm btn-primary\"\n  }, HTML.Raw('<i class=\"fa fa-pencil\"></i>'), \" Edit\") ];\n}));\n\nTemplate.__checkName(\"adminDeleteBtn\");\nTemplate[\"adminDeleteBtn\"] = new Template(\"Template.adminDeleteBtn\", (function() {\n  var view = this;\n  return [ HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"path\"));\n    },\n    \"class\": \"hidden-xs btn btn-xs btn-primary\"\n  }, HTML.Raw('<i class=\"fa fa-times\"></i>')), \"\\n\t \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"path\"));\n    },\n    \"class\": \"visible-xs btn btn-sm btn-primary\"\n  }, HTML.Raw('<i class=\"fa fa-times\"></i>'), \"Delete\") ];\n}));\n","\nTemplate.__checkName(\"adminDefaultWidgets\");\nTemplate[\"adminDefaultWidgets\"] = new Template(\"Template.adminDefaultWidgets\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"admin_collections\"));\n  }, function() {\n    return [ \"\\n\t\t\", Blaze.Unless(function() {\n      return Spacebars.dataMustache(view.lookup(\"$eq\"), view.lookup(\"showWidget\"), false);\n    }, function() {\n      return [ \"\\n\t\t\t\", Blaze._TemplateWith(function() {\n        return {\n          collection: Spacebars.call(view.lookup(\"name\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"adminCollectionWidget\"));\n      }), \"\\n\t\t\" ];\n    }), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"adminCollectionWidget\");\nTemplate[\"adminCollectionWidget\"] = new Template(\"Template.adminCollectionWidget\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"class\"));\n      }, function() {\n        return Blaze.View(\"lookup:class\", function() {\n          return Spacebars.mustache(view.lookup(\"class\"));\n        });\n      }, function() {\n        return \"col-lg-3 col-xs-6\";\n      });\n    }\n  }, \"\\n\t\", Spacebars.With(function() {\n    return Spacebars.dataMustache(view.lookup(\"adminGetCollection\"), view.lookup(\"collection\"));\n  }, function() {\n    return [ \"\\n\t\t\", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"adminViewPath\"), Spacebars.dot(view.lookup(\".\"), \"name\"));\n      }\n    }, \"\\n\t\t\t\", HTML.DIV({\n      \"class\": function() {\n        return [ \"small-box bg-\", Spacebars.mustache(view.lookup(\"color\")) ];\n      }\n    }, \"\\n\t\t\t\t\", HTML.DIV({\n      \"class\": \"inner\"\n    }, \"\\n\t\t\t\t\t\", HTML.H3(\"\\n\t\t\t\t\t\t\", Blaze.View(\"lookup:adminCollectionCount\", function() {\n      return Spacebars.mustache(view.lookup(\"adminCollectionCount\"), view.lookup(\"name\"));\n    }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.P(\"\\n\t\t\t\t\t\t\", Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.DIV({\n      \"class\": \"icon\"\n    }, \"\\n\t\t\t\t\t\", HTML.I({\n      \"class\": function() {\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"icon\")) ];\n      }\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", HTML.A({\n      \"class\": \"small-box-footer\"\n    }, \"\\n\t\t\t\t\tSee all \", HTML.I({\n      \"class\": \"fa fa-arrow-circle-right\"\n    }), \"\\n\t\t\t\t\"), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\t\" ];\n  }), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"adminDeleteWidget\");\nTemplate[\"adminDeleteWidget\"] = new Template(\"Template.adminDeleteWidget\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"alert alert-warning admin-alert\">\\n\t\t<h4>Confirm delete</h4>\\n\t\t<div>\\n\t\t\t<p>Are you sure you want to delete this document ? </p>\\n\t\t</div>\\n\t\t<div>\\n\t\t\t<button type=\"button\" id=\"confirm-delete\" class=\"btn btn-danger\">Delete</button>\\n\t\t</div>\\n\t</div>');\n}));\n","\nTemplate.__checkName(\"fAdminLayout\");\nTemplate[\"fAdminLayout\"] = new Template(\"Template.fAdminLayout\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"AdminConfig\"));\n  }, function() {\n    return [ \"\\n  \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"isInRole\"), \"admin\");\n    }, function() {\n      return [ \"\\n    \", HTML.DIV({\n        \"class\": \"admin-layout\"\n      }, \"\\n    \", Blaze._TemplateWith(function() {\n        return {\n          skin: Spacebars.call(view.lookup(\"admin_skin\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"AdminLTE\"), function() {\n          return [ \"\\n  \t\t\t\", Spacebars.include(view.lookupTemplate(\"AdminHeader\")), \"\\n  \t\t\t\", Spacebars.include(view.lookupTemplate(\"AdminSidebar\")), \"\\n\t\t\t\t\", HTML.DIV({\n            \"class\": \"content-wrapper\",\n            style: function() {\n              return [ \"min-height: \", Spacebars.mustache(view.lookup(\"minHeight\")) ];\n            }\n          }, \"\\n\t\t\t\t\t\", HTML.SECTION({\n            \"class\": \"content-header\"\n          }, \"\\n\t\t\t\t\t\t\", HTML.H1(\"\\n\t\t\t\t\t\t\t\", Blaze.View(\"lookup:$.Session.get\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"admin_title\");\n          }), \"\\n\t\t\t\t\t\t\t\", HTML.SMALL(Blaze.View(\"lookup:$.Session.get\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"admin_subtitle\");\n          })), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\t\", HTML.BR(), \"\\n\t\t\t\t\t\t\", HTML.OL({\n            \"class\": \"breadcrumb\"\n          }, \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({\n            href: \"/admin/\"\n          }, \"Dashboard\")), \"\\n\t\t\t\t\t\t\t\", Blaze.If(function() {\n            return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"admin_collection_name\");\n          }, function() {\n            return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(HTML.A({\n              href: function() {\n                return [ \"/admin/view/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"get\"), \"admin_collection_name\"), \"/\" ];\n              }\n            }, Blaze.View(\"lookup:adminCollectionLabel\", function() {\n              return Spacebars.mustache(view.lookup(\"adminCollectionLabel\"), view.lookup(\"admin_collection_name\"));\n            }))), \"\\n\t\t\t\t\t\t\t\" ];\n          }), \"\\n\t\t\t\t\t\t\t\", Blaze.If(function() {\n            return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"equals\"), \"admin_collection_page\", \"new\");\n          }, function() {\n            return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(\"New\"), \"\\n\t\t\t\t\t\t\t\" ];\n          }), \"\\n\t\t\t\t\t\t\t\", Blaze.If(function() {\n            return Spacebars.dataMustache(Spacebars.dot(view.lookup(\"$\"), \"Session\", \"equals\"), \"admin_collection_page\", \"edit\");\n          }, function() {\n            return [ \"\\n\t\t\t\t\t\t\t\", HTML.LI(\"Edit\"), \"\\n\t\t\t\t\t\t\t\" ];\n          }), \"\\n\t\t\t\t\t\t\"), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.SECTION({\n            \"class\": \"content\"\n          }, \"\\n\t\t\t\t\t\t\", Blaze._TemplateWith(function() {\n            return {\n              template: Spacebars.call(view.lookup(\"main\"))\n            };\n          }, function() {\n            return Spacebars.include(function() {\n              return Spacebars.call(Template.__dynamic);\n            });\n          }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n    \" ];\n        });\n      }), \"\\n    \"), \"\\n\t\" ];\n    }, function() {\n      return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"NotAdmin\")), \"\\n\t\" ];\n    }), \"\\n\t\" ];\n  }, function() {\n    return [ \"\\n\t\", Spacebars.include(view.lookupTemplate(\"NoConfig\")), \"\\n\t\" ];\n  });\n}));\n\nTemplate.__checkName(\"NotAdmin\");\nTemplate[\"NotAdmin\"] = new Template(\"Template.NotAdmin\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n<div class=\"row\">\\n\t<div class=\"col-md-4 col-md-offset-4\">\\n\t\t<p class=\"alert alert-info\" style=\"margin-top:100px;\">\\n\t\t\tYou need to be an admin to view this page\\n\t\t</p>\\n\t</div>\\n</div>\\n</div>');\n}));\n\nTemplate.__checkName(\"AdminLoading\");\nTemplate[\"AdminLoading\"] = new Template(\"Template.AdminLoading\", (function() {\n  var view = this;\n  return HTML.Raw(\"<p> Loading....</p>\");\n}));\n\nTemplate.__checkName(\"NoConfig\");\nTemplate[\"NoConfig\"] = new Template(\"Template.NoConfig\", (function() {\n  var view = this;\n  return HTML.Raw(\"<p class=\\\"alert alert-info\\\">\\n\t\tYou need to define an AdminConfig object to use the admin dashboard.\\n\t\t<br>\\n\t\tA basic config to manage the 'Posts' and 'Comments' collection would look like this:\\n\t\t<br>\\n\t\t<code>\\n\t\tAdminConfig = {\\n\t\t<br>\\n\t\t\tadminEmails: ['\tben@code2create.com'],\\n\t\t<br>\\n\t\t\tcollections:\\n\t\t<br>\\n\t\t\t\t{\\n\t\t<br>\\n\t\t\t\t\tPosts: {},\\n\t\t<br>\\n\t\t\t\t\tComments: {}\\n\t\t<br>\\n\t\t\t\t}\\n\t\t<br>\\n\t\t}\\n\t\t</code>\\n\t</p>\");\n}));\n","\nTemplate.__checkName(\"AdminSidebar\");\nTemplate[\"AdminSidebar\"] = new Template(\"Template.AdminSidebar\", (function() {\n  var view = this;\n  return HTML.ASIDE({\n    \"class\": \"main-sidebar\"\n  }, \"\\n\t\t\", HTML.DIV({\n    \"class\": \"sidebar\"\n  }, \"\\n\t\t\t\", HTML.UL({\n    \"class\": \"sidebar-menu\"\n  }, \"\\n\t\t\t\t\", HTML.LI({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"isActiveRoute\"), \"adminDashboard\");\n    }\n  }, \"\\n\t\t\t\t\t\", HTML.Raw('<a href=\"/admin\">\\n\t\t\t\t\t\t<i class=\"fa fa-dashboard\"></i> <span>Dashboard</span>\\n\t\t\t\t\t</a>'), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"admin_collections\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\", HTML.LI({\n      \"class\": \"treeview\"\n    }, \"\\n\t\t\t\t\t\", HTML.A({\n      href: \"#\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.I({\n      \"class\": function() {\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"icon\")) ];\n      }\n    }), \"\\n\t\t\t\t\t\t\", HTML.SPAN(Blaze.View(\"lookup:..label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n    })), \"\\n\t\t\t\t\t\t\", HTML.I({\n      \"class\": \"fa fa-angle-left pull-right\"\n    }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\t\", HTML.UL({\n      \"class\": \"treeview-menu\"\n    }, \"\\n\t\t\t\t\t\t\", HTML.LI({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"newPath\"));\n      }\n    }, HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"newPath\"));\n      }\n    }, HTML.I({\n      \"class\": \"fa fa-angle-double-right\"\n    }), \" New\")), \"\\n\t\t\t\t\t\t\", HTML.LI({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"viewPath\"));\n      }\n    }, HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"viewPath\"));\n      }\n    }, HTML.I({\n      \"class\": \"fa fa-angle-double-right\"\n    }), \" View All\")), \"\\n\t\t\t\t\t\t\", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"admin_collection_items\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\t\", HTML.LI({\n        \"class\": function() {\n          return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"url\"));\n        }\n      }, HTML.A({\n        href: function() {\n          return Spacebars.mustache(view.lookup(\"url\"));\n        }\n      }, HTML.I({\n        \"class\": \"fa fa-angle-double-right\"\n      }), \" \", Blaze.View(\"lookup:title\", function() {\n        return Spacebars.mustache(view.lookup(\"title\"));\n      }))), \"\\n\t\t\t\t\t\t\" ];\n    }), \"\\n\t\t\t\t\t\"), \"\\n\t\t\t\t\"), \"\\n\t\t\t\t\" ];\n  }), \"\\n\t\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"admin_sidebar_items\"));\n  }, function() {\n    return [ \"\\n\t\t\t\t\t\", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"urls\"));\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminSidebarItemTree\")), \" -->\\n\t\t\t\t\t\" ];\n    }, function() {\n      return [ \"\\n\t\t\t\t\t\t\", Spacebars.include(view.lookupTemplate(\"adminSidebarItem\")), \" -->\\n\t\t\t\t\t\" ];\n    }), \"\\n\t\t\t\t\" ];\n  }), \"\\n\t\t\t\"), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"adminSidebarItem\");\nTemplate[\"adminSidebarItem\"] = new Template(\"Template.adminSidebarItem\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"url\"));\n    }\n  }, \"\\n\t\t\", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"url\"));\n    }\n  }, \"\\n\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"icon\"));\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.I({\n      \"class\": function() {\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"options\"), \"icon\")) ];\n      }\n    }), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\t\", HTML.SPAN(Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  })), \"\\n\t\t\"), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"adminSidebarItemTree\");\nTemplate[\"adminSidebarItemTree\"] = new Template(\"Template.adminSidebarItemTree\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": \"treeview\"\n  }, \"\\n\t\t\", HTML.A({\n    href: \"#\"\n  }, \"\\n\t\t\t\", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"icon\"));\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.I({\n      \"class\": function() {\n        return [ \"fa fa-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"options\"), \"icon\")) ];\n      }\n    }), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\t\", HTML.SPAN(Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  })), \"\\n\t\t\t\", HTML.Raw('<i class=\"fa fa-angle-left pull-right\"></i>'), \"\\n\t\t\"), \"\\n\t\t\", HTML.UL({\n    \"class\": \"treeview-menu\"\n  }, \"\\n\t\t\t\", Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"options\"), \"urls\"));\n  }, function() {\n    return [ \"\\n\t\t\t\", HTML.LI({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"isActivePath\"), view.lookup(\"url\"));\n      }\n    }, HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"url\"));\n      }\n    }, HTML.I({\n      \"class\": \"fa fa-angle-double-right\"\n    }), Blaze.View(\"lookup:title\", function() {\n      return Spacebars.mustache(view.lookup(\"title\"));\n    }))), \"\\n\t\t\t\" ];\n  }), \"\\n\t\t\"), \"\\n\t\");\n}));\n","\nTemplate.__checkName(\"AdminHeader\");\nTemplate[\"AdminHeader\"] = new Template(\"Template.AdminHeader\", (function() {\n  var view = this;\n  return HTML.HEADER({\n    \"class\": \"main-header\"\n  }, \"\\n        \", HTML.A({\n    href: \"/admin\",\n    \"class\": \"logo\"\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"AdminConfig\"), \"name\"));\n  }, function() {\n    return [ \"\\n            \", Blaze.View(\"lookup:AdminConfig.name\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"AdminConfig\"), \"name\"));\n    }), \"\\n            \" ];\n  }, function() {\n    return \"\\n            Flow-DB-Admin\\n            \";\n  }), \"\\n        \"), \"\\n        \", HTML.NAV({\n    \"class\": \"navbar navbar-static-top\",\n    role: \"navigation\"\n  }, \"\\n            \", HTML.Raw(\"<!-- Sidebar toggle button-->\"), \"\\n            \", HTML.Raw('<a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"offcanvas\" role=\"button\">\\n                <span class=\"sr-only\">Toggle navigation</span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n            </a>'), \"\\n            \", HTML.DIV({\n    \"class\": \"navbar-custom-menu\"\n  }, \"\\n                \", HTML.UL({\n    \"class\": \"nav navbar-nav\"\n  }, \"\\n                    \", HTML.LI(\"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"AdminConfig\"), \"dashboard\", \"homeUrl\"));\n  }, function() {\n    return [ \"\\n                        \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"AdminConfig\"), \"dashboard\", \"homeUrl\"));\n      }\n    }, \"Home\"), \"\\n                        \" ];\n  }, function() {\n    return [ \"\\n                        \", HTML.A({\n      href: \"/\"\n    }, \"Home\"), \"\\n                        \" ];\n  }), \"\\n\\n                    \"), \"\\n                    \", HTML.LI({\n    \"class\": \"dropdown\"\n  }, \"\\n                        \", HTML.Raw('<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            <span>Admin<i class=\"caret\"></i></span>\\n                        </a>'), \"\\n                        \", HTML.UL({\n    \"class\": \"dropdown-menu\"\n  }, \"\\n                            \", HTML.LI({\n    \"class\": \"\"\n  }, \"\\n                            \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"profilepath\"));\n    }\n  }, \"\\n                                Your profile\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.Raw('<li class=\"\">\\n                                <a href=\"#\" class=\"btn-sign-out\">Sign out\\n                                </a>\\n                            </li>'), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n","BlazeLayout.setRoot('body');\nTemplate.fAdminLayout.created = function () {\n  var self = this;\n\n  self.minHeight = new ReactiveVar(\n    $(window).height() - $('.main-header').height());\n\n  $(window).resize(function () {\n    self.minHeight.set($(window).height() - $('.main-header').height());\n  });\n\n  $('body').addClass('fixed');\n};\n\nTemplate.fAdminLayout.helpers({\n  minHeight: function () {\n    return Template.instance().minHeight.get() + 'px'\n  }\n});\n\n\ndataTableOptions = {\n    \"aaSorting\": [],\n    \"bPaginate\": true,\n    \"bLengthChange\": false,\n    \"bFilter\": true,\n    \"bSort\": true,\n    \"bInfo\": true,\n    \"bAutoWidth\": false\n};\n","Template.registerHelper('AdminTables', AdminTables);\n\nadminCollections = ->\n\tcollections = {}\n\n\tif typeof AdminConfig != 'undefined'  and typeof AdminConfig.collections == 'object'\n\t\tcollections = AdminConfig.collections\n\n\tcollections.Users =\n\t\tcollectionObject: Meteor.users\n\t\ticon: 'user'\n\t\tlabel: 'Users'\n\n\t_.map collections, (obj, key) ->\n\t\tobj = _.extend obj, {name: key}\n\t\tobj = _.defaults obj, {label: key, icon: 'plus', color: 'blue'}\n\t\tobj = _.extend obj,\n\t\t\tviewPath: FlowRouter.path \"/admin/view/:coll\",{coll: key}\n\t\t\tnewPath: FlowRouter.path \"/admin/new/:coll\",{coll: key}\n\nTemplate.registerHelper 'AdminConfig', ->\n\tAdminConfig if typeof AdminConfig != 'undefined'\n\nTemplate.registerHelper 'admin_skin', ->\n\tAdminConfig?.skin or 'black-light'\n\nTemplate.registerHelper 'admin_collections', adminCollections\n\nTemplate.registerHelper 'admin_collection_name', ->\n\tSession.get 'admin_collection_name'\n\nTemplate.registerHelper 'admin_current_id', ->\n\tSession.get 'admin_id'\n\nTemplate.registerHelper 'admin_current_doc', ->\n\tSession.get 'admin_doc'\n\nTemplate.registerHelper 'admin_is_users_collection', ->\n\tSession.get('admin_collection_name') == 'Users'\n\nTemplate.registerHelper 'admin_sidebar_items', ->\n\tAdminDashboard.sidebarItems\n\nTemplate.registerHelper 'admin_collection_items', ->\n\titems = []\n\t_.each AdminDashboard.collectionItems, (fn) =>\n\t\titem = fn @name, '/admin/' + @name\n\t\tif item?.title and item?.url\n\t\t\titems.push item\n\titems\n\nTemplate.registerHelper 'admin_omit_fields', ->\n\tif typeof AdminConfig.autoForm != 'undefined' and typeof AdminConfig.autoForm.omitFields == 'object'\n\t\tglobal = AdminConfig.autoForm.omitFields\n\tif not Session.equals('admin_collection_name','Users') and typeof AdminConfig != 'undefined' and typeof AdminConfig.collections[Session.get 'admin_collection_name'].omitFields == 'object'\n\t\tcollection = AdminConfig.collections[Session.get 'admin_collection_name'].omitFields\n\tif typeof global == 'object' and typeof collection == 'object'\n\t\t_.union global, collection\n\telse if typeof global == 'object'\n\t\tglobal\n\telse if typeof collection == 'object'\n\t\tcollection\n\nTemplate.registerHelper 'AdminSchemas', ->\n\tAdminDashboard.schemas\n\n# Template.registerHelper 'adminIsUserInRole', (_id,role)->\n# \tRoles.userIsInRole _id, role\n\nTemplate.registerHelper 'adminGetUsers', ->\n\tMeteor.users\n\nTemplate.registerHelper 'adminGetUserSchema', ->\n\tif _.has(AdminConfig, 'userSchema')\n\t\tschema = AdminConfig.userSchema\n\telse if typeof Meteor.users._c2 == 'object'\n\t\tschema = Meteor.users.simpleSchema()\n\n\treturn schema\n\nTemplate.registerHelper 'adminCollectionLabel', (collection)->\n\tAdminDashboard.collectionLabel(collection) if collection?\n\nTemplate.registerHelper 'adminCollectionCount', (collection)->\n\tif collection == 'Users'\n\t\tMeteor.users.find().count()\n\telse\n\t\tAdminCollectionsCount.findOne({collection: collection})?.count\n\nTemplate.registerHelper 'adminTemplate', (collection, mode)->\n\tif collection?.toLowerCase() != 'users' && typeof AdminConfig?.collections?[collection]?.templates != 'undefined'\n\t\tAdminConfig.collections[collection].templates[mode]\n\nTemplate.registerHelper 'adminGetCollection', (collection)->\n\t_.find adminCollections(), (item) -> item.name == collection\n\nTemplate.registerHelper 'adminWidgets', ->\n\tif typeof AdminConfig.dashboard != 'undefined' and typeof AdminConfig.dashboard.widgets != 'undefined'\n\t\tAdminConfig.dashboard.widgets\n\n# Template.registerHelper 'adminUserEmail', (user) ->\n# \tif user && user.emails && user.emails[0] && user.emails[0].address\n# \t\tuser.emails[0].address\n# \telse if user && user.services && user.services.facebook && user.services.facebook.email\n# \t\tuser.services.facebook.email\n# \telse if user && user.services && user.services.google && user.services.google.email\n# \t\tuser.services.google.email\n\nTemplate.registerHelper 'adminViewPath', (collection)->\n\t\tFlowRouter.path \"/admin/view/:coll\",{coll: collection}\n\nTemplate.registerHelper 'adminNewPath', (collection)->\n\t\tFlowRouter.path \"/admin/new/:coll\",{coll: collection}\n\nTemplate.registerHelper 'AdminDashboardPath', ->\n\tFlowRouter.path 'AdminDashboard'\n\nTemplate.registerHelper 'isSubReady', (sub) ->\n  if sub\n    FlowRouter.subsReady sub\n  else\n    FlowRouter.subsReady()\n","Template.AdminDashboardView.rendered = ->\n\ttable = @$('.dataTable').DataTable();\n\nTemplate.AdminDashboardView.helpers\n\thasDocuments: ->\n\t\tAdminCollectionsCount.findOne({collection: Session.get 'admin_collection_name'})?.count > 0\n\tnewPath: ->\n\t\tFlowRouter.path \"/admin/new/:coll\",{coll: Session.get 'admin_collection_name' }\n\tadmin_table: ->\n\t\tAdminTables[Session.get 'admin_collection_name']\n\nTemplate.adminUsersIsAdmin.helpers checkadmin: ->\n\tRoles.userIsInRole @_id, 'admin'\n\nTemplate.adminUsersMailBtn.helpers adminUserEmail: ->\n\tuser = @\n\tif user && user.emails && user.emails[0] && user.emails[0].address\n\t\tuser.emails[0].address\n\telse if user && user.services && user.services.facebook && user.services.facebook.email\n\t\tuser.services.facebook.email\n\telse if user && user.services && user.services.google && user.services.google.email\n\t\tuser.services.google.email\n\telse 'null@null.null'\n\nTemplate.adminEditBtn.helpers path: ->\n  FlowRouter.path '/admin/edit/:coll/:_id',\n    coll: Session.get('admin_collection_name')\n    _id: @_id\n\nTemplate.adminDeleteBtn.helpers path: ->\n  FlowRouter.path '/admin/edit/:coll/:_id', {\n    coll: Session.get('admin_collection_name')\n    _id: @_id\n  }, action: 'delete'\n\nTemplate.AdminHeader.helpers\n\tprofilepath: -> FlowRouter.path '/admin/edit/:coll/:_id',\n\t  coll: 'Users'\n\t  _id: Meteor.userId()\n\nTemplate.AdminDashboardEdit.rendered = ->\n\teditcollectionName = FlowRouter.getParam 'collectionName'\n\teditId\t= FlowRouter.getParam '_id'\n\tSession.set 'admin_doc', adminCollectionObject(editcollectionName).findOne _id : editId\n\nTemplate.AdminDashboardEdit.helpers\n\tfadmin_doc: ->\n\t  editcollectionName = FlowRouter.getParam 'collectionName'\n\t  editId\t= FlowRouter.getParam '_id'\n\t  adminCollectionObject(editcollectionName).findOne _id : editId if editcollectionName && editId\n  action: -> FlowRouter.getQueryParam 'action'\n\nTemplate.AdminDashboardUsersEdit.helpers\n  user: -> Meteor.users.find(FlowRouter.getParam '_id').fetch()\n  action: -> FlowRouter.getQueryParam 'action'\n  roles: -> Roles.getRolesForUser(FlowRouter.getParam '_id')\n  otherRoles: -> _.difference _.map(Meteor.roles.find().fetch(), (role) -> role.name), Roles.getRolesForUser(FlowRouter.getParam '_id')\n","Template.fAdminLayout.events\n\t'click .btn-delete': (e,t) ->\n\t\t_id = $(e.target).attr('doc')\n\t\tif Session.equals 'admin_collection_name', 'Users'\n\t\t\tSession.set 'admin_id', _id\n\t\t\tSession.set 'admin_doc', Meteor.users.findOne(_id)\n\t\telse\n\t\t\tSession.set 'admin_id', parseID(_id)\n\t\t\tSession.set 'admin_doc', adminCollectionObject(Session.get('admin_collection_name')).findOne(parseID(_id))\n\nTemplate.AdminDashboardUsersEdit.events\n\t'click .btn-add-role': (e,t) ->\n\t\tconsole.log 'adding user to role'\n\t\tMeteor.call 'adminAddUserToRole', $(e.target).attr('user'), $(e.target).attr('role')\n\t'click .btn-remove-role': (e,t) ->\n\t\tconsole.log 'removing user from role'\n\t\tMeteor.call 'adminRemoveUserToRole', $(e.target).attr('user'), $(e.target).attr('role')\n\nTemplate.AdminHeader.events\n\t'click .btn-sign-out': () ->\n\t\tMeteor.logout ->\n\t\t\tFlowRouter.go('/')\n\nTemplate.adminDeleteWidget.events\n\t'click #confirm-delete': () ->\n\t\tcollection = FlowRouter.getParam 'collectionName'\n\t\t_id = FlowRouter.getParam '_id'\n\t\tMeteor.call 'adminRemoveDoc', collection, _id, (e,r)->\n\t\t\tFlowRouter.go  '/admin/view/' + collection\n","/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)\n * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)\n * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.\n *\n * Version: 1.3.0\n *\n */\n(function(f){jQuery.fn.extend({slimScroll:function(h){var a=f.extend({width:\"auto\",height:\"250px\",size:\"7px\",color:\"#000\",position:\"right\",distance:\"1px\",start:\"top\",opacity:0.4,alwaysVisible:!1,disableFadeOut:!1,railVisible:!1,railColor:\"#333\",railOpacity:0.2,railDraggable:!0,railClass:\"slimScrollRail\",barClass:\"slimScrollBar\",wrapperClass:\"slimScrollDiv\",allowPageScroll:!1,wheelStep:20,touchScrollStep:200,borderRadius:\"7px\",railBorderRadius:\"7px\"},h);this.each(function(){function r(d){if(s){d=d||\nwindow.event;var c=0;d.wheelDelta&&(c=-d.wheelDelta/120);d.detail&&(c=d.detail/3);f(d.target||d.srcTarget||d.srcElement).closest(\".\"+a.wrapperClass).is(b.parent())&&m(c,!0);d.preventDefault&&!k&&d.preventDefault();k||(d.returnValue=!1)}}function m(d,f,h){k=!1;var e=d,g=b.outerHeight()-c.outerHeight();f&&(e=parseInt(c.css(\"top\"))+d*parseInt(a.wheelStep)/100*c.outerHeight(),e=Math.min(Math.max(e,0),g),e=0<d?Math.ceil(e):Math.floor(e),c.css({top:e+\"px\"}));l=parseInt(c.css(\"top\"))/(b.outerHeight()-c.outerHeight());\ne=l*(b[0].scrollHeight-b.outerHeight());h&&(e=d,d=e/b[0].scrollHeight*b.outerHeight(),d=Math.min(Math.max(d,0),g),c.css({top:d+\"px\"}));b.scrollTop(e);b.trigger(\"slimscrolling\",~~e);v();p()}function C(){window.addEventListener?(this.addEventListener(\"DOMMouseScroll\",r,!1),this.addEventListener(\"mousewheel\",r,!1),this.addEventListener(\"MozMousePixelScroll\",r,!1)):document.attachEvent(\"onmousewheel\",r)}function w(){u=Math.max(b.outerHeight()/b[0].scrollHeight*b.outerHeight(),D);c.css({height:u+\"px\"});\nvar a=u==b.outerHeight()?\"none\":\"block\";c.css({display:a})}function v(){w();clearTimeout(A);l==~~l?(k=a.allowPageScroll,B!=l&&b.trigger(\"slimscroll\",0==~~l?\"top\":\"bottom\")):k=!1;B=l;u>=b.outerHeight()?k=!0:(c.stop(!0,!0).fadeIn(\"fast\"),a.railVisible&&g.stop(!0,!0).fadeIn(\"fast\"))}function p(){a.alwaysVisible||(A=setTimeout(function(){a.disableFadeOut&&s||(x||y)||(c.fadeOut(\"slow\"),g.fadeOut(\"slow\"))},1E3))}var s,x,y,A,z,u,l,B,D=30,k=!1,b=f(this);if(b.parent().hasClass(a.wrapperClass)){var n=b.scrollTop(),\nc=b.parent().find(\".\"+a.barClass),g=b.parent().find(\".\"+a.railClass);w();if(f.isPlainObject(h)){if(\"height\"in h&&\"auto\"==h.height){b.parent().css(\"height\",\"auto\");b.css(\"height\",\"auto\");var q=b.parent().parent().height();b.parent().css(\"height\",q);b.css(\"height\",q)}if(\"scrollTo\"in h)n=parseInt(a.scrollTo);else if(\"scrollBy\"in h)n+=parseInt(a.scrollBy);else if(\"destroy\"in h){c.remove();g.remove();b.unwrap();return}m(n,!1,!0)}}else{a.height=\"auto\"==a.height?b.parent().height():a.height;n=f(\"<div></div>\").addClass(a.wrapperClass).css({position:\"relative\",\noverflow:\"hidden\",width:a.width,height:a.height});b.css({overflow:\"hidden\",width:a.width,height:a.height});var g=f(\"<div></div>\").addClass(a.railClass).css({width:a.size,height:\"100%\",position:\"absolute\",top:0,display:a.alwaysVisible&&a.railVisible?\"block\":\"none\",\"border-radius\":a.railBorderRadius,background:a.railColor,opacity:a.railOpacity,zIndex:90}),c=f(\"<div></div>\").addClass(a.barClass).css({background:a.color,width:a.size,position:\"absolute\",top:0,opacity:a.opacity,display:a.alwaysVisible?\n\"block\":\"none\",\"border-radius\":a.borderRadius,BorderRadius:a.borderRadius,MozBorderRadius:a.borderRadius,WebkitBorderRadius:a.borderRadius,zIndex:99}),q=\"right\"==a.position?{right:a.distance}:{left:a.distance};g.css(q);c.css(q);b.wrap(n);b.parent().append(c);b.parent().append(g);a.railDraggable&&c.bind(\"mousedown\",function(a){var b=f(document);y=!0;t=parseFloat(c.css(\"top\"));pageY=a.pageY;b.bind(\"mousemove.slimscroll\",function(a){currTop=t+a.pageY-pageY;c.css(\"top\",currTop);m(0,c.position().top,!1)});\nb.bind(\"mouseup.slimscroll\",function(a){y=!1;p();b.unbind(\".slimscroll\")});return!1}).bind(\"selectstart.slimscroll\",function(a){a.stopPropagation();a.preventDefault();return!1});g.hover(function(){v()},function(){p()});c.hover(function(){x=!0},function(){x=!1});b.hover(function(){s=!0;v();p()},function(){s=!1;p()});b.bind(\"touchstart\",function(a,b){a.originalEvent.touches.length&&(z=a.originalEvent.touches[0].pageY)});b.bind(\"touchmove\",function(b){k||b.originalEvent.preventDefault();b.originalEvent.touches.length&&\n(m((z-b.originalEvent.touches[0].pageY)/a.touchScrollStep,!0),z=b.originalEvent.touches[0].pageY)});w();\"bottom\"===a.start?(c.css({top:b.outerHeight()-c.outerHeight()}),m(0,!0)):\"top\"!==a.start&&(m(f(a.start).position().top,null,!0),a.alwaysVisible||c.hide());C()}});return this}});jQuery.fn.extend({slimscroll:jQuery.fn.slimScroll})})(jQuery);","# Add hooks used by many forms\nAutoForm.addHooks [\n\t\t'admin_insert',\n\t\t'admin_update',\n\t\t'adminNewUser',\n\t\t'adminUpdateUser',\n\t\t'adminSendResetPasswordEmail',\n\t\t'adminChangePassword'],\n\tbeginSubmit: ->\n\t\t$('.btn-primary').addClass('disabled')\n\tendSubmit: ->\n\t\t$('.btn-primary').removeClass('disabled')\n\tonError: (formType, error)->\n\t\tAdminDashboard.alertFailure error.message\n\nAutoForm.hooks\n\tadmin_insert:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\thook = @\n\t\t\tMeteor.call 'adminInsertDoc', insertDoc, Session.get('admin_collection_name'), (e,r)->\n\t\t\t\tif e\n\t\t\t\t\thook.done(e)\n\t\t\t\telse\n\t\t\t\t\tadminCallback 'onInsert', [Session.get 'admin_collection_name', insertDoc, updateDoc, currentDoc], (collection) ->\n\t\t\t\t\t\thook.done null, collection\n\t\t\treturn false\n\t\tonSuccess: (formType, collection)->\n\t\t\tAdminDashboard.alertSuccess 'Successfully created'\n\t\t\tFlowRouter.go \"/admin/view/#{collection}\"\n\n\tadmin_update:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\thook = @\n\t\t\tMeteor.call 'adminUpdateDoc', updateDoc, Session.get('admin_collection_name'), @docId, (e,r)->\n\t\t\t\tif e\n\t\t\t\t\thook.done(e)\n\t\t\t\telse\n\t\t\t\t\tadminCallback 'onUpdate', [Session.get 'admin_collection_name', insertDoc, updateDoc, currentDoc], (collection) ->\n\t\t\t\t\t\thook.done null, collection\n\t\t\treturn false\n\t\tonSuccess: (formType, collection)->\n\t\t\tAdminDashboard.alertSuccess 'Successfully updated'\n\n\tadminNewUser:\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Created user'\n\n\tadminUpdateUser:\n\t\tonSubmit: (insertDoc, updateDoc, currentDoc)->\n\t\t\tMeteor.call 'adminUpdateUser', updateDoc, Session.get('admin_id'), @done\n\t\t\treturn false\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Updated user'\n\n\tadminSendResetPasswordEmail:\n\t\tonSuccess: (formType, result)->\n\t\t\tAdminDashboard.alertSuccess 'Email sent'\n\n\tadminChangePassword:\n\t\tonSuccess: (operation, result, template)->\n\t\t\tAdminDashboard.alertSuccess 'Password reset'\n"]}}]