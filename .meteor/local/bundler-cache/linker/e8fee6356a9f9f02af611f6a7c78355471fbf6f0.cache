[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar ClassX = Package['arsnebula:classx'].ClassX;\nvar WebApp = Package.webapp.WebApp;\nvar Log = Package.logging.Log;\nvar Tracker = Package.deps.Tracker;\nvar Deps = Package.deps.Deps;\nvar Session = Package.session.Session;\nvar DDP = Package['ddp-client'].DDP;\nvar Mongo = Package.mongo.Mongo;\nvar Blaze = Package.ui.Blaze;\nvar UI = Package.ui.UI;\nvar Handlebars = Package.ui.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar Template = Package.templating.Template;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Random = Package.random.Random;\nvar EJSON = Package.ejson.EJSON;\nvar LaunchScreen = Package['launch-screen'].LaunchScreen;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar Darwin;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/arsnebula_darwin/packages/arsnebula_darwin.js                                                           //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n(function () {                                                                                                      // 1\n                                                                                                                    // 2\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 3\n//                                                                                                           //     // 4\n// packages/arsnebula:darwin/lib/js/darwin.namespace.js                                                      //     // 5\n//                                                                                                           //     // 6\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 7\n                                                                                                             //     // 8\nDarwin = {};                                                                                                 // 1   // 9\n                                                                                                             // 2   // 10\nDarwin.settings = {                                                                                          // 3   // 11\n  \"trace\": null      // event hook or trace callback                                                         // 4   // 12\n}                                                                                                            // 5   // 13\n                                                                                                             // 6   // 14\nDarwin.Class = ClassX.extend(ClassX.Class, function(base) {                                                  // 7   // 15\n                                                                                                             // 8   // 16\n  Object.defineProperty(this, \"namespace\", { \"get\": function() { return Darwin; } });                        // 9   // 17\n                                                                                                             // 10  // 18\n  this._trace = function(level, msg, meta) {                                                                 // 11  // 19\n    var trace = this.namespace.settings.trace;                                                               // 12  // 20\n    if ( trace ) {                                                                                           // 13  // 21\n      if ( typeof trace === \"string\" ) {                                                                     // 14  // 22\n        this.raiseEvent(trace, {\"level\": level, \"msg\": msg, \"meta\": meta}, true);                            // 15  // 23\n      }                                                                                                      // 16  // 24\n      if (typeof trace === \"function\" ) {                                                                    // 17  // 25\n        trace(level, msg, meta);                                                                             // 18  // 26\n      }                                                                                                      // 19  // 27\n    }                                                                                                        // 20  // 28\n  }                                                                                                          // 21  // 29\n                                                                                                             // 22  // 30\n  this.constructor = function Class() {                                                                      // 23  // 31\n    if ( base && base.constructor ) base.constructor.call(this);                                             // 24  // 32\n    this.__private = this.__private || {};                                                                   // 25  // 33\n  }                                                                                                          // 26  // 34\n                                                                                                             // 27  // 35\n});                                                                                                          // 28  // 36\n                                                                                                             // 29  // 37\nDarwin.Exception = ClassX.extend(ClassX.Exception, function(base) {                                          // 30  // 38\n  this.constructor = function Exception(message) {                                                           // 31  // 39\n    if ( base && base.constructor ) base.constructor.call(this, message);                                    // 32  // 40\n  }                                                                                                          // 33  // 41\n});                                                                                                          // 34  // 42\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 43\n                                                                                                                    // 44\n}).call(this);                                                                                                      // 45\n                                                                                                                    // 46\n                                                                                                                    // 47\n                                                                                                                    // 48\n                                                                                                                    // 49\n                                                                                                                    // 50\n                                                                                                                    // 51\n(function () {                                                                                                      // 52\n                                                                                                                    // 53\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 54\n//                                                                                                           //     // 55\n// packages/arsnebula:darwin/lib/js/darwin.device.js                                                         //     // 56\n//                                                                                                           //     // 57\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 58\n                                                                                                             //     // 59\nDarwin.Device = ClassX.extend(Darwin.Class, function(base) {                                                 // 1   // 60\n                                                                                                             // 2   // 61\n  var TYPES = [\"phone\", \"tablet\", \"desktop\"];                                                                // 3   // 62\n  var ORIENTATIONS = [\"portrait\", \"landscape\"];                                                              // 4   // 63\n  var USER_AGENT;    // shared user agent string set once on startup                                         // 5   // 64\n                                                                                                             // 6   // 65\n  var find = function(match) {                                                                               // 7   // 66\n    return USER_AGENT.indexOf(match) !== -1;                                                                 // 8   // 67\n  };                                                                                                         // 9   // 68\n                                                                                                             // 10  // 69\n  var getScreenResolution = function() {                                                                     // 11  // 70\n    return Math.max(window.screen.width, window.screen.height);                                              // 12  // 71\n  };                                                                                                         // 13  // 72\n                                                                                                             // 14  // 73\n  var findPlatform = function() {                                                                            // 15  // 74\n    var platform;                                                                                            // 16  // 75\n    if ( find(\"iphone\") || find(\"ipod\") || find(\"ipad\") ) { return \"ios\";}                                   // 17  // 76\n    else if ( find(\"silk\") ) { return \"kindle\"; }                                                            // 18  // 77\n    else if ( find(\"android\") ) { return \"android\"; }                                                        // 19  // 78\n    else if ( find(\"blackberry\") || find(\"bb10\") || find(\"rim\") ) { return \"blackberry\"; }                   // 20  // 79\n    else if ( find(\"sailfish\") ) { return \"sailfish\"; }                                                      // 21  // 80\n    else if ( find(\"meego\") ) { return \"meego\"; }                                                            // 22  // 81\n    else if ( find(\"firefox\") && find(\"mobile\") ) { return \"fxos\"; }                                         // 23  // 82\n    else if ( find(\"tizen\") ) { return \"tizen\"; }                                                            // 24  // 83\n    else if ( find(\"ubuntu\") && ( find(\"mobile\") || find(\"tablet\") ) ) { return \"ubuntu-touch\"; }            // 25  // 84\n    else if ( find(\"xbox\") ) { return \"xbox\"; }                                                              // 26  // 85\n    else if ( find(\"nintendo wii\") ) { return \"wii\"; }                                                       // 27  // 86\n    else if ( find(\"nintendo wiiu\") ) { return \"wiiu\"; }                                                     // 28  // 87\n    else if ( find(\"linux\") ) { return \"linux\"; }                                                            // 29  // 88\n    else if ( find(\"mac os\") ) { return \"mac\"; }                                                             // 30  // 89\n    else if ( find(\"windows\") || find(\"wpdesktop\") ) { return \"windows\"; }                                   // 31  // 90\n    else { return null; }                                                                                    // 32  // 91\n  };                                                                                                         // 33  // 92\n                                                                                                             // 34  // 93\n  var findMobile = function(platform, type) {                                                                // 35  // 94\n                                                                                                             // 36  // 95\n    var parseMobile = function(prefix, match, precision) {                                                   // 37  // 96\n      var version = \"\";                                                                                      // 38  // 97\n      var matched = USER_AGENT.match(match);                                                                 // 39  // 98\n      if ( matched && _.isArray(matched) && matched.length === 1 ) {                                         // 40  // 99\n        var numbers = matched[0].match(/\\d+/g);                                                              // 41  // 100\n        if ( numbers && _.isArray(numbers) ) {                                                               // 42  // 101\n          var nums = ( precision < numbers.length ) ? precision : numbers.length;                            // 43  // 102\n          for (var i=0; i < nums; i++) {                                                                     // 44  // 103\n            version = version + numbers[i].toString();                                                       // 45  // 104\n          }                                                                                                  // 46  // 105\n        }                                                                                                    // 47  // 106\n        return prefix + version;                                                                             // 48  // 107\n      }                                                                                                      // 49  // 108\n      return null;                                                                                           // 50  // 109\n    }                                                                                                        // 51  // 110\n                                                                                                             // 52  // 111\n    switch(platform) {                                                                                       // 53  // 112\n      case \"ios\":                                                                                            // 54  // 113\n        // eg. OS 7_0 returns ios7                                                                           // 55  // 114\n        return parseMobile(\"ios\", /(OS )\\d+(_\\d){1,2}/ig, 1);                                                // 56  // 115\n      case \"android\":                                                                                        // 57  // 116\n        // eg. Android 4.1.2; returns android4                                                               // 58  // 117\n        return parseMobile(\"android\", /(Android )\\d+(\\.\\d){1,2}(?=;)/ig, 1);                                 // 59  // 118\n      case \"windows\":                                                                                        // 60  // 119\n        if ( type === \"phone\" ) {                                                                            // 61  // 120\n          //eg. Windows Phone 8.0; returns wp8                                                               // 62  // 121\n          return parseMobile(\"wp\", /(Windows Phone )\\d+(\\.\\d){0,1}(?=;)/ig, 1);                              // 63  // 122\n        }                                                                                                    // 64  // 123\n    }                                                                                                        // 65  // 124\n                                                                                                             // 66  // 125\n    return null;                                                                                             // 67  // 126\n                                                                                                             // 68  // 127\n  };                                                                                                         // 69  // 128\n                                                                                                             // 70  // 129\n  var findType = function(platform) {                                                                        // 71  // 130\n    switch(platform) {                                                                                       // 72  // 131\n      case \"ios\":                                                                                            // 73  // 132\n        if ( find(\"iphone\" || find(\"ipod\" )) ) { return \"phone\"; }                                           // 74  // 133\n        else { return \"tablet\"; }                                                                            // 75  // 134\n        break;                                                                                               // 76  // 135\n      case \"kindle\":                                                                                         // 77  // 136\n        if ( find(\"android\") && find(\"mobile\") ) { return \"phone\"; }                                         // 78  // 137\n        else if ( find(\"android\") ) { return \"tablet\"; }                                                     // 79  // 138\n        else { return \"desktop\"; }                                                                           // 80  // 139\n        break;                                                                                               // 81  // 140\n      case \"android\":                                                                                        // 82  // 141\n        if ( find(\"mobile\" ) ) { return \"phone\"; }                                                           // 83  // 142\n        else { return \"tablet\"; }                                                                            // 84  // 143\n        break;                                                                                               // 85  // 144\n      case \"blackberry\":                                                                                     // 86  // 145\n        if ( find(\"tablet\") ) { return \"tablet\"; }                                                           // 87  // 146\n        else { return \"phone\"; }                                                                             // 88  // 147\n        break;                                                                                               // 89  // 148\n      case \"windows\":                                                                                        // 90  // 149\n        if ( find(\"phone\" ) ) { return \"phone\"; }                                                            // 91  // 150\n        else if ( find(\"tablet\" ) ) { return \"tablet\"; }                                                     // 92  // 151\n        else if ( find(\"windows nt\") && find(\"touch\") && find(\"arm\") ) {return \"tablet\"; }                   // 93  // 152\n        else if ( find(\"windows nt\") && find(\"touch\") && getScreenResolution() <= 1440 ) {return \"tablet\"; } // 94  // 153\n        else { return \"desktop\"; }                                                                           // 95  // 154\n        break;                                                                                               // 96  // 155\n      default:                                                                                               // 97  // 156\n        if ( find(\"tablet\") ) { return \"tablet\"; }                                                           // 98  // 157\n        else if ( ( find(\"phone\") || find(\"mobile\") ) && !find(\"tablet\") ) { return \"phone\"; }               // 99  // 158\n        else { return \"desktop\"; }                                                                           // 100\n    }                                                                                                        // 101\n  };                                                                                                         // 102\n                                                                                                             // 103\n  var findOrientation = function() {                                                                         // 104\n    if ( window.orientation )                                                                                // 105\n      if ( window.orientation === 0 || window.orientation === 180 ) { return \"portrait\"; }                   // 106\n      else { return \"landscape\"; }                                                                           // 107\n    else {                                                                                                   // 108\n      if ( (window.innerHeight / window.innerWidth) > 1) { return \"portrait\"; }                              // 109\n      else { return \"landscape\"; }                                                                           // 110\n    }                                                                                                        // 111\n  };                                                                                                         // 112\n                                                                                                             // 113\n  var setDevice = function() {                                                                               // 114\n                                                                                                             // 115\n    var htmlElement = document.querySelector(\"html\");                                                        // 116\n    var platform = findPlatform();                                                                           // 117\n    var type = findType(platform);                                                                           // 118\n    var mobile = findMobile(platform, type);                                                                 // 119\n                                                                                                             // 120\n    if ( platform ) {                                                                                        // 121\n      this.__private.platform.set(platform);                                                                 // 122\n      htmlElement.classList.add(platform);                                                                   // 123\n    }                                                                                                        // 124\n                                                                                                             // 125\n    if ( type ) {                                                                                            // 126\n      this.__private.type.set(type);                                                                         // 127\n      htmlElement.classList.add(type);                                                                       // 128\n    }                                                                                                        // 129\n                                                                                                             // 130\n    if ( mobile ) {                                                                                          // 131\n      this.__private.mobile.set(mobile);                                                                     // 132\n      htmlElement.classList.add(mobile);                                                                     // 133\n    }                                                                                                        // 134\n                                                                                                             // 135\n    // if phantomjs then add a class for that                                                                // 136\n    if ( find(\"phantomjs\") ) {                                                                               // 137\n      htmlElement.classList.add(\"phantomjs\");                                                                // 138\n    }                                                                                                        // 139\n                                                                                                             // 140\n    // if running in an iFrame, add the iFrame name as well if set                                           // 141\n    if ( window.frameElement && window.frameElement.getAttribute(\"name\") ) {                                 // 142\n      htmlElement.classList.add(window.frameElement.getAttribute(\"name\"));                                   // 143\n    }                                                                                                        // 144\n                                                                                                             // 145\n    // if running within a Cordova application                                                               // 146\n    if ( Meteor.isCordova ) {                                                                                // 147\n      htmlElement.classList.add(\"cordova\");                                                                  // 148\n    }                                                                                                        // 149\n                                                                                                             // 150\n  };                                                                                                         // 151\n                                                                                                             // 152\n  var setOrientation = function() {                                                                          // 153\n                                                                                                             // 154\n    var current = this.__private.orientation.get();                                                          // 155\n    var orientation = findOrientation();                                                                     // 156\n                                                                                                             // 157\n    if ( current !== orientation ) {                                                                         // 158\n                                                                                                             // 159\n      this.__private.orientation.set(orientation);                                                           // 160\n                                                                                                             // 161\n      // just to be sure we don't get this screwed up remove both orientation options                        // 162\n      // before adding the new one                                                                           // 163\n      var htmlElement = document.querySelector(\"html\");                                                      // 164\n      htmlElement.classList.remove(\"portrait\");                                                              // 165\n      htmlElement.classList.remove(\"landscape\");                                                             // 166\n      htmlElement.classList.add(orientation);                                                                // 167\n                                                                                                             // 168\n    }                                                                                                        // 169\n                                                                                                             // 170\n  };                                                                                                         // 171\n                                                                                                             // 172\n  var compareIndex = function(current, target) {                                                             // 173\n                                                                                                             // 174\n    if ( current < 0 ) { return null; }                                                                      // 175\n    else if ( current === target) { return 0; }                                                              // 176\n    else if ( current > target ) { return 1; }                                                               // 177\n    else if ( current < target ) { return -1; }                                                              // 178\n                                                                                                             // 179\n    return null;                                                                                             // 180\n                                                                                                             // 181\n  };                                                                                                         // 182\n                                                                                                             // 183\n  var onOrientationChange = function() {                                                                     // 184\n    var ctx = this;                                                                                          // 185\n    return function() {                                                                                      // 186\n      setOrientation.call(ctx);                                                                              // 187\n    };                                                                                                       // 188\n  };                                                                                                         // 189\n                                                                                                             // 190\n  var watchOrientationChange = function() {                                                                  // 191\n                                                                                                             // 192\n    var supportsOrientation = \"onorientationchange\" in window;                                               // 193\n    var eventName = supportsOrientation ? \"orientationchange\" : \"resize\";                                    // 194\n                                                                                                             // 195\n    if (window.addEventListener) {                                                                           // 196\n      window.addEventListener(eventName, _.bind(setOrientation, this), false);                               // 197\n    } else if (window.attachEvent) {                                                                         // 198\n      window.attachEvent(eventName, _.bind(setOrientation, this));                                           // 199\n    } else {                                                                                                 // 200\n      window[eventName] = _.bind(setOrientation, this);                                                      // 201\n    }                                                                                                        // 202\n                                                                                                             // 203\n    // android doesn't always raise events correctly, so we also poll                                        // 204\n    if ( this.platform === \"android\") {                                                                      // 205\n      setInterval(_.bind(setOrientation, this), 2000);                                                       // 206\n    }                                                                                                        // 207\n                                                                                                             // 208\n  };                                                                                                         // 209\n                                                                                                             // 210\n  this.isPhantomJS = function() {                                                                            // 211\n    if ( find(\"phantomjs\") ) { return true; }                                                                // 212\n  }                                                                                                          // 213\n                                                                                                             // 214\n  this.isParentFrame = function() {                                                                          // 215\n    return ( window !== window.parent );                                                                     // 216\n  }                                                                                                          // 217\n                                                                                                             // 218\n  this.compare = function(classList, ltValue, eqValue, gtValue, nullValue) {                                 // 219\n                                                                                                             // 220\n    ltValue = ltValue || -1;                                                                                 // 221\n    eqValue = eqValue || 0;                                                                                  // 222\n    gtValue = gtValue || 1;                                                                                  // 223\n    nullValue = nullValue || null;                                                                           // 224\n                                                                                                             // 225\n    if ( classList && typeof classList === \"string\" ) { classList = classList.split(\" \"); }                  // 226\n    if ( classList && _.isArray(classList) ) {                                                               // 227\n      // loop through classes, if the class is a device type or orientation, the do                          // 228\n      // a comparison, otherwise do a match and aggregate results                                            // 229\n      var htmlElement = document.querySelector(\"html\");                                                      // 230\n      var typeCompare = null;                                                                                // 231\n      var orientationCompare = null;                                                                         // 232\n      for (var i = 0, length = classList.length; i < length; i++) {                                          // 233\n        if ( _.contains(TYPES, classList[i]) ) {                                                             // 234\n          // compare device type                                                                             // 235\n          typeCompare = compareIndex(_.indexOf(TYPES, this.type), _.indexOf(TYPES, classList[i]));           // 236\n        }                                                                                                    // 237\n        else if ( _.contains(ORIENTATIONS, classList[i]) ) {                                                 // 238\n          // compare orientation                                                                             // 239\n          orientationCompare = compareIndex(_.indexOf(ORIENTATIONS, this.orientation), _.indexOf(ORIENTATIONS, classList[i]));\n        }                                                                                                    // 241\n        else {                                                                                               // 242\n          // otherwise just look for class match, if we don't find                                           // 243\n          // a match, then comparison is invalid and we can return null                                      // 244\n          if ( ! htmlElement.classList.contains(classList[i]) ) { return nullValue; }                        // 245\n        }                                                                                                    // 246\n      }                                                                                                      // 247\n                                                                                                             // 248\n      // if we got this far then everything matched                                                          // 249\n      // if type and orientation comparisons are null, then its a match                                      // 250\n      if ( _.isNull(typeCompare) && _.isNull(orientationCompare) ) { return eqValue; }                       // 251\n                                                                                                             // 252\n      // otherwise if device match is not equal, then we can just return it                                  // 253\n      if ( ! _.isNull(typeCompare) ) {                                                                       // 254\n        if ( typeCompare > 0 ) { return gtValue; }                                                           // 255\n        if ( typeCompare < 0 ) { return ltValue; }                                                           // 256\n      }                                                                                                      // 257\n                                                                                                             // 258\n      // otherwise if we got this far either device type is equal or null,                                   // 259\n      // so it all comes down to orientation                                                                 // 260\n      if ( ! _.isNull(orientationCompare) ) {                                                                // 261\n        if ( orientationCompare > 0 ) { return gtValue; }                                                    // 262\n        if ( orientationCompare < 0 ) { return ltValue; }                                                    // 263\n        if ( orientationCompare === 0 ) { return eqValue; }                                                  // 264\n      }                                                                                                      // 265\n    }                                                                                                        // 266\n    else { throw ClassX.ArgumentFormatException(\"classList\"); }                                              // 267\n                                                                                                             // 268\n  };                                                                                                         // 269\n                                                                                                             // 270\n  // match the class names against the current device                                                        // 271\n  this.match = function(classList, trueValue, falseValue) {                                                  // 272\n                                                                                                             // 273\n    trueValue = trueValue || true;                                                                           // 274\n    falseValue = falseValue || false;                                                                        // 275\n                                                                                                             // 276\n    if ( classList && typeof classList === \"string\" ) { classList = classList.split(\" \"); }                  // 277\n    if ( classList && _.isArray(classList) ) {                                                               // 278\n      var htmlElement = document.querySelector(\"html\");                                                      // 279\n      var match = 0;                                                                                         // 280\n      for (var i = 0, length = classList.length; i < length; i++) {                                          // 281\n        if ( htmlElement.classList.contains(classList[i]) ) { match = match + 1; }                           // 282\n      }                                                                                                      // 283\n      return ( match === classList.length ) ? trueValue : falseValue;                                        // 284\n    }                                                                                                        // 285\n    else { throw ClassX.ArgumentFormatException(\"classList\"); }                                              // 286\n                                                                                                             // 287\n  };                                                                                                         // 288\n                                                                                                             // 289\n  var getPlatform = function() { return this.__private.platform.get(); }                                     // 290\n  var getType = function() { return this.__private.type.get(); }                                             // 291\n  var getMobile = function() { return this.__private.mobile.get(); }                                         // 292\n  var getOrientation = function() { return this.__private.orientation.get(); }                               // 293\n                                                                                                             // 294\n  Object.defineProperty(this, \"platform\", {                                                                  // 295\n    \"get\": function() { return this.__private.platform.get(); },                                             // 296\n    \"enumerable\": true                                                                                       // 297\n  });                                                                                                        // 298\n                                                                                                             // 299\n  Object.defineProperty(this, \"mobile\", {                                                                    // 300\n    \"get\": function() { return this.__private.mobile.get(); },                                               // 301\n    \"enumerable\": true                                                                                       // 302\n  });                                                                                                        // 303\n                                                                                                             // 304\n  Object.defineProperty(this, \"type\", {                                                                      // 305\n    \"get\": function() { return this.__private.type.get(); },                                                 // 306\n    \"enumerable\": true                                                                                       // 307\n  });                                                                                                        // 308\n                                                                                                             // 309\n  Object.defineProperty(this, \"orientation\", {                                                               // 310\n    \"get\": function() { return this.__private.orientation.get(); },                                          // 311\n    \"enumerable\": true                                                                                       // 312\n  });                                                                                                        // 313\n                                                                                                             // 314\n  var registerHelpers = function() {                                                                         // 315\n                                                                                                             // 316\n    Template.registerHelper('deviceCompare', _.bind(this.compare, this));                                    // 317\n    Template.registerHelper('deviceMatch', _.bind(this.match, this));                                        // 318\n    Template.registerHelper('deviceType', _.bind(getType, this));                                            // 319\n    Template.registerHelper('deviceMobile', _.bind(getMobile, this));                                        // 320\n    Template.registerHelper('devicePlatform', _.bind(getPlatform, this));                                    // 321\n    Template.registerHelper('deviceOrientation', _.bind(getOrientation, this));                              // 322\n                                                                                                             // 323\n  };                                                                                                         // 324\n                                                                                                             // 325\n  var onStartup = function() {                                                                               // 326\n    var ctx = this;                                                                                          // 327\n    return function() {                                                                                      // 328\n      USER_AGENT = window.navigator.userAgent.toLowerCase();                                                 // 329\n      setDevice.call(ctx);                                                                                   // 330\n      setOrientation.call(ctx);                                                                              // 331\n      watchOrientationChange.call(ctx);                                                                      // 332\n    }                                                                                                        // 333\n  }                                                                                                          // 334\n                                                                                                             // 335\n  this.constructor = function Device() {                                                                     // 336\n                                                                                                             // 337\n    // force singleton                                                                                       // 338\n    if ( this.namespace.device ) { return this.namespace.device; }                                           // 339\n                                                                                                             // 340\n    if ( base && base.constructor ) base.constructor.call(this);                                             // 341\n    this.__private.platform = new ReactiveVar();                                                             // 342\n    this.__private.mobile = new ReactiveVar();                                                               // 343\n    this.__private.type = new ReactiveVar();                                                                 // 344\n    this.__private.orientation = new ReactiveVar();                                                          // 345\n                                                                                                             // 346\n    registerHelpers.call(this);                                                                              // 347\n    Meteor.startup(onStartup.call(this));                                                                    // 348\n                                                                                                             // 349\n  };                                                                                                         // 350\n                                                                                                             // 351\n});                                                                                                          // 352\n                                                                                                             // 353\nDarwin.device = new Darwin.Device();                                                                         // 354\n                                                                                                             // 355\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 415\n                                                                                                                    // 416\n}).call(this);                                                                                                      // 417\n                                                                                                                    // 418\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['arsnebula:darwin'] = {}, {\n  Darwin: Darwin\n});\n\n})();\n","servePath":"/packages/arsnebula_darwin.js"}]