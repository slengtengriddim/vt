[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar moment = Package['momentjs:moment'].moment;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/msio_moment-round/moment-round.js                        //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmoment.fn.round = function (precision, key, direction) {             // 1\n    if (typeof direction === 'undefined') {                          // 2\n        direction = 'round';                                         // 3\n    }                                                                // 4\n                                                                     // 5\n    var keys = ['Hours', 'Minutes', 'Seconds', 'Milliseconds'];      // 6\n    var maxValues = [24, 60, 60, 1000];                              // 7\n                                                                     // 8\n    // Capitalize first letter                                       // 9\n    key = key.charAt(0)                                              // 10\n            .toUpperCase() + key.slice(1)                            // 11\n            .toLowerCase();                                          // 12\n                                                                     // 13\n    // make sure key is plural                                       // 14\n    if (key.indexOf('s', key.length - 1) === -1) {                   // 15\n        key += 's';                                                  // 16\n    }                                                                // 17\n    var value = 0;                                                   // 18\n    var rounded = false;                                             // 19\n    var subRatio = 1;                                                // 20\n    var maxValue;                                                    // 21\n    for (var i in keys) {                                            // 22\n        var k = keys[i];                                             // 23\n        if (k === key) {                                             // 24\n            value = this._d['get' + key]();                          // 25\n            maxValue = maxValues[i];                                 // 26\n            rounded = true;                                          // 27\n        } else if (rounded) {                                        // 28\n            subRatio *= maxValues[i];                                // 29\n            value += this._d['get' + k]() / subRatio;                // 30\n            this._d['set' + k](0);                                   // 31\n        }                                                            // 32\n    };                                                               // 33\n                                                                     // 34\n    value = Math[direction](value / precision) * precision;          // 35\n    value = Math.min(value, maxValue);                               // 36\n    this._d['set' + key](value);                                     // 37\n                                                                     // 38\n    return this;                                                     // 39\n}                                                                    // 40\n                                                                     // 41\nmoment.fn.ceil = function (precision, key) {                         // 42\n    return this.round(precision, key, 'ceil');                       // 43\n}                                                                    // 44\n                                                                     // 45\nmoment.fn.floor = function (precision, key) {                        // 46\n    return this.round(precision, key, 'floor');                      // 47\n}                                                                    // 48\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['msio:moment-round'] = {};\n\n})();\n","servePath":"/packages/msio_moment-round.js"}]