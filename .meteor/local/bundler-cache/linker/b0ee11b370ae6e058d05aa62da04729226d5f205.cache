[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nLog = Package.logging.Log;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nSpacebars = Package.spacebars.Spacebars;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nFake = Package['anti:fake'].Fake;\nUserStatus = Package['mizzao:user-status'].UserStatus;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nRoles = Package['alanning:roles'].Roles;\nFlowRouterHelpers = Package['arillo:flow-router-helpers'].FlowRouterHelpers;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nR = Package['ramda:ramda'].R;\nnv = Package['nvd3:nvd3'].nv;\nAdminDashboard = Package['sach:flow-db-admin'].AdminDashboard;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAccountsTemplates = Package['useraccounts:core'].AccountsTemplates;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\nT9n = Package['softwarerero:accounts-t9n'].T9n;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"lib\":{\"config\":{\"accounts.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/lib/config/accounts.js                                                                              //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n                                                                                                              //\nMeteor.startup(function () {});                                                                               // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"email.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/lib/config/email.js                                                                                 //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n                                                                                                              //\n// Accounts.emailTemplates.siteName = \"MySite\";                                                               //\n//                                                                                                            //\n// Accounts.emailTemplates.from = \"MySite <support@mysite.com>\";                                              //\n//                                                                                                            //\n// Accounts.emailTemplates.resetPassword.subject = function (user) {                                          //\n//     return \"Message for \" + user.profile.displayName;                                                      //\n// };                                                                                                         //\n//                                                                                                            //\n// Accounts.emailTemplates.resetPassword.text = function (user, url) {                                        //\n//     var signature = \"MySite Bot\";                                                                          //\n//     //var president = President.findOne();                                                                 //\n//     //if (president)                                                                                       //\n//     //    president = Meteor.users.findOne(president.presidentId);                                         //\n//     //    signature = president.profile.displayName + \", the MySite President.\";                           //\n//                                                                                                            //\n//     return \"Dear \" + user.profile.displayName + \",\\n\\n\" +                                                  //\n//         \"Click the following link to set your new password:\\n\" +                                           //\n//         url + \"\\n\\n\" +                                                                                     //\n//         \"Please never forget it again!!!\\n\\n\\n\" +                                                          //\n//         \"Cheers,\\n\" +                                                                                      //\n//         signature;                                                                                         //\n// };                                                                                                         //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"methods.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/methods.js                                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nMeteor.methods({                                                                                              // 1\n\tdeleteFavourite: function () {                                                                               // 2\n\t\tfunction deleteFavourite(vocabularyId) {                                                                    //\n\t\t\tcheck(vocabularyId, String);                                                                               // 3\n\t\t\tFavourites.remove({                                                                                        // 4\n\t\t\t\tvocabularyId: vocabularyId                                                                                // 5\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn deleteFavourite;                                                                                     //\n\t}(),                                                                                                         //\n\tinsertFavourite: function () {                                                                               // 8\n\t\tfunction insertFavourite(vocabularyId) {                                                                    //\n\t\t\tcheck(vocabularyId, String);                                                                               // 9\n\t\t\tFavourites.insert({                                                                                        // 10\n\t\t\t\tvocabularyId: vocabularyId                                                                                // 11\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn insertFavourite;                                                                                     //\n\t}(),                                                                                                         //\n\tdataWords: function () {                                                                                     // 14\n\t\tfunction dataWords(obj) {                                                                                   //\n\t\t\tData.Words.upsert({                                                                                        // 15\n\t\t\t\tvocabularyId: obj._id,                                                                                    // 16\n\t\t\t\tuserId: this.userId                                                                                       // 17\n\t\t\t}, {                                                                                                       //\n\t\t\t\t$setOnInsert: {                                                                                           // 19\n\t\t\t\t\tvocabularyId: obj._id,                                                                                   // 20\n\t\t\t\t\tuserId: this.userId,                                                                                     // 21\n\t\t\t\t\tvocabularyName: obj.term,                                                                                // 22\n\t\t\t\t\tviewed: 0                                                                                                // 23\n\t\t\t\t},                                                                                                        //\n\t\t\t\t$inc: {                                                                                                   // 25\n\t\t\t\t\tviewed: 1                                                                                                // 26\n\t\t\t\t}                                                                                                         //\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn dataWords;                                                                                           //\n\t}(),                                                                                                         //\n\tdataDetail: function () {                                                                                    // 30\n\t\tfunction dataDetail(deviceType, devicePlatform, route, clickArea, mode, attention) {                        //\n\t\t\tData.Detail.insert({                                                                                       // 31\n\t\t\t\tdeviceType: deviceType,                                                                                   // 32\n\t\t\t\tdevicePlatform: devicePlatform,                                                                           // 33\n\t\t\t\troute: route,                                                                                             // 34\n\t\t\t\tclickArea: clickArea,                                                                                     // 35\n\t\t\t\tmode: mode,                                                                                               // 36\n\t\t\t\tattention: attention                                                                                      // 37\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn dataDetail;                                                                                          //\n\t}(),                                                                                                         //\n\tsurveySubmitted: function () {                                                                               // 40\n\t\tfunction surveySubmitted() {                                                                                //\n\t\t\tUserExt.upsert({                                                                                           // 41\n\t\t\t\tuserId: this.userId                                                                                       // 42\n\t\t\t}, {                                                                                                       //\n\t\t\t\t$setOnInsert: {                                                                                           // 44\n\t\t\t\t\tuserId: this.userId,                                                                                     // 45\n\t\t\t\t\tsurveySubmitted: true                                                                                    // 46\n\t\t\t\t}                                                                                                         //\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn surveySubmitted;                                                                                     //\n\t}()                                                                                                          //\n});                                                                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"publication.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/publication.js                                                                                      //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nMeteor.publish(\"user\", function () {                                                                          // 1\n\treturn Meteor.users.find({});                                                                                // 2\n});                                                                                                           //\nMeteor.publish(\"userExt\", function () {                                                                       // 4\n\tvar currentUserId = this.userId;                                                                             // 5\n\tvar data = UserExt.find({ userId: this.userId });                                                            // 6\n\tif (data) {                                                                                                  // 7\n\t\treturn data;                                                                                                // 8\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 10\n});                                                                                                           //\nMeteor.publish(\"userExtAll\", function () {                                                                    // 12\n\tvar currentUserId = this.userId;                                                                             // 13\n\tvar data = UserExt.find({});                                                                                 // 14\n\tif (data) {                                                                                                  // 15\n\t\treturn data;                                                                                                // 16\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 18\n});                                                                                                           //\nMeteor.publish(\"userStatus\", function () {                                                                    // 20\n\tvar data = Data.Status.find({});                                                                             // 21\n\tif (data) {                                                                                                  // 22\n\t\treturn data;                                                                                                // 23\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 25\n});                                                                                                           //\nMeteor.publish(\"feedback\", function () {                                                                      // 27\n\tvar data = Data.Feedback.find({});                                                                           // 28\n\tif (data) {                                                                                                  // 29\n\t\treturn data;                                                                                                // 30\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 32\n});                                                                                                           //\n                                                                                                              //\n//  search query                                                                                              //\nMeteor.publish('vocabularyRegister', function (search) {                                                      // 37\n\tcheck(search, Match.OneOf(String, null, undefined));                                                         // 38\n\tvar query = {},                                                                                              // 39\n\t    projection = {                                                                                           //\n\t\tlimit: 0,                                                                                                   // 41\n\t\tsort: {                                                                                                     // 42\n\t\t\tterm: 1                                                                                                    // 43\n\t\t}                                                                                                           //\n\t};                                                                                                           //\n\tif (search) {                                                                                                // 46\n\t\tvar regex = new RegExp(search, 'i');                                                                        // 47\n\t\tquery = {                                                                                                   // 48\n\t\t\t$or: [{                                                                                                    // 49\n\t\t\t\tterm: regex                                                                                               // 50\n\t\t\t}, {                                                                                                       //\n\t\t\t\tdescription: regex                                                                                        // 52\n\t\t\t}]                                                                                                         //\n\t\t};                                                                                                          //\n\t\tprojection.limit = 0;                                                                                       // 55\n\t}                                                                                                            //\n\treturn Vocabulary.find(query, projection);                                                                   // 57\n});                                                                                                           //\n                                                                                                              //\nMeteor.publish(\"vocabularyAll\", function () {                                                                 // 60\n\tvar data = Vocabulary.find({});                                                                              // 61\n\tif (data) {                                                                                                  // 62\n\t\treturn data;                                                                                                // 63\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 65\n});                                                                                                           //\n                                                                                                              //\nMeteor.publish(\"ownedFavourites\", function () {                                                               // 68\n\tvar currentUserId = this.userId;                                                                             // 69\n\tvar data = Favourites.find({                                                                                 // 70\n\t\tuserId: currentUserId                                                                                       // 71\n\t});                                                                                                          //\n\tif (data) {                                                                                                  // 73\n\t\treturn data;                                                                                                // 74\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 76\n});                                                                                                           //\n                                                                                                              //\nMeteor.publish('termDay', function () {                                                                       // 79\n\tvar currentUserId = this.userId;                                                                             // 80\n\tvar data = TermDay.find({                                                                                    // 81\n\t\tuserId: currentUserId                                                                                       // 82\n\t});                                                                                                          //\n\tif (data) {                                                                                                  // 84\n\t\treturn data;                                                                                                // 85\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 87\n});                                                                                                           //\n                                                                                                              //\nMeteor.publish('singleEntry', function (entryId) {                                                            // 90\n\treturn Vocabulary.find({                                                                                     // 91\n\t\t_id: entryId                                                                                                // 92\n\t});                                                                                                          //\n});                                                                                                           //\n                                                                                                              //\nMeteor.publish('dataWords', function () {                                                                     // 96\n\tvar data = Data.Words.find({}, {                                                                             // 97\n\t\tsort: {                                                                                                     // 98\n\t\t\tviewed: -1                                                                                                 // 99\n\t\t}                                                                                                           //\n\t});                                                                                                          //\n\tif (data) {                                                                                                  // 102\n\t\treturn data;                                                                                                // 103\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 105\n});                                                                                                           //\n                                                                                                              //\nMeteor.publish('dataDetail', function () {                                                                    // 108\n\tvar data = Data.Detail.find({});                                                                             // 109\n\tif (data) {                                                                                                  // 110\n\t\treturn data;                                                                                                // 111\n\t}                                                                                                            //\n\treturn this.ready();                                                                                         // 113\n});                                                                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"startup.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/startup.js                                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nMeteor.startup(function () {                                                                                  // 1\n\tMeteor.users.find({                                                                                          // 2\n\t\t\"status.online\": true                                                                                       // 3\n\t}).observe({                                                                                                 //\n\t\tadded: function () {                                                                                        // 5\n\t\t\tfunction added(obj) {                                                                                      // 5\n\t\t\t\tvar today = new Date();                                                                                   // 6\n\t\t\t\t// log online                                                                                             //\n\t\t\t\tvar latestEntry = Data.Status.findOne({                                                                   // 5\n\t\t\t\t\tuserId: obj._id                                                                                          // 9\n\t\t\t\t}, {                                                                                                      //\n\t\t\t\t\tsort: {                                                                                                  // 11\n\t\t\t\t\t\ttimestamp: -1,                                                                                          // 12\n\t\t\t\t\t\tlimit: 1                                                                                                // 13\n\t\t\t\t\t}                                                                                                        //\n\t\t\t\t});                                                                                                       //\n\t\t\t\tif (latestEntry) {                                                                                        // 16\n\t\t\t\t\tif (latestEntry.status !== 'online') {                                                                   // 17\n\t\t\t\t\t\tData.Status.insert({                                                                                    // 18\n\t\t\t\t\t\t\tuserId: obj._id,                                                                                       // 19\n\t\t\t\t\t\t\tstatus: \"online\"                                                                                       // 20\n\t\t\t\t\t\t});                                                                                                     //\n\t\t\t\t\t\tconsole.log(obj._id + ' set online');                                                                   // 22\n\t\t\t\t\t}                                                                                                        //\n\t\t\t\t} else {                                                                                                  //\n\t\t\t\t\tData.Status.insert({                                                                                     // 25\n\t\t\t\t\t\tuserId: obj._id,                                                                                        // 26\n\t\t\t\t\t\tstatus: \"online\"                                                                                        // 27\n\t\t\t\t\t});                                                                                                      //\n\t\t\t\t\tconsole.log(obj._id + ' set online');                                                                    // 29\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\tvar lastEntryTermDay = TermDay.findOne({                                                                  // 32\n\t\t\t\t\tuserId: obj._id                                                                                          // 33\n\t\t\t\t}, {                                                                                                      //\n\t\t\t\t\tsort: {                                                                                                  // 35\n\t\t\t\t\t\ttimestamp: -1,                                                                                          // 36\n\t\t\t\t\t\tlimit: 1                                                                                                // 37\n\t\t\t\t\t}                                                                                                        //\n\t\t\t\t});                                                                                                       //\n\t\t\t\tvar termDayIds = R.pluck('vocabularyId')(TermDay.find({                                                   // 40\n\t\t\t\t\tuserId: obj._id                                                                                          // 41\n\t\t\t\t}).fetch());                                                                                              //\n\t\t\t\tvar vocabulary = Vocabulary.find({                                                                        // 43\n\t\t\t\t\t_id: {                                                                                                   // 44\n\t\t\t\t\t\t$nin: termDayIds                                                                                        // 45\n\t\t\t\t\t}                                                                                                        //\n\t\t\t\t}).fetch();                                                                                               //\n\t\t\t\t// only insert a new vocabulary if there doesn't exist one for today                                      //\n\t\t\t\tif (!lastEntryTermDay || lastEntryTermDay.timestamp.getDate() !== today.getDate()) {                      // 5\n\t\t\t\t\tTermDay.insert({                                                                                         // 50\n\t\t\t\t\t\tuserId: obj._id,                                                                                        // 51\n\t\t\t\t\t\tvocabularyId: vocabulary[Math.floor(Math.random() * vocabulary.length)]._id                             // 52\n\t\t\t\t\t});                                                                                                      //\n\t\t\t\t}                                                                                                         //\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn added;                                                                                              //\n\t\t}(),                                                                                                        //\n\t\tremoved: function () {                                                                                      // 56\n\t\t\tfunction removed(obj) {                                                                                    // 56\n\t\t\t\tvar today = new Date();                                                                                   // 57\n\t\t\t\t//log offline                                                                                             //\n\t\t\t\tvar latestEntry = Data.Status.findOne({                                                                   // 56\n\t\t\t\t\tuserId: obj._id                                                                                          // 60\n\t\t\t\t}, {                                                                                                      //\n\t\t\t\t\tsort: {                                                                                                  // 62\n\t\t\t\t\t\ttimestamp: -1,                                                                                          // 63\n\t\t\t\t\t\tlimit: 1                                                                                                // 64\n\t\t\t\t\t}                                                                                                        //\n\t\t\t\t});                                                                                                       //\n                                                                                                              //\n\t\t\t\tif (latestEntry) {                                                                                        // 68\n\t\t\t\t\tif (latestEntry.status !== 'offline') {                                                                  // 69\n\t\t\t\t\t\t//set exit and entry points if user stays online over midnight                                          //\n\t\t\t\t\t\t// if (latestEntry.timestamp.getDate() < today.getDate()) {                                             //\n\t\t\t\t\t\t// \tlet year = latestEntry.timestamp.getFullYear();                                                     //\n\t\t\t\t\t\t// \tlet month = latestEntry.timestamp.getMonth();                                                       //\n\t\t\t\t\t\t// \tlet lastDay = latestEntry.timestamp.getDate();                                                      //\n\t\t\t\t\t\t// \tlet todayDay = today.getDate();                                                                     //\n\t\t\t\t\t\t// \tlet beforeMidnight = new Date(year, month, lastDay, 23, 59, 59, 999);                               //\n\t\t\t\t\t\t// \tlet afterMidnight = new Date(year, month, todayDay, 0, 0, 0, 1);                                    //\n\t\t\t\t\t\t//                                                                                                      //\n\t\t\t\t\t\t// \t// set offline before midnight                                                                      //\n\t\t\t\t\t\t// \tData.Status.insert({                                                                                //\n\t\t\t\t\t\t// \t\tuserId: obj._id,                                                                                   //\n\t\t\t\t\t\t// \t\tstatus: \"offline\",                                                                                 //\n\t\t\t\t\t\t// \t\ttimestamp: beforeMidnight                                                                          //\n\t\t\t\t\t\t// \t});                                                                                                 //\n\t\t\t\t\t\t// \tconsole.log(beforeMidnight);                                                                        //\n\t\t\t\t\t\t// \tconsole.log(obj._id + ' set offline');                                                              //\n\t\t\t\t\t\t//                                                                                                      //\n\t\t\t\t\t\t// \t// set online after midnight                                                                        //\n\t\t\t\t\t\t// \tData.Status.insert({                                                                                //\n\t\t\t\t\t\t// \t\tuserId: obj._id,                                                                                   //\n\t\t\t\t\t\t// \t\tstatus: \"online\",                                                                                  //\n\t\t\t\t\t\t// \t\ttimestamp: afterMidnight                                                                           //\n\t\t\t\t\t\t// \t});                                                                                                 //\n\t\t\t\t\t\t// \tconsole.log(afterMidnight);                                                                         //\n\t\t\t\t\t\t// \tconsole.log(obj._id + ' set online');                                                               //\n\t\t\t\t\t\t// }                                                                                                    //\n                                                                                                              //\n\t\t\t\t\t\tData.Status.insert({                                                                                    // 98\n\t\t\t\t\t\t\tuserId: obj._id,                                                                                       // 99\n\t\t\t\t\t\t\tstatus: \"offline\",                                                                                     // 100\n\t\t\t\t\t\t\ttimestamp: new Date()                                                                                  // 101\n\t\t\t\t\t\t});                                                                                                     //\n\t\t\t\t\t\tconsole.log(obj._id + ' set offline');                                                                  // 103\n\t\t\t\t\t}                                                                                                        //\n\t\t\t\t}                                                                                                         //\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn removed;                                                                                            //\n\t\t}()                                                                                                         //\n\t});                                                                                                          //\n});                                                                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"vocabularySeed.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/vocabularySeed.js                                                                                   //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nMeteor.startup(function () {                                                                                  // 1\n                                                                                                              //\n\t// if (Vocabulary.find().count() === 0) {                                                                    //\n\t// \tfor (let i = 0; i < 10; i++) {                                                                           //\n\t// \t\tVocabulary.insert({                                                                                     //\n\t// \t\t\tterm: Fake.word(),                                                                                     //\n\t// \t\t\tdescription: Fake.sentence([24])                                                                       //\n\t// \t\t});                                                                                                     //\n\t// \t}                                                                                                        //\n\t// };                                                                                                        //\n});                                                                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"common\":{\"aux\":{\"aux.js\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/aux/aux.js                                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n(function (exports) {                                                                                         // 1\n    /**                                                                                                       //\n    * Randomize array element order in-place.                                                                 //\n    * Using Durstenfeld shuffle algorithm.                                                                    //\n    */                                                                                                        //\n    exports.shuffle = function (array) {                                                                      // 6\n        for (var i = array.length - 1; i > 0; i--) {                                                          // 7\n            var j = Math.floor(Math.random() * (i + 1));                                                      // 8\n            var temp = array[i];                                                                              // 9\n            array[i] = array[j];                                                                              // 10\n            array[j] = temp;                                                                                  // 11\n        }                                                                                                     //\n        return array;                                                                                         // 13\n    };                                                                                                        //\n    exports.getRandomInt = function (min, max) {                                                              // 15\n        return Math.floor(Math.random() * (max - min + 1)) + min;                                             //\n    };                                                                                                        //\n})(this.Aux = {});                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"log.js\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/aux/log.js                                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n(function (exports) {                                                                                         // 1\n                                                                                                              //\n\texports.detail = function (clickArea) {                                                                      // 3\n\t\t// log                                                                                                      //\n\t\tvar modes = [NAV_MODE_READ, NAV_MODE_TERM, NAV_MODE_DEF, NAV_MODE_ENTER];                                   // 5\n\t\tvar currentRoute = FlowRouter.current().route.name;                                                         // 6\n                                                                                                              //\n\t\tvar deviceType = Darwin.device.type;                                                                        // 8\n\t\tvar devicePlatform = Darwin.device.platform;                                                                // 9\n\t\tvar route = FlowRouter.current().route.name;                                                                // 10\n\t\tvar area = clickArea;                                                                                       // 11\n\t\tvar attention = Session.get(ATTENTION_MODE);                                                                // 12\n\t\tvar mode = 'null';                                                                                          // 13\n\t\tif (currentRoute !== 'register') {                                                                          // 14\n\t\t\tmodes.forEach(function (entry) {                                                                           // 15\n\t\t\t\tif (Session.get(entry)) {                                                                                 // 16\n\t\t\t\t\tmode = entry;                                                                                            // 17\n\t\t\t\t}                                                                                                         //\n\t\t\t});                                                                                                        //\n\t\t};                                                                                                          //\n\t\tMeteor.call('dataDetail', deviceType, devicePlatform, route, area, mode, attention);                        // 21\n\t};                                                                                                           //\n})(this.Log = {});                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"nvd3_extra.js\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/aux/nvd3_extra.js                                                                                   //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n/* Inspired by Lee Byron's test data generator. */                                                            //\n(function (exports) {                                                                                         // 2\n  var _arguments = arguments;                                                                                 //\n                                                                                                              //\n  exports.stream_layers = function (n, m, o) {                                                                // 3\n    if (_arguments.length < 3) o = 0;                                                                         // 4\n    function bump(a) {                                                                                        // 5\n      var x = 1 / (.1 + Math.random()),                                                                       // 6\n          y = 2 * Math.random() - .5,                                                                         //\n          z = 10 / (.1 + Math.random());                                                                      //\n      for (var i = 0; i < m; i++) {                                                                           // 9\n        var w = (i / m - y) * z;                                                                              // 10\n        a[i] += x * Math.exp(-w * w);                                                                         // 11\n      }                                                                                                       //\n    }                                                                                                         //\n    return d3.range(n).map(function () {                                                                      // 14\n      var a = [],                                                                                             // 15\n          i;                                                                                                  //\n      for (i = 0; i < m; i++) {                                                                               // 16\n        a[i] = o + o * Math.random();                                                                         // 16\n      }for (i = 0; i < 5; i++) {                                                                              //\n        bump(a);                                                                                              // 17\n      }return a.map(exports.stream_index);                                                                    //\n    });                                                                                                       //\n  };                                                                                                          //\n  exports.stream_waves = function (n, m) {                                                                    // 21\n    return d3.range(n).map(function (i) {                                                                     // 22\n      return d3.range(m).map(function (j) {                                                                   // 23\n        var x = 20 * j / m - i / 3;                                                                           // 24\n        return 2 * x * Math.exp(-.5 * x);                                                                     // 25\n      }).map(exports.stream_index);                                                                           //\n    });                                                                                                       //\n  };                                                                                                          //\n  exports.stream_index = function (d, i) {                                                                    // 29\n    return { x: i, y: Math.max(0, d) };                                                                       // 30\n  };                                                                                                          //\n})(this.NVD3 = {});                                                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"validation.js\":function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/aux/validation.js                                                                                   //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n(function (exports) {                                                                                         // 1\n\texports.isAlphabetic = function (value) {                                                                    // 2\n\t\tvar filter = /^[a-zA-Z]+$/;                                                                                 // 3\n\t\tif (filter.test(value)) {                                                                                   // 4\n\t\t\treturn true;                                                                                               // 5\n\t\t}                                                                                                           //\n\t\treturn false;                                                                                               // 7\n\t};                                                                                                           //\n                                                                                                              //\n\texports.isLength64 = function (value) {                                                                      // 10\n\t\tif (value.length < 65) {                                                                                    // 11\n\t\t\treturn true;                                                                                               // 12\n\t\t}                                                                                                           //\n\t\treturn false;                                                                                               // 14\n\t};                                                                                                           //\n})(this.Validate = {});                                                                                       //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"data.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/collections/data.js                                                                                 //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nData = {};                                                                                                    // 1\nData.Detail = new Mongo.Collection('dataDetail', {});                                                         // 2\nData.Words = new Mongo.Collection('dataWords', {});                                                           // 3\nData.Survey = new Mongo.Collection('dataSurvey', {});                                                         // 4\nData.Feedback = new Mongo.Collection('dataFeedback', {});                                                     // 5\nData.Status = new Mongo.Collection('dataStatus', {});                                                         // 6\n                                                                                                              //\nData.Survey.allow({                                                                                           // 8\n\tinsert: function () {                                                                                        // 9\n\t\tfunction insert() {                                                                                         // 9\n\t\t\treturn true;                                                                                               // 10\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn insert;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\nData.Feedback.allow({                                                                                         // 13\n\tinsert: function () {                                                                                        // 14\n\t\tfunction insert() {                                                                                         // 14\n\t\t\treturn true;                                                                                               // 15\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn insert;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\n                                                                                                              //\nData.Status.Schema = new SimpleSchema({                                                                       // 19\n\tuserId: {                                                                                                    // 20\n\t\ttype: String                                                                                                // 21\n\t},                                                                                                           //\n\ttimestamp: {                                                                                                 // 23\n\t\ttype: Date,                                                                                                 // 24\n\t\tautoValue: function () {                                                                                    // 25\n\t\t\tfunction autoValue() {                                                                                     // 25\n\t\t\t\treturn new Date();                                                                                        // 26\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\tstatus: {                                                                                                    // 29\n\t\ttype: String,                                                                                               // 30\n\t\tallowedValues: ['online', 'offline']                                                                        // 31\n\t}                                                                                                            //\n});                                                                                                           //\n                                                                                                              //\nData.Feedback.Schema = new SimpleSchema({                                                                     // 35\n\tuserId: {                                                                                                    // 36\n\t\ttype: String,                                                                                               // 37\n\t\tautoValue: function () {                                                                                    // 38\n\t\t\tfunction autoValue() {                                                                                     // 38\n\t\t\t\treturn this.userId;                                                                                       // 39\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\tuserMail: {                                                                                                  // 42\n\t\ttype: String,                                                                                               // 43\n\t\tautoValue: function () {                                                                                    // 44\n\t\t\tfunction autoValue() {                                                                                     // 44\n\t\t\t\treturn Meteor.user().emails[0].address;                                                                   // 45\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\tmessage: {                                                                                                   // 48\n\t\ttype: String,                                                                                               // 49\n\t\tlabel: 'Nachricht',                                                                                         // 50\n\t\tmax: 1000,                                                                                                  // 51\n\t\tautoform: {                                                                                                 // 52\n\t\t\tafFieldInput: {                                                                                            // 53\n\t\t\t\ttype: \"textarea\"                                                                                          // 54\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tcreatedAt: {                                                                                                 // 58\n\t\ttype: Date,                                                                                                 // 59\n\t\tautoValue: function () {                                                                                    // 60\n\t\t\tfunction autoValue() {                                                                                     // 60\n\t\t\t\treturn new Date();                                                                                        // 61\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t}                                                                                                            //\n});                                                                                                           //\n                                                                                                              //\nData.Detail.Schema = new SimpleSchema({                                                                       // 66\n\tuserId: {                                                                                                    // 67\n\t\ttype: String,                                                                                               // 68\n\t\tautoValue: function () {                                                                                    // 69\n\t\t\tfunction autoValue() {                                                                                     // 69\n\t\t\t\treturn this.userId;                                                                                       // 70\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\tuserMail: {                                                                                                  // 73\n\t\ttype: String,                                                                                               // 74\n\t\tautoValue: function () {                                                                                    // 75\n\t\t\tfunction autoValue() {                                                                                     // 75\n\t\t\t\treturn Meteor.user().emails[0].address;                                                                   // 76\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\ttimestamp: {                                                                                                 // 79\n\t\ttype: Date,                                                                                                 // 80\n\t\tautoValue: function () {                                                                                    // 81\n\t\t\tfunction autoValue() {                                                                                     // 81\n\t\t\t\treturn new Date();                                                                                        // 82\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\tdeviceType: {                                                                                                // 85\n\t\ttype: String                                                                                                // 86\n\t},                                                                                                           //\n\tdevicePlatform: {                                                                                            // 88\n\t\ttype: String                                                                                                // 89\n\t},                                                                                                           //\n\troute: {                                                                                                     // 91\n\t\ttype: String                                                                                                // 92\n\t},                                                                                                           //\n\tclickArea: {                                                                                                 // 94\n\t\ttype: String,                                                                                               // 95\n\t\tallowedValues: ['bar', 'mode', 'source', 'favDel', 'browse', 'reveal']                                      // 96\n\t},                                                                                                           //\n\tmode: {                                                                                                      // 98\n\t\ttype: String,                                                                                               // 99\n\t\tallowedValues: ['lesen', 'wort', 'definition', 'eingabe', 'null']                                           // 100\n\t},                                                                                                           //\n\tattention: {                                                                                                 // 102\n\t\ttype: Boolean                                                                                               // 103\n\t}                                                                                                            //\n});                                                                                                           //\n                                                                                                              //\nData.Words.Schema = new SimpleSchema({                                                                        // 107\n\tuserId: {                                                                                                    // 108\n\t\ttype: String,                                                                                               // 109\n\t\tautoValue: function () {                                                                                    // 110\n\t\t\tfunction autoValue() {                                                                                     // 110\n\t\t\t\treturn this.userId;                                                                                       // 111\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\tvocabularyId: {                                                                                              // 114\n\t\ttype: String                                                                                                // 115\n\t},                                                                                                           //\n\tvocabularyName: {                                                                                            // 117\n\t\ttype: String                                                                                                // 118\n\t},                                                                                                           //\n\tviewed: {                                                                                                    // 120\n\t\ttype: Number                                                                                                // 121\n\t},                                                                                                           //\n\tcreatedAt: {                                                                                                 // 123\n\t\ttype: Date,                                                                                                 // 124\n\t\tautoValue: function () {                                                                                    // 125\n\t\t\tfunction autoValue() {                                                                                     // 125\n\t\t\t\treturn new Date();                                                                                        // 126\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t}                                                                                                            //\n});                                                                                                           //\n                                                                                                              //\nData.Survey.Schema = new SimpleSchema({                                                                       // 131\n\t// GENERAL                                                                                                   //\n\tuserId: {                                                                                                    // 133\n\t\ttype: String,                                                                                               // 134\n\t\tautoValue: function () {                                                                                    // 135\n\t\t\tfunction autoValue() {                                                                                     // 135\n\t\t\t\treturn this.userId;                                                                                       // 136\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}(),                                                                                                        //\n\t\tautoform: {                                                                                                 // 138\n\t\t\ttype: \"hidden\",                                                                                            // 139\n\t\t\tlabel: false                                                                                               // 140\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tage: {                                                                                                       // 143\n\t\ttype: Number,                                                                                               // 144\n\t\tlabel: 'Dein Alter',                                                                                        // 145\n\t\tmin: 18,                                                                                                    // 146\n\t\tmax: 99                                                                                                     // 147\n\t},                                                                                                           //\n                                                                                                              //\n\tpreviousExperience: {                                                                                        // 150\n\t\ttype: String,                                                                                               // 151\n\t\tlabel: 'Wie steht es um deine Vorerfahrung mit digitalen Vokabeltrainern?',                                 // 152\n\t\tautoform: {                                                                                                 // 153\n\t\t\ttype: \"select-radio-inline\",                                                                               // 154\n\t\t\toptions: function () {                                                                                     // 155\n\t\t\t\tfunction options() {                                                                                      // 155\n\t\t\t\t\treturn [{                                                                                                // 156\n\t\t\t\t\t\tlabel: \"gar keine\",                                                                                     // 157\n\t\t\t\t\t\tvalue: \"keine\"                                                                                          // 158\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"mal probiert\",                                                                                  // 160\n\t\t\t\t\t\tvalue: \"probiert\"                                                                                       // 161\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"nutze ich regelmaessig\",                                                                        // 163\n\t\t\t\t\t\tvalue: \"regelmaessig\"                                                                                   // 164\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tlearningCurve: {                                                                                             // 169\n\t\ttype: String,                                                                                               // 170\n\t\tlabel: 'Wie ist dir die Einarbeitung in die App gefallen?',                                                 // 171\n\t\tautoform: {                                                                                                 // 172\n\t\t\ttype: \"select-radio-inline\",                                                                               // 173\n\t\t\toptions: function () {                                                                                     // 174\n\t\t\t\tfunction options() {                                                                                      // 174\n\t\t\t\t\treturn [{                                                                                                // 175\n\t\t\t\t\t\tlabel: \"Leicht\",                                                                                        // 176\n\t\t\t\t\t\tvalue: \"leicht\"                                                                                         // 177\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Mittel\",                                                                                        // 179\n\t\t\t\t\t\tvalue: \"mittel\"                                                                                         // 180\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Schwer\",                                                                                        // 182\n\t\t\t\t\t\tvalue: \"schwer\"                                                                                         // 183\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\teverydayUse: {                                                                                               // 188\n\t\ttype: String,                                                                                               // 189\n\t\tlabel: 'Konntest du den Gebrauch der App muehelos in deinen Alltag integrieren?',                           // 190\n\t\tautoform: {                                                                                                 // 191\n\t\t\ttype: \"select-radio-inline\",                                                                               // 192\n\t\t\toptions: function () {                                                                                     // 193\n\t\t\t\tfunction options() {                                                                                      // 193\n\t\t\t\t\treturn [{                                                                                                // 194\n\t\t\t\t\t\tlabel: \"Ja\",                                                                                            // 195\n\t\t\t\t\t\tvalue: \"ja\"                                                                                             // 196\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Nein\",                                                                                          // 198\n\t\t\t\t\t\tvalue: \"nein\"                                                                                           // 199\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\teverydayUseText: {                                                                                           // 204\n\t\ttype: String,                                                                                               // 205\n\t\tmax: 1000,                                                                                                  // 206\n\t\tlabel: 'Weshalb?',                                                                                          // 207\n\t\tautoform: {                                                                                                 // 208\n\t\t\tafFieldInput: {                                                                                            // 209\n\t\t\t\ttype: \"textarea\"                                                                                          // 210\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tusability: {                                                                                                 // 214\n\t\ttype: String,                                                                                               // 215\n\t\tlabel: 'Wie kommst du mit der Bedienung der App zurecht?',                                                  // 216\n\t\tautoform: {                                                                                                 // 217\n\t\t\ttype: \"select-radio-inline\",                                                                               // 218\n\t\t\toptions: function () {                                                                                     // 219\n\t\t\t\tfunction options() {                                                                                      // 219\n\t\t\t\t\treturn [{                                                                                                // 220\n\t\t\t\t\t\tlabel: \"gar nicht\",                                                                                     // 221\n\t\t\t\t\t\tvalue: \"nicht\"                                                                                          // 222\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"ok\",                                                                                            // 224\n\t\t\t\t\t\tvalue: \"ok\"                                                                                             // 225\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"super\",                                                                                         // 227\n\t\t\t\t\t\tvalue: \"super\"                                                                                          // 228\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tusabilityText: {                                                                                             // 233\n\t\ttype: String,                                                                                               // 234\n\t\tmax: 1000,                                                                                                  // 235\n\t\tlabel: 'Teile deine Ideen zur Bedienung (optional)',                                                        // 236\n\t\toptional: true,                                                                                             // 237\n\t\tautoform: {                                                                                                 // 238\n\t\t\tafFieldInput: {                                                                                            // 239\n\t\t\t\ttype: \"textarea\"                                                                                          // 240\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\t// NUTZUNGSVERHALTEN                                                                                         //\n\tdeviceMobile: {                                                                                              // 245\n\t\ttype: String,                                                                                               // 246\n\t\tlabel: 'Mobile:',                                                                                           // 247\n\t\tautoform: {                                                                                                 // 248\n\t\t\ttype: \"select-radio-inline\",                                                                               // 249\n\t\t\toptions: function () {                                                                                     // 250\n\t\t\t\tfunction options() {                                                                                      // 250\n\t\t\t\t\treturn [{                                                                                                // 251\n\t\t\t\t\t\tlabel: \"Ja\",                                                                                            // 252\n\t\t\t\t\t\tvalue: \"ja\"                                                                                             // 253\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Nein\",                                                                                          // 255\n\t\t\t\t\t\tvalue: \"nein\"                                                                                           // 256\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tdeviceTablet: {                                                                                              // 261\n\t\ttype: String,                                                                                               // 262\n\t\tlabel: 'Tablet:',                                                                                           // 263\n\t\tautoform: {                                                                                                 // 264\n\t\t\ttype: \"select-radio-inline\",                                                                               // 265\n\t\t\toptions: function () {                                                                                     // 266\n\t\t\t\tfunction options() {                                                                                      // 266\n\t\t\t\t\treturn [{                                                                                                // 267\n\t\t\t\t\t\tlabel: \"Ja\",                                                                                            // 268\n\t\t\t\t\t\tvalue: \"ja\"                                                                                             // 269\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Nein\",                                                                                          // 271\n\t\t\t\t\t\tvalue: \"nein\"                                                                                           // 272\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tdeviceDesktop: {                                                                                             // 277\n\t\ttype: String,                                                                                               // 278\n\t\tlabel: 'Desktop:',                                                                                          // 279\n\t\tautoform: {                                                                                                 // 280\n\t\t\ttype: \"select-radio-inline\",                                                                               // 281\n\t\t\toptions: function () {                                                                                     // 282\n\t\t\t\tfunction options() {                                                                                      // 282\n\t\t\t\t\treturn [{                                                                                                // 283\n\t\t\t\t\t\tlabel: \"Ja\",                                                                                            // 284\n\t\t\t\t\t\tvalue: \"ja\"                                                                                             // 285\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Nein\",                                                                                          // 287\n\t\t\t\t\t\tvalue: \"nein\"                                                                                           // 288\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tdeviceBehavior: {                                                                                            // 293\n\t\ttype: String,                                                                                               // 294\n\t\tmax: 1000,                                                                                                  // 295\n\t\tlabel: 'Falls du mehrere Endgeraete benutzt hast um die App aufzurufen: Inwiefern hat sich dein Nutzungsverhalten unterschieden?',\n\t\toptional: false,                                                                                            // 297\n\t\tautoform: {                                                                                                 // 298\n\t\t\tafFieldInput: {                                                                                            // 299\n\t\t\t\ttype: \"textarea\"                                                                                          // 300\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tfavouriteMode: {                                                                                             // 304\n\t\ttype: String,                                                                                               // 305\n\t\tlabel: 'Welchen Trainermodus hast du am liebsten genutzt?',                                                 // 306\n\t\tautoform: {                                                                                                 // 307\n\t\t\ttype: \"select-radio-inline\",                                                                               // 308\n\t\t\toptions: function () {                                                                                     // 309\n\t\t\t\tfunction options() {                                                                                      // 309\n\t\t\t\t\treturn [{                                                                                                // 310\n\t\t\t\t\t\tlabel: \"Lesen\",                                                                                         // 311\n\t\t\t\t\t\tvalue: \"lesen\"                                                                                          // 312\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Wort\",                                                                                          // 314\n\t\t\t\t\t\tvalue: \"wort\"                                                                                           // 315\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Definition\",                                                                                    // 317\n\t\t\t\t\t\tvalue: \"definition\"                                                                                     // 318\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Texteingabe\",                                                                                   // 320\n\t\t\t\t\t\tvalue: \"eingabe\"                                                                                        // 321\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Register\",                                                                                      // 323\n\t\t\t\t\t\tvalue: \"register\"                                                                                       // 324\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tfavouriteModeText: {                                                                                         // 329\n\t\ttype: String,                                                                                               // 330\n\t\tmax: 1000,                                                                                                  // 331\n\t\tlabel: 'Weshalb?',                                                                                          // 332\n\t\toptional: false,                                                                                            // 333\n\t\tautoform: {                                                                                                 // 334\n\t\t\tafFieldInput: {                                                                                            // 335\n\t\t\t\ttype: \"textarea\"                                                                                          // 336\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tattentionBenefit: {                                                                                          // 340\n\t\ttype: String,                                                                                               // 341\n\t\tlabel: 'Hat dir die Moeglichkeit, das UI kontextorientiert zu veraendern, gefallen?',                       // 342\n\t\tautoform: {                                                                                                 // 343\n\t\t\ttype: \"select-radio-inline\",                                                                               // 344\n\t\t\toptions: function () {                                                                                     // 345\n\t\t\t\tfunction options() {                                                                                      // 345\n\t\t\t\t\treturn [{                                                                                                // 346\n\t\t\t\t\t\tlabel: \"Ja\",                                                                                            // 347\n\t\t\t\t\t\tvalue: \"ja\"                                                                                             // 348\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Nein\",                                                                                          // 350\n\t\t\t\t\t\tvalue: \"nein\"                                                                                           // 351\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tattentionBehavior: {                                                                                         // 356\n\t\ttype: String,                                                                                               // 357\n\t\tlabel: 'Hat die Moeglichkeit, das UI kontextorientiert zu veraendern, dein Nutzungsverhalten beeinflusst?',\n\t\tautoform: {                                                                                                 // 359\n\t\t\ttype: \"select-radio-inline\",                                                                               // 360\n\t\t\toptions: function () {                                                                                     // 361\n\t\t\t\tfunction options() {                                                                                      // 361\n\t\t\t\t\treturn [{                                                                                                // 362\n\t\t\t\t\t\tlabel: \"Ja\",                                                                                            // 363\n\t\t\t\t\t\tvalue: \"ja\"                                                                                             // 364\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Nein\",                                                                                          // 366\n\t\t\t\t\t\tvalue: \"nein\"                                                                                           // 367\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tattentionBehaviorText: {                                                                                     // 372\n\t\ttype: String,                                                                                               // 373\n\t\tmax: 1000,                                                                                                  // 374\n\t\tlabel: 'Weshalb?',                                                                                          // 375\n\t\tautoform: {                                                                                                 // 376\n\t\t\tafFieldInput: {                                                                                            // 377\n\t\t\t\ttype: \"textarea\"                                                                                          // 378\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tattentionSituation: {                                                                                        // 382\n\t\ttype: String,                                                                                               // 383\n\t\tlabel: 'Wann, wo und in welcher Situation hast du beschlossen, das UI zu wechseln? (Beispiel)',             // 384\n\t\toptional: false,                                                                                            // 385\n\t\tautoform: {                                                                                                 // 386\n\t\t\tafFieldInput: {                                                                                            // 387\n\t\t\t\ttype: \"textarea\"                                                                                          // 388\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tattentionUse: {                                                                                              // 392\n\t\ttype: String,                                                                                               // 393\n\t\tlabel: 'Siehst du generell einen Vorteil in der Moeglichkeit das UI kontextorientiert anzupassen?',         // 394\n\t\tautoform: {                                                                                                 // 395\n\t\t\ttype: \"select-radio-inline\",                                                                               // 396\n\t\t\toptions: function () {                                                                                     // 397\n\t\t\t\tfunction options() {                                                                                      // 397\n\t\t\t\t\treturn [{                                                                                                // 398\n\t\t\t\t\t\tlabel: \"Ja\",                                                                                            // 399\n\t\t\t\t\t\tvalue: \"ja\"                                                                                             // 400\n\t\t\t\t\t}, {                                                                                                     //\n\t\t\t\t\t\tlabel: \"Nein\",                                                                                          // 402\n\t\t\t\t\t\tvalue: \"nein\"                                                                                           // 403\n\t\t\t\t\t}];                                                                                                      //\n\t\t\t\t}                                                                                                         //\n                                                                                                              //\n\t\t\t\treturn options;                                                                                           //\n\t\t\t}()                                                                                                        //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tattentionUseText: {                                                                                          // 408\n\t\ttype: String,                                                                                               // 409\n\t\tmax: 1000,                                                                                                  // 410\n\t\tlabel: 'Weshalb?',                                                                                          // 411\n\t\toptional: false,                                                                                            // 412\n\t\tautoform: {                                                                                                 // 413\n\t\t\tafFieldInput: {                                                                                            // 414\n\t\t\t\ttype: \"textarea\"                                                                                          // 415\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t},                                                                                                           //\n\tprospects: {                                                                                                 // 419\n\t\ttype: String,                                                                                               // 420\n\t\tmax: 1000,                                                                                                  // 421\n\t\tlabel: 'Welche alternativen Anwendungsgebiete fuer ein kontextsensitives UI kannst du dir vorstellen?',     // 422\n\t\toptional: false,                                                                                            // 423\n\t\tautoform: {                                                                                                 // 424\n\t\t\tafFieldInput: {                                                                                            // 425\n\t\t\t\ttype: \"textarea\"                                                                                          // 426\n\t\t\t}                                                                                                          //\n\t\t}                                                                                                           //\n\t}                                                                                                            //\n                                                                                                              //\n});                                                                                                           //\n                                                                                                              //\nData.Detail.attachSchema(Data.Detail.Schema);                                                                 // 434\nData.Words.attachSchema(Data.Words.Schema);                                                                   // 435\nData.Survey.attachSchema(Data.Survey.Schema);                                                                 // 436\nData.Feedback.attachSchema(Data.Feedback.Schema);                                                             // 437\nData.Status.attachSchema(Data.Status.Schema);                                                                 // 438\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"favourites.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/collections/favourites.js                                                                           //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar FavouritesSchema = new SimpleSchema({                                                                     // 1\n  userId: {                                                                                                   // 2\n    type: String,                                                                                             // 3\n    autoValue: function () {                                                                                  // 4\n      function autoValue() {                                                                                  // 4\n        return this.userId;                                                                                   // 5\n      }                                                                                                       //\n                                                                                                              //\n      return autoValue;                                                                                       //\n    }()                                                                                                       //\n  },                                                                                                          //\n  vocabularyId: {                                                                                             // 8\n    type: String                                                                                              // 9\n  },                                                                                                          //\n  createdAt: {                                                                                                // 11\n    type: Date,                                                                                               // 12\n    autoValue: function () {                                                                                  // 13\n      function autoValue() {                                                                                  // 13\n        return new Date();                                                                                    // 14\n      }                                                                                                       //\n                                                                                                              //\n      return autoValue;                                                                                       //\n    }(),                                                                                                      //\n    autoform: {                                                                                               // 16\n      type: \"hidden\"                                                                                          // 17\n    }                                                                                                         //\n  }                                                                                                           //\n});                                                                                                           //\n                                                                                                              //\nFavourites = new Mongo.Collection('favourites', {});                                                          // 22\nFavourites.attachSchema(FavouritesSchema);                                                                    // 23\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"messages.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/collections/messages.js                                                                             //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nSimpleSchema.messages({                                                                                       // 1\n  required: \"[label] wird benoetigt.\",                                                                        // 2\n  minString: \"[label] muss mindestens [min] Zeichen enthalten.\",                                              // 3\n  maxString: \"[label] darf nicht mehr als [max] Zeichen enthalten.\",                                          // 4\n  minNumber: \"[label] muss mindestens [min] sein.\",                                                           // 5\n  maxNumber: \"[label] darf nicht hoeher als [max] sein.\",                                                     // 6\n  minDate: \"[label] must be on or after [min]\",                                                               // 7\n  maxDate: \"[label] cannot be after [max]\",                                                                   // 8\n  badDate: \"[label] is not a valid date\",                                                                     // 9\n  minCount: \"You must specify at least [minCount] values\",                                                    // 10\n  maxCount: \"You cannot specify more than [maxCount] values\",                                                 // 11\n  noDecimal: \"[label] muss eine gerade Zahl sein.\",                                                           // 12\n  notAllowed: \"[value] kein zulaessiger Wert.\",                                                               // 13\n  expectedString: \"[label] muss eine Zeichenkette sein.\",                                                     // 14\n  expectedNumber: \"[label] muss eine Zahl sein.\",                                                             // 15\n  expectedBoolean: \"[label] muss ein Bool-Wert sein.\",                                                        // 16\n  expectedArray: \"[label] muss ein Array sein.\",                                                              // 17\n  expectedObject: \"[label] muss ein Object sein.\",                                                            // 18\n  expectedConstructor: \"[label] muss vom Typ [type] sein.\",                                                   // 19\n  regEx: [{ msg: \"[label] failed regular expression validation\" }, { exp: SimpleSchema.RegEx.Email, msg: \"[label] must be a valid e-mail address\" }, { exp: SimpleSchema.RegEx.WeakEmail, msg: \"[label] must be a valid e-mail address\" }, { exp: SimpleSchema.RegEx.Domain, msg: \"[label] must be a valid domain\" }, { exp: SimpleSchema.RegEx.WeakDomain, msg: \"[label] must be a valid domain\" }, { exp: SimpleSchema.RegEx.IP, msg: \"[label] must be a valid IPv4 or IPv6 address\" }, { exp: SimpleSchema.RegEx.IPv4, msg: \"[label] must be a valid IPv4 address\" }, { exp: SimpleSchema.RegEx.IPv6, msg: \"[label] must be a valid IPv6 address\" }, { exp: SimpleSchema.RegEx.Url, msg: \"[label] must be a valid URL\" }, { exp: SimpleSchema.RegEx.Id, msg: \"[label] must be a valid alphanumeric ID\" }],\n  keyNotInSchema: \"[key] ist nicht im Schema erlaubt.\"                                                        // 32\n});                                                                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"userExt.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/collections/userExt.js                                                                              //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nUserExt = new Mongo.Collection('userExt', {});                                                                // 1\n                                                                                                              //\nUserExt.Schema = new SimpleSchema({                                                                           // 3\n\tuserId: {                                                                                                    // 4\n\t\ttype: String,                                                                                               // 5\n\t\tautoValue: function () {                                                                                    // 6\n\t\t\tfunction autoValue() {                                                                                     // 6\n\t\t\t\treturn this.userId;                                                                                       // 7\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\tuserMail: {                                                                                                  // 10\n\t\ttype: String,                                                                                               // 11\n\t\tautoValue: function () {                                                                                    // 12\n\t\t\tfunction autoValue() {                                                                                     // 12\n\t\t\t\treturn Meteor.user().emails[0].address;                                                                   // 13\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t},                                                                                                           //\n\tsurveySubmitted: {                                                                                           // 16\n\t\ttype: Boolean,                                                                                              // 17\n\t\tdefaultValue: false                                                                                         // 18\n\t}                                                                                                            //\n\t// TODO last visited URL - save on logout                                                                    //\n});                                                                                                           // 3\n                                                                                                              //\nUserExt.attachSchema(UserExt.Schema);                                                                         // 23\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"vocabulary.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/collections/vocabulary.js                                                                           //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nVocabulary = new Mongo.Collection('vocabulary', {});                                                          // 1\nTermDay = new Mongo.Collection('termDay', {});                                                                // 2\n                                                                                                              //\nif (Meteor.isServer) {                                                                                        // 4\n\tVocabulary._ensureIndex({                                                                                    // 5\n\t\tterm: 1,                                                                                                    // 6\n\t\tdescription: 1                                                                                              // 7\n\t});                                                                                                          //\n}                                                                                                             //\n                                                                                                              //\nVocabulary.allow({                                                                                            // 11\n\tinsert: function () {                                                                                        // 12\n\t\tfunction insert() {                                                                                         // 12\n\t\t\treturn false;                                                                                              //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn insert;                                                                                              //\n\t}(),                                                                                                         //\n\tupdate: function () {                                                                                        // 13\n\t\tfunction update() {                                                                                         // 13\n\t\t\treturn false;                                                                                              //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn update;                                                                                              //\n\t}(),                                                                                                         //\n\tremove: function () {                                                                                        // 14\n\t\tfunction remove() {                                                                                         // 14\n\t\t\treturn false;                                                                                              //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn remove;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\n                                                                                                              //\nVocabulary.deny({                                                                                             // 17\n\tinsert: function () {                                                                                        // 18\n\t\tfunction insert() {                                                                                         // 18\n\t\t\treturn true;                                                                                               //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn insert;                                                                                              //\n\t}(),                                                                                                         //\n\tupdate: function () {                                                                                        // 19\n\t\tfunction update() {                                                                                         // 19\n\t\t\treturn true;                                                                                               //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn update;                                                                                              //\n\t}(),                                                                                                         //\n\tremove: function () {                                                                                        // 20\n\t\tfunction remove() {                                                                                         // 20\n\t\t\treturn true;                                                                                               //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn remove;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\n                                                                                                              //\nvar VocabularySchema = new SimpleSchema({                                                                     // 23\n\tterm: {                                                                                                      // 24\n\t\ttype: String,                                                                                               // 25\n\t\tregEx: /^[a-zA-Z]+$/                                                                                        // 26\n\t},                                                                                                           //\n\tpreposition: {                                                                                               // 28\n\t\ttype: String,                                                                                               // 29\n\t\tallowedValues: ['der', 'die', 'das'],                                                                       // 30\n\t\toptional: true                                                                                              // 31\n\t},                                                                                                           //\n\twordClass: {                                                                                                 // 33\n\t\ttype: String,                                                                                               // 34\n\t\tallowedValues: ['Nomen', 'Verb', 'Adjektiv']                                                                // 35\n\t},                                                                                                           //\n\tdefinition: {                                                                                                // 37\n\t\ttype: [String]                                                                                              // 38\n\t}                                                                                                            //\n});                                                                                                           //\n                                                                                                              //\nvar TermDaySchema = new SimpleSchema({                                                                        // 42\n\tuserId: {                                                                                                    // 43\n\t\ttype: String                                                                                                // 44\n\t},                                                                                                           //\n\tvocabularyId: {                                                                                              // 46\n\t\ttype: String                                                                                                // 47\n\t},                                                                                                           //\n\ttimestamp: {                                                                                                 // 49\n\t\ttype: Date,                                                                                                 // 50\n\t\tautoValue: function () {                                                                                    // 51\n\t\t\tfunction autoValue() {                                                                                     // 51\n\t\t\t\treturn new Date();                                                                                        // 52\n\t\t\t}                                                                                                          //\n                                                                                                              //\n\t\t\treturn autoValue;                                                                                          //\n\t\t}()                                                                                                         //\n\t}                                                                                                            //\n});                                                                                                           //\n                                                                                                              //\nVocabulary.attachSchema(VocabularySchema);                                                                    // 57\nTermDay.attachSchema(TermDaySchema);                                                                          // 58\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"config\":{\"accounts_t9n.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/config/accounts_t9n.js                                                                              //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nT9n.setLanguage('de');                                                                                        // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"admin.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/config/admin.js                                                                                     //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nAdminConfig = {                                                                                               // 1\n\tname: 'Chalimo',                                                                                             // 2\n\tadminEmails: ['bla@bla.org'],                                                                                // 3\n\tcollections: {                                                                                               // 4\n\t\tVocabulary: {                                                                                               // 5\n\t\t\ttableColumns: [{                                                                                           // 6\n\t\t\t\tlabel: 'Wort',                                                                                            // 7\n\t\t\t\tname: 'term'                                                                                              // 8\n\t\t\t}, {                                                                                                       //\n\t\t\t\tlabel: 'Wortklasse',                                                                                      // 10\n\t\t\t\tname: 'wordClass'                                                                                         // 11\n\t\t\t}]                                                                                                         //\n\t\t}                                                                                                           //\n\t}                                                                                                            //\n};                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"at_config.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/config/at_config.js                                                                                 //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n// Options                                                                                                    //\nAccountsTemplates.configure({                                                                                 // 2\n  defaultLayout: 'layout',                                                                                    // 3\n  defaultLayoutRegions: {                                                                                     // 4\n    footer: 'footer'                                                                                          // 5\n  },                                                                                                          //\n  defaultContentRegion: 'main',                                                                               // 7\n  showForgotPasswordLink: false,                                                                              // 8\n  overrideLoginErrors: true,                                                                                  // 9\n  enablePasswordChange: true,                                                                                 // 10\n                                                                                                              //\n  // sendVerificationEmail: true,                                                                             //\n  // enforceEmailVerification: true,                                                                          //\n  //confirmPassword: true,                                                                                    //\n  //continuousValidation: false,                                                                              //\n  //displayFormLabels: true,                                                                                  //\n  //forbidClientAccountCreation: true,                                                                        //\n  //formValidationFeedback: true,                                                                             //\n  // homeRoutePath: '/',                                                                                      //\n  // showAddRemoveServices: false,                                                                            //\n  //showPlaceholders: true,                                                                                   //\n                                                                                                              //\n  negativeValidation: true,                                                                                   // 23\n  positiveValidation: true,                                                                                   // 24\n  negativeFeedback: false,                                                                                    // 25\n  positiveFeedback: true                                                                                      // 26\n                                                                                                              //\n});                                                                                                           //\n                                                                                                              //\n// Privacy Policy and Terms of Use                                                                            //\n//privacyUrl: 'privacy',                                                                                      //\n//termsUrl: 'terms-of-use',                                                                                   //\nvar logout = function logout() {                                                                              // 33\n  //example redirect after logout                                                                             //\n  FlowRouter.go('/sign-in');                                                                                  // 35\n};                                                                                                            //\n                                                                                                              //\nAccountsTemplates.configure({                                                                                 // 38\n  onLogoutHook: logout                                                                                        // 39\n});                                                                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"routes.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// common/routes.js                                                                                           //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n// *** ROUTE FUNCTIONS                                                                                        //\n                                                                                                              //\ncheckAttentionModeOff = function checkAttentionModeOff() {                                                    // 3\n\tif (Session.get(ATTENTION_MODE)) {                                                                           // 4\n\t\tSession.set(ATTENTION_MODE, false);                                                                         // 5\n\t}                                                                                                            //\n};                                                                                                            //\n                                                                                                              //\ncheckAttentionModeOn = function checkAttentionModeOn() {                                                      // 9\n\tif (!Session.get(ATTENTION_MODE)) {                                                                          // 10\n\t\tSession.set(ATTENTION_MODE, true);                                                                          // 11\n\t}                                                                                                            //\n};                                                                                                            //\n                                                                                                              //\nresetSession = function resetSession() {                                                                      // 15\n\tSession.set(REVEALED, false);                                                                                // 16\n\tSession.set(TERM_WRONG, false);                                                                              // 17\n};                                                                                                            //\n                                                                                                              //\ncheckAdmin = function checkAdmin() {                                                                          // 20\n\tif (!Roles.userIsInRole(Meteor.userId(), 'admin')) {                                                         // 21\n\t\t// FlowRouter.redirect('/notFound');                                                                        //\n\t}                                                                                                            //\n};                                                                                                            //\n                                                                                                              //\ncheckSurveySubmitted = function checkSurveySubmitted() {                                                      // 26\n\tvar query = UserExt.findOne({ userId: Meteor.userId(), surveySubmitted: true });                             // 27\n\tif (query) {                                                                                                 // 28\n\t\tFlowRouter.redirect('/');                                                                                   // 29\n\t}                                                                                                            //\n};                                                                                                            //\n                                                                                                              //\nFlowRouter.triggers.enter([AccountsTemplates.ensureSignedIn]);                                                // 33\n                                                                                                              //\n// *** ROUTE GROUPS                                                                                           //\n                                                                                                              //\nvar lowRoutes = FlowRouter.group({                                                                            // 37\n\tname: \"low\",                                                                                                 // 38\n\ttriggersEnter: [checkAttentionModeOn],                                                                       // 39\n\ttriggersExit: []                                                                                             // 40\n});                                                                                                           //\nvar highRoutes = FlowRouter.group({                                                                           // 42\n\tname: \"high\",                                                                                                // 43\n\ttriggersEnter: [checkAttentionModeOff],                                                                      // 44\n\ttriggersExit: []                                                                                             // 45\n});                                                                                                           //\n                                                                                                              //\n// *** ROUTES                                                                                                 //\n                                                                                                              //\nhighRoutes.route('/', {                                                                                       // 52\n\tname: \"index\",                                                                                               // 53\n\taction: function () {                                                                                        // 54\n\t\tfunction action(params, queryParams) {                                                                      // 54\n\t\t\tBlazeLayout.render('layout', {                                                                             // 55\n\t\t\t\tbar: \"bar\",                                                                                               // 56\n\t\t\t\tnav: \"nav\",                                                                                               // 57\n\t\t\t\tmain: \"index\",                                                                                            // 58\n\t\t\t\tfooter: \"footer\"                                                                                          // 59\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\nhighRoutes.route('/faq', {                                                                                    // 63\n\tname: \"faq\",                                                                                                 // 64\n\taction: function () {                                                                                        // 65\n\t\tfunction action(params, queryParams) {                                                                      // 65\n\t\t\tBlazeLayout.render('layout', {                                                                             // 66\n\t\t\t\tbar: \"bar\",                                                                                               // 67\n\t\t\t\tnav: \"nav\",                                                                                               // 68\n\t\t\t\tmain: \"faq\",                                                                                              // 69\n\t\t\t\tfooter: \"footer\"                                                                                          // 70\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\n                                                                                                              //\nhighRoutes.route('/trainer', {                                                                                // 75\n\tname: \"trainer\",                                                                                             // 76\n\taction: function () {                                                                                        // 77\n\t\tfunction action(params, queryParams) {                                                                      // 77\n\t\t\tBlazeLayout.render('layout', {                                                                             // 78\n\t\t\t\tbar: \"bar\",                                                                                               // 79\n\t\t\t\tnav: \"nav\",                                                                                               // 80\n\t\t\t\tmain: \"trainer\",                                                                                          // 81\n\t\t\t\tfooter: \"footer\"                                                                                          // 82\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\n                                                                                                              //\nhighRoutes.route('/register/:id', {                                                                           // 87\n\tname: \"vokabelDetail\",                                                                                       // 88\n\taction: function () {                                                                                        // 89\n\t\tfunction action(params, queryParams) {                                                                      // 89\n\t\t\tBlazeLayout.render('layout', {                                                                             // 90\n\t\t\t\tbar: \"bar\",                                                                                               // 91\n\t\t\t\tnav: \"nav\",                                                                                               // 92\n\t\t\t\tmain: \"vokabelDetail\",                                                                                    // 93\n\t\t\t\tfooter: \"footer\"                                                                                          // 94\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\nhighRoutes.route('/register', {                                                                               // 98\n\tname: \"register\",                                                                                            // 99\n\taction: function () {                                                                                        // 100\n\t\tfunction action(params, queryParams) {                                                                      // 100\n\t\t\tBlazeLayout.render('layout', {                                                                             // 101\n\t\t\t\tbar: \"bar\",                                                                                               // 102\n\t\t\t\tnav: \"nav\",                                                                                               // 103\n\t\t\t\tmain: \"register\",                                                                                         // 104\n\t\t\t\tfooter: \"footer\"                                                                                          // 105\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}()                                                                                                          //\n});                                                                                                           //\nhighRoutes.route('/verwaltung', {                                                                             // 109\n\tname: \"verwaltung\",                                                                                          // 110\n\taction: function () {                                                                                        // 111\n\t\tfunction action(params, queryParams) {                                                                      // 111\n\t\t\tFlowRouter.redirect('/verwaltung/feedback');                                                               // 112\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: [checkAdmin]                                                                                  // 114\n});                                                                                                           //\nhighRoutes.route('/verwaltung/statistik', {                                                                   // 116\n\tname: \"statistik\",                                                                                           // 117\n\taction: function () {                                                                                        // 118\n\t\tfunction action(params, queryParams) {                                                                      // 118\n\t\t\tFlowRouter.redirect('/verwaltung/statistik/total');                                                        // 119\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: [checkAdmin]                                                                                  // 121\n});                                                                                                           //\nhighRoutes.route('/verwaltung/statistik/device', {                                                            // 123\n\tname: \"device\",                                                                                              // 124\n\taction: function () {                                                                                        // 125\n\t\tfunction action(params, queryParams) {                                                                      // 125\n\t\t\tBlazeLayout.render('layout', {                                                                             // 126\n\t\t\t\tbar: \"bar\",                                                                                               // 127\n\t\t\t\tnav: \"nav\",                                                                                               // 128\n\t\t\t\tnavOverview: \"navOverview\",                                                                               // 129\n\t\t\t\tnavStatistics: \"navStatistics\",                                                                           // 130\n\t\t\t\tmain: \"device\",                                                                                           // 131\n\t\t\t\tfooter: \"footer\"                                                                                          // 132\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: [checkAdmin]                                                                                  // 135\n});                                                                                                           //\nhighRoutes.route('/verwaltung/statistik/mode', {                                                              // 137\n\tname: \"mode\",                                                                                                // 138\n\taction: function () {                                                                                        // 139\n\t\tfunction action(params, queryParams) {                                                                      // 139\n\t\t\tBlazeLayout.render('layout', {                                                                             // 140\n\t\t\t\tbar: \"bar\",                                                                                               // 141\n\t\t\t\tnav: \"nav\",                                                                                               // 142\n\t\t\t\tnavOverview: \"navOverview\",                                                                               // 143\n\t\t\t\tnavStatistics: \"navStatistics\",                                                                           // 144\n\t\t\t\tmain: \"mode\",                                                                                             // 145\n\t\t\t\tfooter: \"footer\"                                                                                          // 146\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: [checkAdmin]                                                                                  // 149\n});                                                                                                           //\nhighRoutes.route('/verwaltung/statistik/status', {                                                            // 151\n\tname: \"status\",                                                                                              // 152\n\taction: function () {                                                                                        // 153\n\t\tfunction action(params, queryParams) {                                                                      // 153\n\t\t\tBlazeLayout.render('layout', {                                                                             // 154\n\t\t\t\tbar: \"bar\",                                                                                               // 155\n\t\t\t\tnav: \"nav\",                                                                                               // 156\n\t\t\t\tnavOverview: \"navOverview\",                                                                               // 157\n\t\t\t\tnavStatistics: \"navStatistics\",                                                                           // 158\n\t\t\t\tmain: \"status\",                                                                                           // 159\n\t\t\t\tfooter: \"footer\"                                                                                          // 160\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: [checkAdmin]                                                                                  // 163\n});                                                                                                           //\nhighRoutes.route('/verwaltung/statistik/total', {                                                             // 165\n\tname: \"total\",                                                                                               // 166\n\taction: function () {                                                                                        // 167\n\t\tfunction action(params, queryParams) {                                                                      // 167\n\t\t\tBlazeLayout.render('layout', {                                                                             // 168\n\t\t\t\tbar: \"bar\",                                                                                               // 169\n\t\t\t\tnav: \"nav\",                                                                                               // 170\n\t\t\t\tnavOverview: \"navOverview\",                                                                               // 171\n\t\t\t\tnavStatistics: \"navStatistics\",                                                                           // 172\n\t\t\t\tmain: \"total\",                                                                                            // 173\n\t\t\t\tfooter: \"footer\"                                                                                          // 174\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: [checkAdmin]                                                                                  // 177\n});                                                                                                           //\n                                                                                                              //\nhighRoutes.route('/verwaltung/feedback', {                                                                    // 180\n\tname: \"feedback\",                                                                                            // 181\n\taction: function () {                                                                                        // 182\n\t\tfunction action(params, queryParams) {                                                                      // 182\n\t\t\tBlazeLayout.render('layout', {                                                                             // 183\n\t\t\t\tbar: \"bar\",                                                                                               // 184\n\t\t\t\tnav: \"nav\",                                                                                               // 185\n\t\t\t\tnavOverview: \"navOverview\",                                                                               // 186\n\t\t\t\tmain: \"feedback\",                                                                                         // 187\n\t\t\t\tfooter: \"footer\"                                                                                          // 188\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: [checkAdmin]                                                                                  // 191\n});                                                                                                           //\nhighRoutes.route('/fragebogen', {                                                                             // 193\n\tname: \"fragebogen\",                                                                                          // 194\n\ttriggersEnter: [checkSurveySubmitted],                                                                       // 195\n\taction: function () {                                                                                        // 196\n\t\tfunction action(params, queryParams) {                                                                      // 196\n\t\t\tBlazeLayout.render('layout', {                                                                             // 197\n\t\t\t\tbar: \"bar\",                                                                                               // 198\n\t\t\t\tnav: \"nav\",                                                                                               // 199\n\t\t\t\tmain: \"fragebogen\",                                                                                       // 200\n\t\t\t\tfooter: \"footer\"                                                                                          // 201\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: []                                                                                            // 204\n});                                                                                                           //\n                                                                                                              //\nlowRoutes.route('/low', {                                                                                     // 207\n\tname: \"low\",                                                                                                 // 208\n\taction: function () {                                                                                        // 209\n\t\tfunction action(params, queryParams) {                                                                      // 209\n\t\t\tBlazeLayout.render('layout', {                                                                             // 210\n\t\t\t\tbar: \"bar\",                                                                                               // 211\n\t\t\t\tmain: \"low\",                                                                                              // 212\n\t\t\t\tnavSource: \"navLow\"                                                                                       // 213\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}(),                                                                                                         //\n\ttriggersEnter: []                                                                                            // 216\n});                                                                                                           //\n                                                                                                              //\nFlowRouter.notFound = {                                                                                       // 219\n\tname: \"notFound\",                                                                                            // 220\n\taction: function () {                                                                                        // 221\n\t\tfunction action(params, queryParams) {                                                                      // 221\n\t\t\tBlazeLayout.render('layout', {                                                                             // 222\n\t\t\t\tfooter: \"footer\",                                                                                         // 223\n\t\t\t\tmain: \"pageNotFound\",                                                                                     // 224\n\t\t\t\tfooter: \"footer\"                                                                                          // 225\n\t\t\t});                                                                                                        //\n\t\t}                                                                                                           //\n                                                                                                              //\n\t\treturn action;                                                                                              //\n\t}()                                                                                                          //\n};                                                                                                            //\n                                                                                                              //\n//Routes                                                                                                      //\nAccountsTemplates.configureRoute('changePwd');                                                                // 232\n// AccountsTemplates.configureRoute('forgotPwd');                                                             //\nAccountsTemplates.configureRoute('resetPwd');                                                                 // 234\nAccountsTemplates.configureRoute('signIn');                                                                   // 235\nAccountsTemplates.configureRoute('signUp');                                                                   // 236\n// AccountsTemplates.configureRoute('verifyEmail');                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/lib/config/accounts.js\");\nrequire(\"./server/lib/config/email.js\");\nrequire(\"./common/aux/aux.js\");\nrequire(\"./common/aux/log.js\");\nrequire(\"./common/aux/nvd3_extra.js\");\nrequire(\"./common/aux/validation.js\");\nrequire(\"./common/collections/data.js\");\nrequire(\"./common/collections/favourites.js\");\nrequire(\"./common/collections/messages.js\");\nrequire(\"./common/collections/userExt.js\");\nrequire(\"./common/collections/vocabulary.js\");\nrequire(\"./common/config/accounts_t9n.js\");\nrequire(\"./common/config/admin.js\");\nrequire(\"./common/config/at_config.js\");\nrequire(\"./common/routes.js\");\nrequire(\"./server/methods.js\");\nrequire(\"./server/publication.js\");\nrequire(\"./server/startup.js\");\nrequire(\"./server/vocabularySeed.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/lib/config/accounts.js","/server/methods.js","/server/publication.js","/server/startup.js","/server/vocabularySeed.js","/common/aux/aux.js","/common/aux/log.js","/common/aux/nvd3_extra.js","/common/aux/validation.js","/common/collections/data.js","/common/collections/favourites.js","/common/collections/messages.js","/common/collections/userExt.js","/common/collections/vocabulary.js","/common/config/accounts_t9n.js","/common/config/admin.js","/common/config/at_config.js","/common/routes.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["\nMeteor.startup(function() {\n\n});\n","Meteor.methods({\n\tdeleteFavourite(vocabularyId) {\n\t\tcheck(vocabularyId, String);\n\t\tFavourites.remove({\n\t\t\tvocabularyId: vocabularyId\n\t\t});\n\t},\n\tinsertFavourite(vocabularyId) {\n\t\tcheck(vocabularyId, String);\n\t\tFavourites.insert({\n\t\t\tvocabularyId: vocabularyId\n\t\t});\n\t},\n\tdataWords(obj) {\n\t\tData.Words.upsert({\n\t\t\tvocabularyId: obj._id,\n\t\t\tuserId: this.userId\n\t\t}, {\n\t\t\t$setOnInsert: {\n\t\t\t\tvocabularyId: obj._id,\n\t\t\t\tuserId: this.userId,\n\t\t\t\tvocabularyName: obj.term,\n\t\t\t\tviewed: 0\n\t\t\t},\n\t\t\t$inc: {\n\t\t\t\tviewed: 1\n\t\t\t}\n\t\t});\n\t},\n\tdataDetail(deviceType, devicePlatform, route, clickArea, mode, attention) {\n\t\tData.Detail.insert({\n\t\t\tdeviceType: deviceType,\n\t\t\tdevicePlatform: devicePlatform,\n\t\t\troute: route,\n\t\t\tclickArea: clickArea,\n\t\t\tmode: mode,\n\t\t\tattention: attention\n\t\t})\n\t},\n\tsurveySubmitted() {\n\t\tUserExt.upsert({\n\t\t\tuserId: this.userId\n\t\t}, {\n\t\t\t$setOnInsert: {\n\t\t\t\tuserId: this.userId,\n\t\t\t\tsurveySubmitted: true\n\t\t\t}\n\t\t});\n\t}\n\n});\n","Meteor.publish(\"user\", function() {\n  return Meteor.users.find({});\n});\nMeteor.publish(\"userExt\", function() {\n\tlet currentUserId = this.userId;\n\tlet data = UserExt.find({userId: this.userId});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\nMeteor.publish(\"userExtAll\", function() {\n\tlet currentUserId = this.userId;\n\tlet data = UserExt.find({});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\nMeteor.publish(\"userStatus\", function() {\n\tlet data = Data.Status.find({});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\nMeteor.publish(\"feedback\", function() {\n\tlet data = Data.Feedback.find({});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n\n\n//  search query\nMeteor.publish('vocabularyRegister', function(search) {\n\tcheck(search, Match.OneOf(String, null, undefined));\n\tlet query = {},\n\t\tprojection = {\n\t\t\tlimit: 0,\n\t\t\tsort: {\n\t\t\t\tterm: 1\n\t\t\t}\n\t\t};\n\tif (search) {\n\t\tlet regex = new RegExp(search, 'i');\n\t\tquery = {\n\t\t\t$or: [{\n\t\t\t\tterm: regex\n\t\t\t}, {\n\t\t\t\tdescription: regex\n\t\t\t}]\n\t\t};\n\t\tprojection.limit = 0;\n\t}\n\treturn Vocabulary.find(query, projection);\n});\n\nMeteor.publish(\"vocabularyAll\", function() {\n\tlet data = Vocabulary.find({});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n\nMeteor.publish(\"ownedFavourites\", function() {\n\tlet currentUserId = this.userId;\n\tlet data = Favourites.find({\n\t\tuserId: currentUserId\n\t});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n\nMeteor.publish('termDay', function() {\n\tlet currentUserId = this.userId;\n\tlet data = TermDay.find({\n\t\tuserId: currentUserId\n\t});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n\nMeteor.publish('singleEntry', function(entryId) {\n\treturn Vocabulary.find({\n\t\t_id: entryId\n\t});\n});\n\nMeteor.publish('dataWords', function() {\n\tlet data = Data.Words.find({}, {\n\t\tsort: {\n\t\t\tviewed: -1\n\t\t}\n\t});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n\nMeteor.publish('dataDetail', function() {\n\tlet data = Data.Detail.find({});\n\tif (data) {\n\t\treturn data;\n\t}\n\treturn this.ready();\n});\n","Meteor.startup(function() {\n\tMeteor.users.find({\n\t\t\"status.online\": true\n\t}).observe({\n\t\tadded: function(obj) {\n\t\t\tlet today = new Date();\n\t\t\t// log online\n\t\t\tlet latestEntry = Data.Status.findOne({\n\t\t\t\tuserId: obj._id\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\tlimit: 1\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (latestEntry) {\n\t\t\t\tif (latestEntry.status !== 'online') {\n\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\tstatus: \"online\"\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(obj._id + ' set online');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tData.Status.insert({\n\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\tstatus: \"online\"\n\t\t\t\t});\n\t\t\t\tconsole.log(obj._id + ' set online');\n\t\t\t}\n\n\t\t\tlet lastEntryTermDay = TermDay.findOne({\n\t\t\t\tuserId: obj._id\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\tlimit: 1\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet termDayIds = R.pluck('vocabularyId')(TermDay.find({\n\t\t\t\tuserId: obj._id\n\t\t\t}).fetch());\n\t\t\tlet vocabulary = Vocabulary.find({\n\t\t\t\t_id: {\n\t\t\t\t\t$nin: termDayIds\n\t\t\t\t}\n\t\t\t}).fetch();\n\t\t\t// only insert a new vocabulary if there doesn't exist one for today\n\t\t\tif (!lastEntryTermDay || lastEntryTermDay.timestamp.getDate() !== today.getDate()) {\n\t\t\t\tTermDay.insert({\n\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\tvocabularyId: vocabulary[Math.floor(Math.random() * vocabulary.length)]._id\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tremoved: function(obj) {\n\t\t\tlet today = new Date();\n\t\t\t//log offline\n\t\t\tlet latestEntry = Data.Status.findOne({\n\t\t\t\tuserId: obj._id\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\tlimit: 1\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (latestEntry) {\n\t\t\t\tif (latestEntry.status !== 'offline') {\n\t\t\t\t\t//set exit and entry points if user stays online over midnight\n\t\t\t\t\t// if (latestEntry.timestamp.getDate() < today.getDate()) {\n\t\t\t\t\t// \tlet year = latestEntry.timestamp.getFullYear();\n\t\t\t\t\t// \tlet month = latestEntry.timestamp.getMonth();\n\t\t\t\t\t// \tlet lastDay = latestEntry.timestamp.getDate();\n\t\t\t\t\t// \tlet todayDay = today.getDate();\n\t\t\t\t\t// \tlet beforeMidnight = new Date(year, month, lastDay, 23, 59, 59, 999);\n\t\t\t\t\t// \tlet afterMidnight = new Date(year, month, todayDay, 0, 0, 0, 1);\n\t\t\t\t\t//\n\t\t\t\t\t// \t// set offline before midnight\n\t\t\t\t\t// \tData.Status.insert({\n\t\t\t\t\t// \t\tuserId: obj._id,\n\t\t\t\t\t// \t\tstatus: \"offline\",\n\t\t\t\t\t// \t\ttimestamp: beforeMidnight\n\t\t\t\t\t// \t});\n\t\t\t\t\t// \tconsole.log(beforeMidnight);\n\t\t\t\t\t// \tconsole.log(obj._id + ' set offline');\n\t\t\t\t\t//\n\t\t\t\t\t// \t// set online after midnight\n\t\t\t\t\t// \tData.Status.insert({\n\t\t\t\t\t// \t\tuserId: obj._id,\n\t\t\t\t\t// \t\tstatus: \"online\",\n\t\t\t\t\t// \t\ttimestamp: afterMidnight\n\t\t\t\t\t// \t});\n\t\t\t\t\t// \tconsole.log(afterMidnight);\n\t\t\t\t\t// \tconsole.log(obj._id + ' set online');\n\t\t\t\t\t// }\n\n\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\tstatus: \"offline\",\n\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(obj._id + ' set offline');\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t});\n});\n","Meteor.startup(function() {\n\n\t// if (Vocabulary.find().count() === 0) {\n\t// \tfor (let i = 0; i < 10; i++) {\n\t// \t\tVocabulary.insert({\n\t// \t\t\tterm: Fake.word(),\n\t// \t\t\tdescription: Fake.sentence([24])\n\t// \t\t});\n\t// \t}\n\t// };\n});\n","(function(exports) {\n\t/**\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n */\nexports.shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n};\nexports.getRandomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n})(this.Aux = {});\n","(function(exports) {\n\n\texports.detail = (clickArea) => {\n\t\t// log\n\t\tlet modes = [NAV_MODE_READ, NAV_MODE_TERM, NAV_MODE_DEF, NAV_MODE_ENTER];\n\t\tlet currentRoute = FlowRouter.current().route.name;\n\n\t\tlet deviceType = Darwin.device.type;\n\t\tlet devicePlatform = Darwin.device.platform;\n\t\tlet route = FlowRouter.current().route.name;\n\t\tlet area = clickArea;\n\t\tlet attention = Session.get(ATTENTION_MODE);\n\t\tlet mode = 'null';\n\t\tif (currentRoute !== 'register') {\n\t\t\tmodes.forEach(entry => {\n\t\t\t\tif (Session.get(entry)) {\n\t\t\t\t\tmode = entry;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tMeteor.call('dataDetail', deviceType, devicePlatform, route, area, mode, attention);\n\t};\n})(this.Log = {});\n","/* Inspired by Lee Byron's test data generator. */\n(function(exports) {\n\texports.stream_layers = (n, m, o) => {\n    if (arguments.length < 3) o = 0;\n    function bump(a) {\n      var x = 1 / (.1 + Math.random()),\n          y = 2 * Math.random() - .5,\n          z = 10 / (.1 + Math.random());\n      for (var i = 0; i < m; i++) {\n        var w = (i / m - y) * z;\n        a[i] += x * Math.exp(-w * w);\n      }\n    }\n    return d3.range(n).map(function() {\n        var a = [], i;\n        for (i = 0; i < m; i++) a[i] = o + o * Math.random();\n        for (i = 0; i < 5; i++) bump(a);\n        return a.map(exports.stream_index);\n      });\n  };\n\texports.stream_waves = (n, m) => {\n    return d3.range(n).map(function(i) {\n      return d3.range(m).map(function(j) {\n          var x = 20 * j / m - i / 3;\n          return 2 * x * Math.exp(-.5 * x);\n        }).map(exports.stream_index);\n      });\n  };\n  exports.stream_index = (d, i) => {\n    return {x: i, y: Math.max(0, d)};\n  };\n\n})(this.NVD3 = {});\n","(function(exports) {\n\texports.isAlphabetic = value => {\n\t\tconst filter = /^[a-zA-Z]+$/;\n\t\tif (filter.test(value)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\texports.isLength64 = value => {\n\t\tif (value.length < 65) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n})(this.Validate = {})\n","Data = {};\nData.Detail = new Mongo.Collection('dataDetail', {});\nData.Words = new Mongo.Collection('dataWords', {});\nData.Survey = new Mongo.Collection('dataSurvey', {});\nData.Feedback = new Mongo.Collection('dataFeedback', {});\nData.Status = new Mongo.Collection('dataStatus', {});\n\nData.Survey.allow({\n  insert: function () {\n    return true;\n  }\n});\nData.Feedback.allow({\n  insert: function () {\n    return true;\n  }\n});\n\nData.Status.Schema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String\n\t},\n\ttimestamp: {\n\t\ttype: Date,\n\t\tautoValue: function() {\n\t\t\treturn new Date();\n\t\t}\n\t},\n\tstatus: {\n\t\ttype: String,\n\t\tallowedValues: ['online', 'offline']\n\t}\n});\n\nData.Feedback.Schema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn this.userId;\n\t\t}\n\t},\n\tuserMail: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn Meteor.user().emails[0].address;\n\t\t}\n\t},\n\tmessage: {\n\t    type: String,\n\t\t\tlabel: 'Nachricht',\n\t\t\tmax: 1000,\n\t    autoform: {\n\t      afFieldInput: {\n\t        type: \"textarea\"\n\t      }\n\t    }\n\t  },\n\tcreatedAt: {\n\t\ttype: Date,\n\t\tautoValue: function() {\n\t\t\treturn new Date();\n\t\t}\n\t}\n});\n\nData.Detail.Schema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn this.userId;\n\t\t}\n\t},\n\tuserMail: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn Meteor.user().emails[0].address;\n\t\t}\n\t},\n\ttimestamp: {\n\t\ttype: Date,\n\t\tautoValue: function() {\n\t\t\treturn new Date();\n\t\t}\n\t},\n\tdeviceType: {\n\t\ttype: String\n\t},\n\tdevicePlatform: {\n\t\ttype: String\n\t},\n\troute: {\n\t\ttype: String\n\t},\n\tclickArea: {\n\t\ttype: String,\n\t\tallowedValues: ['bar', 'mode', 'source', 'favDel', 'browse', 'reveal']\n\t},\n\tmode: {\n\t\ttype: String,\n\t\tallowedValues: ['lesen', 'wort', 'definition', 'eingabe', 'null']\n\t},\n\tattention: {\n\t\ttype: Boolean\n\t}\n});\n\nData.Words.Schema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn this.userId;\n\t\t}\n\t},\n\tvocabularyId: {\n\t\ttype: String\n\t},\n\tvocabularyName: {\n\t\ttype: String\n\t},\n\tviewed: {\n\t\ttype: Number\n\t},\n\tcreatedAt: {\n\t\ttype: Date,\n\t\tautoValue: function() {\n\t\t\treturn new Date();\n\t\t}\n\t}\n});\n\nData.Survey.Schema = new SimpleSchema({\n\t// GENERAL\n\tuserId: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn this.userId;\n\t\t},\n\t\tautoform: {\n      type: \"hidden\",\n      label: false\n    }\n\t},\n\tage: {\n\t\ttype: Number,\n\t\tlabel: 'Dein Alter',\n\t\tmin: 18,\n\t\tmax: 99\n\t }\n\t,\n\tpreviousExperience: {\n\t\ttype: String,\n\t\tlabel: 'Wie steht es um deine Vorerfahrung mit digitalen Vokabeltrainern?',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"gar keine\",\n\t\t\t\t\tvalue: \"keine\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"mal probiert\",\n\t\t\t\t\tvalue: \"probiert\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"nutze ich regelmaessig\",\n\t\t\t\t\tvalue: \"regelmaessig\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tlearningCurve: {\n\t\ttype: String,\n\t\tlabel: 'Wie ist dir die Einarbeitung in die App gefallen?',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Leicht\",\n\t\t\t\t\tvalue: \"leicht\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Mittel\",\n\t\t\t\t\tvalue: \"mittel\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Schwer\",\n\t\t\t\t\tvalue: \"schwer\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\teverydayUse: {\n\t\ttype: String,\n\t\tlabel: 'Konntest du den Gebrauch der App muehelos in deinen Alltag integrieren?',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Ja\",\n\t\t\t\t\tvalue: \"ja\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Nein\",\n\t\t\t\t\tvalue: \"nein\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\teverydayUseText: {\n\t\ttype: String,\n\t\tmax: 1000,\n\t\tlabel: 'Weshalb?',\n\t\tautoform: {\n\t\t\tafFieldInput: {\n\t\t\t\ttype: \"textarea\"\n\t\t\t}\n\t\t}\n\t},\n\tusability: {\n\t\ttype: String,\n\t\tlabel: 'Wie kommst du mit der Bedienung der App zurecht?',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"gar nicht\",\n\t\t\t\t\tvalue: \"nicht\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"ok\",\n\t\t\t\t\tvalue: \"ok\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"super\",\n\t\t\t\t\tvalue: \"super\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tusabilityText: {\n\t\ttype: String,\n\t\tmax: 1000,\n\t\tlabel: 'Teile deine Ideen zur Bedienung (optional)',\n\t\toptional: true,\n\t\tautoform: {\n\t\t\tafFieldInput: {\n\t\t\t\ttype: \"textarea\"\n\t\t\t}\n\t\t}\n\t},\n\t// NUTZUNGSVERHALTEN\n\tdeviceMobile: {\n\t\ttype: String,\n\t\tlabel: 'Mobile:',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Ja\",\n\t\t\t\t\tvalue: \"ja\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Nein\",\n\t\t\t\t\tvalue: \"nein\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tdeviceTablet: {\n\t\ttype: String,\n\t\tlabel: 'Tablet:',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Ja\",\n\t\t\t\t\tvalue: \"ja\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Nein\",\n\t\t\t\t\tvalue: \"nein\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tdeviceDesktop: {\n\t\ttype: String,\n\t\tlabel: 'Desktop:',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Ja\",\n\t\t\t\t\tvalue: \"ja\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Nein\",\n\t\t\t\t\tvalue: \"nein\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tdeviceBehavior: {\n\t\ttype: String,\n\t\tmax: 1000,\n\t\tlabel: 'Falls du mehrere Endgeraete benutzt hast um die App aufzurufen: Inwiefern hat sich dein Nutzungsverhalten unterschieden?',\n\t\toptional: false,\n\t\tautoform: {\n\t\t\tafFieldInput: {\n\t\t\t\ttype: \"textarea\"\n\t\t\t}\n\t\t}\n\t},\n\tfavouriteMode: {\n\t\ttype: String,\n\t\tlabel: 'Welchen Trainermodus hast du am liebsten genutzt?',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Lesen\",\n\t\t\t\t\tvalue: \"lesen\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Wort\",\n\t\t\t\t\tvalue: \"wort\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Definition\",\n\t\t\t\t\tvalue: \"definition\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Texteingabe\",\n\t\t\t\t\tvalue: \"eingabe\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Register\",\n\t\t\t\t\tvalue: \"register\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tfavouriteModeText: {\n\t\ttype: String,\n\t\tmax: 1000,\n\t\tlabel: 'Weshalb?',\n\t\toptional: false,\n\t\tautoform: {\n\t\t\tafFieldInput: {\n\t\t\t\ttype: \"textarea\"\n\t\t\t}\n\t\t}\n\t},\n\tattentionBenefit: {\n\t\ttype: String,\n\t\tlabel: 'Hat dir die Moeglichkeit, das UI kontextorientiert zu veraendern, gefallen?',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Ja\",\n\t\t\t\t\tvalue: \"ja\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Nein\",\n\t\t\t\t\tvalue: \"nein\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tattentionBehavior: {\n\t\ttype: String,\n\t\tlabel: 'Hat die Moeglichkeit, das UI kontextorientiert zu veraendern, dein Nutzungsverhalten beeinflusst?',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Ja\",\n\t\t\t\t\tvalue: \"ja\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Nein\",\n\t\t\t\t\tvalue: \"nein\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tattentionBehaviorText: {\n\t\ttype: String,\n\t\tmax: 1000,\n\t\tlabel: 'Weshalb?',\n\t\tautoform: {\n\t\t\tafFieldInput: {\n\t\t\t\ttype: \"textarea\"\n\t\t\t}\n\t\t}\n\t},\n\tattentionSituation: {\n\t\ttype: String,\n\t\tlabel: 'Wann, wo und in welcher Situation hast du beschlossen, das UI zu wechseln? (Beispiel)',\n\t\toptional: false,\n\t\tautoform: {\n\t\t\tafFieldInput: {\n\t\t\t\ttype: \"textarea\"\n\t\t\t}\n\t\t}\n\t},\n\tattentionUse: {\n\t\ttype: String,\n\t\tlabel: 'Siehst du generell einen Vorteil in der Moeglichkeit das UI kontextorientiert anzupassen?',\n\t\tautoform: {\n\t\t\ttype: \"select-radio-inline\",\n\t\t\toptions: function() {\n\t\t\t\treturn [{\n\t\t\t\t\tlabel: \"Ja\",\n\t\t\t\t\tvalue: \"ja\"\n\t\t\t\t}, {\n\t\t\t\t\tlabel: \"Nein\",\n\t\t\t\t\tvalue: \"nein\"\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\t},\n\tattentionUseText: {\n\t\ttype: String,\n\t\tmax: 1000,\n\t\tlabel: 'Weshalb?',\n\t\toptional: false,\n\t\tautoform: {\n\t\t\tafFieldInput: {\n\t\t\t\ttype: \"textarea\"\n\t\t\t}\n\t\t}\n\t},\n\tprospects: {\n\t\t\ttype: String,\n\t\t\tmax: 1000,\n\t\t\tlabel: 'Welche alternativen Anwendungsgebiete fuer ein kontextsensitives UI kannst du dir vorstellen?',\n\t\t\toptional: false,\n\t\t\tautoform: {\n\t\t\t\tafFieldInput: {\n\t\t\t\t\ttype: \"textarea\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n});\n\n\nData.Detail.attachSchema(Data.Detail.Schema);\nData.Words.attachSchema(Data.Words.Schema);\nData.Survey.attachSchema(Data.Survey.Schema);\nData.Feedback.attachSchema(Data.Feedback.Schema);\nData.Status.attachSchema(Data.Status.Schema);\n","let FavouritesSchema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn this.userId;\n\t\t}\n\t},\n\tvocabularyId: {\n\t\ttype: String\n\t},\n  createdAt: {\n    type: Date,\n    autoValue: function() {\n      return new Date();\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\nFavourites = new Mongo.Collection('favourites', {});\nFavourites.attachSchema(FavouritesSchema);\n","SimpleSchema.messages({\n  required: \"[label] wird benoetigt.\",\n  minString: \"[label] muss mindestens [min] Zeichen enthalten.\",\n  maxString: \"[label] darf nicht mehr als [max] Zeichen enthalten.\",\n  minNumber: \"[label] muss mindestens [min] sein.\",\n  maxNumber: \"[label] darf nicht hoeher als [max] sein.\",\n  minDate: \"[label] must be on or after [min]\",\n  maxDate: \"[label] cannot be after [max]\",\n  badDate: \"[label] is not a valid date\",\n  minCount: \"You must specify at least [minCount] values\",\n  maxCount: \"You cannot specify more than [maxCount] values\",\n  noDecimal: \"[label] muss eine gerade Zahl sein.\",\n  notAllowed: \"[value] kein zulaessiger Wert.\",\n  expectedString: \"[label] muss eine Zeichenkette sein.\",\n  expectedNumber: \"[label] muss eine Zahl sein.\",\n  expectedBoolean: \"[label] muss ein Bool-Wert sein.\",\n  expectedArray: \"[label] muss ein Array sein.\",\n  expectedObject: \"[label] muss ein Object sein.\",\n  expectedConstructor: \"[label] muss vom Typ [type] sein.\",\n  regEx: [\n    {msg: \"[label] failed regular expression validation\"},\n    {exp: SimpleSchema.RegEx.Email, msg: \"[label] must be a valid e-mail address\"},\n    {exp: SimpleSchema.RegEx.WeakEmail, msg: \"[label] must be a valid e-mail address\"},\n    {exp: SimpleSchema.RegEx.Domain, msg: \"[label] must be a valid domain\"},\n    {exp: SimpleSchema.RegEx.WeakDomain, msg: \"[label] must be a valid domain\"},\n    {exp: SimpleSchema.RegEx.IP, msg: \"[label] must be a valid IPv4 or IPv6 address\"},\n    {exp: SimpleSchema.RegEx.IPv4, msg: \"[label] must be a valid IPv4 address\"},\n    {exp: SimpleSchema.RegEx.IPv6, msg: \"[label] must be a valid IPv6 address\"},\n    {exp: SimpleSchema.RegEx.Url, msg: \"[label] must be a valid URL\"},\n    {exp: SimpleSchema.RegEx.Id, msg: \"[label] must be a valid alphanumeric ID\"}\n  ],\n  keyNotInSchema: \"[key] ist nicht im Schema erlaubt.\"\n});\n","UserExt = new Mongo.Collection('userExt', {});\n\nUserExt.Schema = new SimpleSchema ({\n\tuserId: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn this.userId;\n\t\t}\n\t},\n\tuserMail: {\n\t\ttype: String,\n\t\tautoValue: function() {\n\t\t\treturn Meteor.user().emails[0].address;\n\t\t}\n\t},\n\tsurveySubmitted: {\n\t\ttype: Boolean,\n\t\tdefaultValue: false\n\t}\n\t// TODO last visited URL - save on logout\n});\n\nUserExt.attachSchema(UserExt.Schema);\n","Vocabulary = new Mongo.Collection('vocabulary', {});\nTermDay = new Mongo.Collection('termDay', {});\n\nif (Meteor.isServer) {\n\tVocabulary._ensureIndex({\n\t\tterm: 1,\n\t\tdescription: 1\n\t});\n}\n\nVocabulary.allow({\n\tinsert: () => false,\n\tupdate: () => false,\n\tremove: () => false\n});\n\nVocabulary.deny({\n\tinsert: () => true,\n\tupdate: () => true,\n\tremove: () => true\n});\n\nlet VocabularySchema = new SimpleSchema({\n\tterm: {\n\t\ttype: String,\n\t\tregEx: /^[a-zA-Z]+$/\n\t},\n\tpreposition: {\n\t\ttype: String,\n\t\tallowedValues: ['der', 'die', 'das'],\n\t\toptional: true\n\t},\n\twordClass: {\n\t\ttype: String,\n\t\tallowedValues: ['Nomen', 'Verb', 'Adjektiv']\n\t},\n\tdefinition: {\n\t\ttype: [String]\n\t}\n});\n\nlet TermDaySchema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String\n\t},\n\tvocabularyId: {\n\t\ttype: String\n\t},\n\ttimestamp: {\n\t\ttype: Date,\n\t\tautoValue: function() {\n\t\t\treturn new Date();\n\t\t}\n\t}\n});\n\nVocabulary.attachSchema(VocabularySchema);\nTermDay.attachSchema(TermDaySchema);\n","T9n.setLanguage('de');\n","AdminConfig = {\n\tname: 'Chalimo',\n\tadminEmails: ['bla@bla.org'],\n\tcollections: {\n\t\tVocabulary: {\n\t\t\ttableColumns: [{\n\t\t\t\tlabel: 'Wort',\n\t\t\t\tname: 'term'\n\t\t\t}, {\n\t\t\t\tlabel: 'Wortklasse',\n\t\t\t\tname: 'wordClass'\n\t\t\t}]\n\t\t}\n\t}\n};\n","// Options\nAccountsTemplates.configure({\n  defaultLayout: 'layout',\n  defaultLayoutRegions: {\n    footer: 'footer'\n  },\n  defaultContentRegion: 'main',\n  showForgotPasswordLink: false,\n  overrideLoginErrors: true,\n  enablePasswordChange: true,\n\n  // sendVerificationEmail: true,\n  // enforceEmailVerification: true,\n  //confirmPassword: true,\n  //continuousValidation: false,\n  //displayFormLabels: true,\n  //forbidClientAccountCreation: true,\n  //formValidationFeedback: true,\n  // homeRoutePath: '/',\n  // showAddRemoveServices: false,\n  //showPlaceholders: true,\n\n  negativeValidation: true,\n  positiveValidation: true,\n  negativeFeedback: false,\n  positiveFeedback: true,\n\n  // Privacy Policy and Terms of Use\n  //privacyUrl: 'privacy',\n  //termsUrl: 'terms-of-use',\n});\n\nvar logout = function(){\n    //example redirect after logout\n    FlowRouter.go('/sign-in');\n};\n\nAccountsTemplates.configure({\n    onLogoutHook: logout\n});\n","// *** ROUTE FUNCTIONS\n\ncheckAttentionModeOff = () => {\n\tif (Session.get(ATTENTION_MODE)) {\n\t\tSession.set(ATTENTION_MODE, false)\n\t}\n};\n\ncheckAttentionModeOn = () => {\n\tif (!Session.get(ATTENTION_MODE)) {\n\t\tSession.set(ATTENTION_MODE, true)\n\t}\n};\n\nresetSession = () => {\n\tSession.set(REVEALED, false);\n\tSession.set(TERM_WRONG, false);\n};\n\ncheckAdmin\t= () => {\n\tif (! Roles.userIsInRole(Meteor.userId(), 'admin')) {\n\t\t// FlowRouter.redirect('/notFound');\n\t}\n};\n\ncheckSurveySubmitted = () => {\n\tlet query = UserExt.findOne({userId: Meteor.userId(), surveySubmitted: true});\n\tif (query) {\n\t\tFlowRouter.redirect('/');\n\t}\n};\n\nFlowRouter.triggers.enter([AccountsTemplates.ensureSignedIn]);\n\n// *** ROUTE GROUPS\n\nlet lowRoutes = FlowRouter.group({\n\tname: \"low\",\n\ttriggersEnter: [checkAttentionModeOn],\n\ttriggersExit: []\n});\nlet highRoutes = FlowRouter.group({\n\tname: \"high\",\n\ttriggersEnter: [checkAttentionModeOff],\n\ttriggersExit: []\n});\n\n// *** ROUTES\n\n\n\nhighRoutes.route('/', {\n\tname: \"index\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"index\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t}\n});\nhighRoutes.route('/faq', {\n\tname: \"faq\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"faq\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t}\n});\n\nhighRoutes.route('/trainer', {\n\tname: \"trainer\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"trainer\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t}\n});\n\nhighRoutes.route('/register/:id', {\n\tname: \"vokabelDetail\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"vokabelDetail\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t}\n});\nhighRoutes.route('/register', {\n\tname: \"register\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"register\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t}\n});\nhighRoutes.route('/verwaltung', {\n\tname: \"verwaltung\",\n\taction: function(params, queryParams) {\n\t\tFlowRouter.redirect('/verwaltung/feedback');\n\t},\n\ttriggersEnter: [checkAdmin]\n});\nhighRoutes.route('/verwaltung/statistik', {\n\tname: \"statistik\",\n\taction: function(params, queryParams) {\n\t\tFlowRouter.redirect('/verwaltung/statistik/total');\n\t},\n\ttriggersEnter: [checkAdmin]\n});\nhighRoutes.route('/verwaltung/statistik/device', {\n\tname: \"device\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tnavOverview: \"navOverview\",\n\t\t\tnavStatistics: \"navStatistics\",\n\t\t\tmain: \"device\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t},\n\ttriggersEnter: [checkAdmin]\n});\nhighRoutes.route('/verwaltung/statistik/mode', {\n\tname: \"mode\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tnavOverview: \"navOverview\",\n\t\t\tnavStatistics: \"navStatistics\",\n\t\t\tmain: \"mode\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t},\n\ttriggersEnter: [checkAdmin]\n});\nhighRoutes.route('/verwaltung/statistik/status', {\n\tname: \"status\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tnavOverview: \"navOverview\",\n\t\t\tnavStatistics: \"navStatistics\",\n\t\t\tmain: \"status\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t},\n\ttriggersEnter: [checkAdmin]\n});\nhighRoutes.route('/verwaltung/statistik/total', {\n\tname: \"total\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tnavOverview: \"navOverview\",\n\t\t\tnavStatistics: \"navStatistics\",\n\t\t\tmain: \"total\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t},\n\ttriggersEnter: [checkAdmin]\n});\n\nhighRoutes.route('/verwaltung/feedback', {\n\tname: \"feedback\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tnavOverview: \"navOverview\",\n\t\t\tmain: \"feedback\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t},\n\ttriggersEnter: [checkAdmin]\n});\nhighRoutes.route('/fragebogen', {\n\tname: \"fragebogen\",\n\ttriggersEnter:[checkSurveySubmitted],\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tnav: \"nav\",\n\t\t\tmain: \"fragebogen\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t},\n\ttriggersEnter: []\n});\n\nlowRoutes.route('/low', {\n\tname: \"low\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tbar: \"bar\",\n\t\t\tmain: \"low\",\n\t\t\tnavSource: \"navLow\"\n\t\t});\n\t},\n\ttriggersEnter: []\n});\n\nFlowRouter.notFound = {\n\tname: \"notFound\",\n\taction: function(params, queryParams) {\n\t\tBlazeLayout.render('layout', {\n\t\t\tfooter: \"footer\",\n\t\t\tmain: \"pageNotFound\",\n\t\t\tfooter:\"footer\"\n\t\t});\n\t}\n};\n\n\n//Routes\nAccountsTemplates.configureRoute('changePwd');\n// AccountsTemplates.configureRoute('forgotPwd');\nAccountsTemplates.configureRoute('resetPwd');\nAccountsTemplates.configureRoute('signIn');\nAccountsTemplates.configureRoute('signUp');\n// AccountsTemplates.configureRoute('verifyEmail');\n"]}}]