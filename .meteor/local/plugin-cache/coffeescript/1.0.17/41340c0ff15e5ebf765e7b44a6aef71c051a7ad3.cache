{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar adminCollections;\n\nTemplate.registerHelper('AdminTables', AdminTables);\n\nadminCollections = function() {\n  var collections;\n  collections = {};\n  if (typeof AdminConfig !== 'undefined' && typeof AdminConfig.collections === 'object') {\n    collections = AdminConfig.collections;\n  }\n  collections.Users = {\n    collectionObject: Meteor.users,\n    icon: 'user',\n    label: 'Users'\n  };\n  return _.map(collections, function(obj, key) {\n    obj = _.extend(obj, {\n      name: key\n    });\n    obj = _.defaults(obj, {\n      label: key,\n      icon: 'plus',\n      color: 'blue'\n    });\n    return obj = _.extend(obj, {\n      viewPath: FlowRouter.path(\"/admin/view/:coll\", {\n        coll: key\n      }),\n      newPath: FlowRouter.path(\"/admin/new/:coll\", {\n        coll: key\n      })\n    });\n  });\n};\n\nTemplate.registerHelper('AdminConfig', function() {\n  if (typeof AdminConfig !== 'undefined') {\n    return AdminConfig;\n  }\n});\n\nTemplate.registerHelper('admin_skin', function() {\n  return (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.skin : void 0) || 'black-light';\n});\n\nTemplate.registerHelper('admin_collections', adminCollections);\n\nTemplate.registerHelper('admin_collection_name', function() {\n  return Session.get('admin_collection_name');\n});\n\nTemplate.registerHelper('admin_current_id', function() {\n  return Session.get('admin_id');\n});\n\nTemplate.registerHelper('admin_current_doc', function() {\n  return Session.get('admin_doc');\n});\n\nTemplate.registerHelper('admin_is_users_collection', function() {\n  return Session.get('admin_collection_name') === 'Users';\n});\n\nTemplate.registerHelper('admin_sidebar_items', function() {\n  return AdminDashboard.sidebarItems;\n});\n\nTemplate.registerHelper('admin_collection_items', function() {\n  var items;\n  items = [];\n  _.each(AdminDashboard.collectionItems, (function(_this) {\n    return function(fn) {\n      var item;\n      item = fn(_this.name, '/admin/' + _this.name);\n      if ((item != null ? item.title : void 0) && (item != null ? item.url : void 0)) {\n        return items.push(item);\n      }\n    };\n  })(this));\n  return items;\n});\n\nTemplate.registerHelper('admin_omit_fields', function() {\n  var collection, global;\n  if (typeof AdminConfig.autoForm !== 'undefined' && typeof AdminConfig.autoForm.omitFields === 'object') {\n    global = AdminConfig.autoForm.omitFields;\n  }\n  if (!Session.equals('admin_collection_name', 'Users') && typeof AdminConfig !== 'undefined' && typeof AdminConfig.collections[Session.get('admin_collection_name')].omitFields === 'object') {\n    collection = AdminConfig.collections[Session.get('admin_collection_name')].omitFields;\n  }\n  if (typeof global === 'object' && typeof collection === 'object') {\n    return _.union(global, collection);\n  } else if (typeof global === 'object') {\n    return global;\n  } else if (typeof collection === 'object') {\n    return collection;\n  }\n});\n\nTemplate.registerHelper('AdminSchemas', function() {\n  return AdminDashboard.schemas;\n});\n\nTemplate.registerHelper('adminGetUsers', function() {\n  return Meteor.users;\n});\n\nTemplate.registerHelper('adminGetUserSchema', function() {\n  var schema;\n  if (_.has(AdminConfig, 'userSchema')) {\n    schema = AdminConfig.userSchema;\n  } else if (typeof Meteor.users._c2 === 'object') {\n    schema = Meteor.users.simpleSchema();\n  }\n  return schema;\n});\n\nTemplate.registerHelper('adminCollectionLabel', function(collection) {\n  if (collection != null) {\n    return AdminDashboard.collectionLabel(collection);\n  }\n});\n\nTemplate.registerHelper('adminCollectionCount', function(collection) {\n  var ref;\n  if (collection === 'Users') {\n    return Meteor.users.find().count();\n  } else {\n    return (ref = AdminCollectionsCount.findOne({\n      collection: collection\n    })) != null ? ref.count : void 0;\n  }\n});\n\nTemplate.registerHelper('adminTemplate', function(collection, mode) {\n  var ref, ref1;\n  if ((collection != null ? collection.toLowerCase() : void 0) !== 'users' && typeof (typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? (ref = AdminConfig.collections) != null ? (ref1 = ref[collection]) != null ? ref1.templates : void 0 : void 0 : void 0) !== 'undefined') {\n    return AdminConfig.collections[collection].templates[mode];\n  }\n});\n\nTemplate.registerHelper('adminGetCollection', function(collection) {\n  return _.find(adminCollections(), function(item) {\n    return item.name === collection;\n  });\n});\n\nTemplate.registerHelper('adminWidgets', function() {\n  if (typeof AdminConfig.dashboard !== 'undefined' && typeof AdminConfig.dashboard.widgets !== 'undefined') {\n    return AdminConfig.dashboard.widgets;\n  }\n});\n\nTemplate.registerHelper('adminViewPath', function(collection) {\n  return FlowRouter.path(\"/admin/view/:coll\", {\n    coll: collection\n  });\n});\n\nTemplate.registerHelper('adminNewPath', function(collection) {\n  return FlowRouter.path(\"/admin/new/:coll\", {\n    coll: collection\n  });\n});\n\nTemplate.registerHelper('AdminDashboardPath', function() {\n  return FlowRouter.path('AdminDashboard');\n});\n\nTemplate.registerHelper('isSubReady', function(sub) {\n  if (sub) {\n    return FlowRouter.subsReady(sub);\n  } else {\n    return FlowRouter.subsReady();\n  }\n});\n","sourceMap":{"version":3,"file":"/lib/client/js/helpers.coffee.js","sourceRoot":"","sources":["/packages/sach_flow-db-admin/lib/client/js/helpers.coffee"],"names":[],"mappings":"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","sourcesContent":["Template.registerHelper('AdminTables', AdminTables);\n\nadminCollections = ->\n\tcollections = {}\n\n\tif typeof AdminConfig != 'undefined'  and typeof AdminConfig.collections == 'object'\n\t\tcollections = AdminConfig.collections\n\n\tcollections.Users =\n\t\tcollectionObject: Meteor.users\n\t\ticon: 'user'\n\t\tlabel: 'Users'\n\n\t_.map collections, (obj, key) ->\n\t\tobj = _.extend obj, {name: key}\n\t\tobj = _.defaults obj, {label: key, icon: 'plus', color: 'blue'}\n\t\tobj = _.extend obj,\n\t\t\tviewPath: FlowRouter.path \"/admin/view/:coll\",{coll: key}\n\t\t\tnewPath: FlowRouter.path \"/admin/new/:coll\",{coll: key}\n\nTemplate.registerHelper 'AdminConfig', ->\n\tAdminConfig if typeof AdminConfig != 'undefined'\n\nTemplate.registerHelper 'admin_skin', ->\n\tAdminConfig?.skin or 'black-light'\n\nTemplate.registerHelper 'admin_collections', adminCollections\n\nTemplate.registerHelper 'admin_collection_name', ->\n\tSession.get 'admin_collection_name'\n\nTemplate.registerHelper 'admin_current_id', ->\n\tSession.get 'admin_id'\n\nTemplate.registerHelper 'admin_current_doc', ->\n\tSession.get 'admin_doc'\n\nTemplate.registerHelper 'admin_is_users_collection', ->\n\tSession.get('admin_collection_name') == 'Users'\n\nTemplate.registerHelper 'admin_sidebar_items', ->\n\tAdminDashboard.sidebarItems\n\nTemplate.registerHelper 'admin_collection_items', ->\n\titems = []\n\t_.each AdminDashboard.collectionItems, (fn) =>\n\t\titem = fn @name, '/admin/' + @name\n\t\tif item?.title and item?.url\n\t\t\titems.push item\n\titems\n\nTemplate.registerHelper 'admin_omit_fields', ->\n\tif typeof AdminConfig.autoForm != 'undefined' and typeof AdminConfig.autoForm.omitFields == 'object'\n\t\tglobal = AdminConfig.autoForm.omitFields\n\tif not Session.equals('admin_collection_name','Users') and typeof AdminConfig != 'undefined' and typeof AdminConfig.collections[Session.get 'admin_collection_name'].omitFields == 'object'\n\t\tcollection = AdminConfig.collections[Session.get 'admin_collection_name'].omitFields\n\tif typeof global == 'object' and typeof collection == 'object'\n\t\t_.union global, collection\n\telse if typeof global == 'object'\n\t\tglobal\n\telse if typeof collection == 'object'\n\t\tcollection\n\nTemplate.registerHelper 'AdminSchemas', ->\n\tAdminDashboard.schemas\n\n# Template.registerHelper 'adminIsUserInRole', (_id,role)->\n# \tRoles.userIsInRole _id, role\n\nTemplate.registerHelper 'adminGetUsers', ->\n\tMeteor.users\n\nTemplate.registerHelper 'adminGetUserSchema', ->\n\tif _.has(AdminConfig, 'userSchema')\n\t\tschema = AdminConfig.userSchema\n\telse if typeof Meteor.users._c2 == 'object'\n\t\tschema = Meteor.users.simpleSchema()\n\n\treturn schema\n\nTemplate.registerHelper 'adminCollectionLabel', (collection)->\n\tAdminDashboard.collectionLabel(collection) if collection?\n\nTemplate.registerHelper 'adminCollectionCount', (collection)->\n\tif collection == 'Users'\n\t\tMeteor.users.find().count()\n\telse\n\t\tAdminCollectionsCount.findOne({collection: collection})?.count\n\nTemplate.registerHelper 'adminTemplate', (collection, mode)->\n\tif collection?.toLowerCase() != 'users' && typeof AdminConfig?.collections?[collection]?.templates != 'undefined'\n\t\tAdminConfig.collections[collection].templates[mode]\n\nTemplate.registerHelper 'adminGetCollection', (collection)->\n\t_.find adminCollections(), (item) -> item.name == collection\n\nTemplate.registerHelper 'adminWidgets', ->\n\tif typeof AdminConfig.dashboard != 'undefined' and typeof AdminConfig.dashboard.widgets != 'undefined'\n\t\tAdminConfig.dashboard.widgets\n\n# Template.registerHelper 'adminUserEmail', (user) ->\n# \tif user && user.emails && user.emails[0] && user.emails[0].address\n# \t\tuser.emails[0].address\n# \telse if user && user.services && user.services.facebook && user.services.facebook.email\n# \t\tuser.services.facebook.email\n# \telse if user && user.services && user.services.google && user.services.google.email\n# \t\tuser.services.google.email\n\nTemplate.registerHelper 'adminViewPath', (collection)->\n\t\tFlowRouter.path \"/admin/view/:coll\",{coll: collection}\n\nTemplate.registerHelper 'adminNewPath', (collection)->\n\t\tFlowRouter.path \"/admin/new/:coll\",{coll: collection}\n\nTemplate.registerHelper 'AdminDashboardPath', ->\n\tFlowRouter.path 'AdminDashboard'\n\nTemplate.registerHelper 'isSubReady', (sub) ->\n  if sub\n    FlowRouter.subsReady sub\n  else\n    FlowRouter.subsReady()\n"]}}