{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar adminCreateTables, adminDelButton, adminEditButton, adminEditDelButtons, adminPublishTables, adminTablePubName, adminTablesDom, defaultColumns;\n\nthis.AdminTables = {};\n\nadminTablesDom = '<\"box\"<\"box-header\"<\"box-toolbar\"<\"pull-left\"<lf>><\"pull-right\"p>>><\"box-body\"t>>';\n\nadminEditButton = {\n  data: '_id',\n  title: 'Edit',\n  createdCell: function(node, cellData, rowData) {\n    return $(node).html(Blaze.toHTMLWithData(Template.adminEditBtn, {\n      _id: cellData\n    }, node));\n  },\n  width: '40px',\n  orderable: false\n};\n\nadminDelButton = {\n  data: '_id',\n  title: 'Delete',\n  createdCell: function(node, cellData, rowData) {\n    return $(node).html(Blaze.toHTMLWithData(Template.adminDeleteBtn, {\n      _id: cellData\n    }, node));\n  },\n  width: '40px',\n  orderable: false\n};\n\nadminEditDelButtons = [adminEditButton, adminDelButton];\n\ndefaultColumns = function() {\n  return [\n    {\n      data: '_id',\n      title: 'ID'\n    }\n  ];\n};\n\nAdminTables.Users = new Tabular.Table({\n  changeSelector: function(selector, userId) {\n    var $or;\n    $or = selector['$or'];\n    $or && (selector['$or'] = _.map($or, function(exp) {\n      var ref;\n      if (((ref = exp.emails) != null ? ref['$regex'] : void 0) != null) {\n        return {\n          emails: {\n            $elemMatch: {\n              address: exp.emails\n            }\n          }\n        };\n      } else {\n        return exp;\n      }\n    }));\n    return selector;\n  },\n  name: 'Users',\n  collection: Meteor.users,\n  columns: _.union([\n    {\n      data: '_id',\n      title: 'Admin',\n      createdCell: function(node, cellData, rowData) {\n        return $(node).html(Blaze.toHTMLWithData(Template.adminUsersIsAdmin, {\n          _id: cellData\n        }, node));\n      },\n      width: '40px'\n    }, {\n      data: 'emails',\n      title: 'Email',\n      render: function(value) {\n        if (value) {\n          return value[0].address;\n        } else {\n          return '';\n        }\n      },\n      searchable: true\n    }, {\n      data: 'emails',\n      title: 'Mail',\n      createdCell: function(node, cellData, rowData) {\n        return $(node).html(Blaze.toHTMLWithData(Template.adminUsersMailBtn, {\n          emails: cellData\n        }, node));\n      },\n      width: '40px'\n    }, {\n      data: 'createdAt',\n      title: 'Joined'\n    }\n  ], adminEditDelButtons),\n  dom: adminTablesDom\n});\n\nadminTablePubName = function(collection) {\n  return \"admin_tabular_\" + collection;\n};\n\nadminCreateTables = function(collections) {\n  return _.each(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0, function(collection, name) {\n    var columns;\n    _.defaults(collection, {\n      showEditColumn: true,\n      showDelColumn: true\n    });\n    columns = _.map(collection.tableColumns, function(column) {\n      var createdCell;\n      if (column.template) {\n        createdCell = function(node, cellData, rowData) {\n          $(node).html('');\n          return Blaze.renderWithData(Template[column.template], {\n            value: cellData,\n            doc: rowData\n          }, node);\n        };\n      }\n      return {\n        data: column.name,\n        title: column.label,\n        createdCell: createdCell\n      };\n    });\n    if (columns.length === 0) {\n      columns = defaultColumns();\n    }\n    if (collection.showEditColumn) {\n      columns.push(adminEditButton);\n    }\n    if (collection.showDelColumn) {\n      columns.push(adminDelButton);\n    }\n    return AdminTables[name] = new Tabular.Table({\n      name: name,\n      collection: adminCollectionObject(name),\n      pub: collection.children && adminTablePubName(name),\n      sub: collection.sub,\n      columns: columns,\n      extraFields: collection.extraFields,\n      dom: adminTablesDom\n    });\n  });\n};\n\nadminPublishTables = function(collections) {\n  return _.each(collections, function(collection, name) {\n    if (!collection.children) {\n      return void 0;\n    }\n    return Meteor.publishComposite(adminTablePubName(name), function(tableName, ids, fields) {\n      var extraFields;\n      check(tableName, String);\n      check(ids, Array);\n      check(fields, Match.Optional(Object));\n      extraFields = _.reduce(collection.extraFields, function(fields, name) {\n        fields[name] = 1;\n        return fields;\n      }, {});\n      _.extend(fields, extraFields);\n      this.unblock();\n      return {\n        find: function() {\n          this.unblock();\n          return adminCollectionObject(name).find({\n            _id: {\n              $in: ids\n            }\n          }, {\n            fields: fields\n          });\n        },\n        children: collection.children\n      };\n    });\n  });\n};\n\nMeteor.startup(function() {\n  adminCreateTables(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n  if (Meteor.isServer) {\n    return adminPublishTables(typeof AdminConfig !== \"undefined\" && AdminConfig !== null ? AdminConfig.collections : void 0);\n  }\n});\n","sourceMap":{"version":3,"file":"/lib/both/startup.coffee.js","sourceRoot":"","sources":["/packages/sach_flow-db-admin/lib/both/startup.coffee"],"names":[],"mappings":"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","sourcesContent":["@AdminTables = {}\n\nadminTablesDom = '<\"box\"<\"box-header\"<\"box-toolbar\"<\"pull-left\"<lf>><\"pull-right\"p>>><\"box-body\"t>>'\n\nadminEditButton = {\n\tdata: '_id'\n\ttitle: 'Edit'\n\tcreatedCell: (node, cellData, rowData) ->\n\t\t$(node).html(Blaze.toHTMLWithData Template.adminEditBtn, {_id: cellData}, node)\n\twidth: '40px'\n\torderable: false\n}\nadminDelButton = {\n\tdata: '_id'\n\ttitle: 'Delete'\n\tcreatedCell: (node, cellData, rowData) ->\n\t $(node).html(Blaze.toHTMLWithData Template.adminDeleteBtn, {_id: cellData}, node)\n\twidth: '40px'\n\torderable: false\n}\n\nadminEditDelButtons = [\n\tadminEditButton,\n\tadminDelButton\n]\n\ndefaultColumns = () -> [\n  data: '_id',\n  title: 'ID'\n]\n\nAdminTables.Users = new Tabular.Table\n\t# Modify selector to allow search by email\n\tchangeSelector: (selector, userId) ->\n\t\t$or = selector['$or']\n\t\t$or and selector['$or'] = _.map $or, (exp) ->\n\t\t\tif exp.emails?['$regex']?\n\t\t\t\temails: $elemMatch: address: exp.emails\n\t\t\telse\n\t\t\t\texp\n\t\tselector\n\n\tname: 'Users'\n\tcollection: Meteor.users\n\tcolumns: _.union [\n\t\t{\n\t\t\tdata: '_id'\n\t\t\ttitle: 'Admin'\n\t\t\t# TODO: use `tmpl`\n\t\t\tcreatedCell: (node, cellData, rowData) ->\n\t\t\t\t$(node).html(Blaze.toHTMLWithData Template.adminUsersIsAdmin, {_id: cellData}, node)\n\t\t\twidth: '40px'\n\t\t}\n\t\t{\n\t\t\tdata: 'emails'\n\t\t\ttitle: 'Email'\n\t\t\trender: (value) ->\n\t\t\t\tif value then value[0].address else ''\n\t\t\tsearchable: true\n\t\t}\n\t\t{\n\t\t\tdata: 'emails'\n\t\t\ttitle: 'Mail'\n\t\t\t# TODO: use `tmpl`\n\t\t\tcreatedCell: (node, cellData, rowData) ->\n\t\t\t\t$(node).html(Blaze.toHTMLWithData Template.adminUsersMailBtn, {emails: cellData}, node)\n\t\t\twidth: '40px'\n\t\t}\n\t\t{ data: 'createdAt', title: 'Joined' }\n\t], adminEditDelButtons\n\tdom: adminTablesDom\n\nadminTablePubName = (collection) ->\n\t\"admin_tabular_#{collection}\"\n\nadminCreateTables = (collections) ->\n\t_.each AdminConfig?.collections, (collection, name) ->\n\t\t_.defaults collection, {\n\t\t\tshowEditColumn: true\n\t\t\tshowDelColumn: true\n\t\t}\n\n\t\tcolumns = _.map collection.tableColumns, (column) ->\n\t\t\tif column.template\n\t\t\t\tcreatedCell = (node, cellData, rowData) ->\n\t\t\t\t\t$(node).html ''\n\t\t\t\t\tBlaze.renderWithData(Template[column.template], {value: cellData, doc: rowData}, node)\n\n\t\t\tdata: column.name\n\t\t\ttitle: column.label\n\t\t\tcreatedCell: createdCell\n\n\t\tif columns.length == 0\n\t\t\tcolumns = defaultColumns()\n\n\t\tif collection.showEditColumn\n\t\t\tcolumns.push(adminEditButton)\n\t\tif collection.showDelColumn\n\t\t\tcolumns.push(adminDelButton)\n\n\t\tAdminTables[name] = new Tabular.Table\n\t\t\tname: name\n\t\t\tcollection: adminCollectionObject(name)\n\t\t\tpub: collection.children and adminTablePubName(name)\n\t\t\tsub: collection.sub\n\t\t\tcolumns: columns\n\t\t\textraFields: collection.extraFields\n\t\t\tdom: adminTablesDom\n\n\nadminPublishTables = (collections) ->\n\t_.each collections, (collection, name) ->\n\t\tif not collection.children then return undefined\n\t\tMeteor.publishComposite adminTablePubName(name), (tableName, ids, fields) ->\n\t\t\tcheck tableName, String\n\t\t\tcheck ids, Array\n\t\t\tcheck fields, Match.Optional Object\n\n\t\t\textraFields = _.reduce collection.extraFields, (fields, name) ->\n\t\t\t\tfields[name] = 1\n\t\t\t\tfields\n\t\t\t, {}\n\t\t\t_.extend fields, extraFields\n\n\t\t\t@unblock()\n\n\t\t\tfind: ->\n\t\t\t\t@unblock()\n\t\t\t\tadminCollectionObject(name).find {_id: {$in: ids}}, {fields: fields}\n\t\t\tchildren: collection.children\n\nMeteor.startup ->\n\tadminCreateTables AdminConfig?.collections\n\tadminPublishTables AdminConfig?.collections if Meteor.isServer\n"]}}