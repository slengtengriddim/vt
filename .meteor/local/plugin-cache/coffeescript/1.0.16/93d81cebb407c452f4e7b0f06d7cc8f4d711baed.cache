{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nTemplate.AdminDashboardView.rendered = function() {\n  var table;\n  return table = this.$('.dataTable').DataTable();\n};\n\nTemplate.AdminDashboardView.helpers({\n  hasDocuments: function() {\n    var ref;\n    return ((ref = AdminCollectionsCount.findOne({\n      collection: Session.get('admin_collection_name')\n    })) != null ? ref.count : void 0) > 0;\n  },\n  newPath: function() {\n    return FlowRouter.path(\"/admin/new/:coll\", {\n      coll: Session.get('admin_collection_name')\n    });\n  },\n  admin_table: function() {\n    return AdminTables[Session.get('admin_collection_name')];\n  }\n});\n\nTemplate.adminUsersIsAdmin.helpers({\n  checkadmin: function() {\n    return Roles.userIsInRole(this._id, 'admin');\n  }\n});\n\nTemplate.adminUsersMailBtn.helpers({\n  adminUserEmail: function() {\n    var user;\n    user = this;\n    if (user && user.emails && user.emails[0] && user.emails[0].address) {\n      return user.emails[0].address;\n    } else if (user && user.services && user.services.facebook && user.services.facebook.email) {\n      return user.services.facebook.email;\n    } else if (user && user.services && user.services.google && user.services.google.email) {\n      return user.services.google.email;\n    } else {\n      return 'null@null.null';\n    }\n  }\n});\n\nTemplate.adminEditBtn.helpers({\n  path: function() {\n    return FlowRouter.path('/admin/edit/:coll/:_id', {\n      coll: Session.get('admin_collection_name'),\n      _id: this._id\n    });\n  }\n});\n\nTemplate.adminDeleteBtn.helpers({\n  path: function() {\n    return FlowRouter.path('/admin/edit/:coll/:_id', {\n      coll: Session.get('admin_collection_name'),\n      _id: this._id\n    }, {\n      action: 'delete'\n    });\n  }\n});\n\nTemplate.AdminHeader.helpers({\n  profilepath: function() {\n    return FlowRouter.path('/admin/edit/:coll/:_id', {\n      coll: 'Users',\n      _id: Meteor.userId()\n    });\n  }\n});\n\nTemplate.AdminDashboardEdit.rendered = function() {\n  var editId, editcollectionName;\n  editcollectionName = FlowRouter.getParam('collectionName');\n  editId = FlowRouter.getParam('_id');\n  return Session.set('admin_doc', adminCollectionObject(editcollectionName).findOne({\n    _id: editId\n  }));\n};\n\nTemplate.AdminDashboardEdit.helpers({\n  fadmin_doc: function() {\n    var editId, editcollectionName;\n    editcollectionName = FlowRouter.getParam('collectionName');\n    editId = FlowRouter.getParam('_id');\n    if (editcollectionName && editId) {\n      return adminCollectionObject(editcollectionName).findOne({\n        _id: editId\n      });\n    }\n  },\n  action: function() {\n    return FlowRouter.getQueryParam('action');\n  }\n});\n\nTemplate.AdminDashboardUsersEdit.helpers({\n  user: function() {\n    return Meteor.users.find(FlowRouter.getParam('_id')).fetch();\n  },\n  action: function() {\n    return FlowRouter.getQueryParam('action');\n  },\n  roles: function() {\n    return Roles.getRolesForUser(FlowRouter.getParam('_id'));\n  },\n  otherRoles: function() {\n    return _.difference(_.map(Meteor.roles.find().fetch(), function(role) {\n      return role.name;\n    }), Roles.getRolesForUser(FlowRouter.getParam('_id')));\n  }\n});\n","sourceMap":{"version":3,"file":"/lib/client/js/templates.coffee.js","sourceRoot":"","sources":["/packages/sach_flow-db-admin/lib/client/js/templates.coffee"],"names":[],"mappings":"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","sourcesContent":["Template.AdminDashboardView.rendered = ->\n\ttable = @$('.dataTable').DataTable();\n\nTemplate.AdminDashboardView.helpers\n\thasDocuments: ->\n\t\tAdminCollectionsCount.findOne({collection: Session.get 'admin_collection_name'})?.count > 0\n\tnewPath: ->\n\t\tFlowRouter.path \"/admin/new/:coll\",{coll: Session.get 'admin_collection_name' }\n\tadmin_table: ->\n\t\tAdminTables[Session.get 'admin_collection_name']\n\nTemplate.adminUsersIsAdmin.helpers checkadmin: ->\n\tRoles.userIsInRole @_id, 'admin'\n\nTemplate.adminUsersMailBtn.helpers adminUserEmail: ->\n\tuser = @\n\tif user && user.emails && user.emails[0] && user.emails[0].address\n\t\tuser.emails[0].address\n\telse if user && user.services && user.services.facebook && user.services.facebook.email\n\t\tuser.services.facebook.email\n\telse if user && user.services && user.services.google && user.services.google.email\n\t\tuser.services.google.email\n\telse 'null@null.null'\n\nTemplate.adminEditBtn.helpers path: ->\n  FlowRouter.path '/admin/edit/:coll/:_id',\n    coll: Session.get('admin_collection_name')\n    _id: @_id\n\nTemplate.adminDeleteBtn.helpers path: ->\n  FlowRouter.path '/admin/edit/:coll/:_id', {\n    coll: Session.get('admin_collection_name')\n    _id: @_id\n  }, action: 'delete'\n\nTemplate.AdminHeader.helpers\n\tprofilepath: -> FlowRouter.path '/admin/edit/:coll/:_id',\n\t  coll: 'Users'\n\t  _id: Meteor.userId()\n\nTemplate.AdminDashboardEdit.rendered = ->\n\teditcollectionName = FlowRouter.getParam 'collectionName'\n\teditId\t= FlowRouter.getParam '_id'\n\tSession.set 'admin_doc', adminCollectionObject(editcollectionName).findOne _id : editId\n\nTemplate.AdminDashboardEdit.helpers\n\tfadmin_doc: ->\n\t  editcollectionName = FlowRouter.getParam 'collectionName'\n\t  editId\t= FlowRouter.getParam '_id'\n\t  adminCollectionObject(editcollectionName).findOne _id : editId if editcollectionName && editId\n  action: -> FlowRouter.getQueryParam 'action'\n\nTemplate.AdminDashboardUsersEdit.helpers\n  user: -> Meteor.users.find(FlowRouter.getParam '_id').fetch()\n  action: -> FlowRouter.getQueryParam 'action'\n  roles: -> Roles.getRolesForUser(FlowRouter.getParam '_id')\n  otherRoles: -> _.difference _.map(Meteor.roles.find().fetch(), (role) -> role.name), Roles.getRolesForUser(FlowRouter.getParam '_id')\n"]}}