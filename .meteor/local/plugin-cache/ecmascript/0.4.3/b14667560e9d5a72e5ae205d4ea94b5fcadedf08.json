{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/common/collections/vocabulary.js","filenameRelative":"/common/collections/vocabulary.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/common/collections/vocabulary.js.map","sourceFileName":"/common/collections/vocabulary.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"vocabulary"},"ignored":false,"code":"Vocabulary = new Mongo.Collection('vocabulary', {});\nTermDay = new Mongo.Collection('termDay', {});\n\nif (Meteor.isServer) {\n\tVocabulary._ensureIndex({\n\t\tterm: 1,\n\t\tdescription: 1\n\t});\n}\n\nVocabulary.allow({\n\tinsert: function () {\n\t\tfunction insert() {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn insert;\n\t}(),\n\tupdate: function () {\n\t\tfunction update() {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn update;\n\t}(),\n\tremove: function () {\n\t\tfunction remove() {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn remove;\n\t}()\n});\n\nVocabulary.deny({\n\tinsert: function () {\n\t\tfunction insert() {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn insert;\n\t}(),\n\tupdate: function () {\n\t\tfunction update() {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn update;\n\t}(),\n\tremove: function () {\n\t\tfunction remove() {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn remove;\n\t}()\n});\n\nvar VocabularySchema = new SimpleSchema({\n\tterm: {\n\t\ttype: String,\n\t\tregEx: /^[a-zA-Z]+$/\n\t},\n\tpreposition: {\n\t\ttype: String,\n\t\tregEx: /^[a-zA-Z]+$/,\n\t\toptional: true\n\t},\n\twordClass: {\n\t\ttype: String,\n\t\tallowedValues: ['Nomen', 'Verb', 'Adjektiv']\n\t},\n\tdefinition: {\n\t\ttype: [String]\n\t}\n});\n\nvar TermDaySchema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String\n\t},\n\tvocabularyId: {\n\t\ttype: String\n\t},\n\ttimestamp: {\n\t\ttype: Date,\n\t\tautoValue: function () {\n\t\t\tfunction autoValue() {\n\t\t\t\treturn new Date();\n\t\t\t}\n\n\t\t\treturn autoValue;\n\t\t}()\n\t}\n});\n\nVocabulary.attachSchema(VocabularySchema);\nTermDay.attachSchema(TermDaySchema);","ast":null,"map":{"version":3,"sources":["/common/collections/vocabulary.js"],"names":[],"mappings":"AAAA,aAAa,IAAI,MAAM,UAAN,CAAiB,YAArB,EAAmC,EAAnC,CAAb;AACA,UAAU,IAAI,MAAM,UAAN,CAAiB,SAArB,EAAgC,EAAhC,CAAV;;AAEA,IAAI,OAAO,QAAP,EAAiB;AACpB,YAAW,YAAX,CAAwB;AACvB,QAAM,CAAN;AACA,eAAa,CAAb;EAFD,EADoB;CAArB;;AAOA,WAAW,KAAX,CAAiB;AAChB;AAAQ;UAAM;GAAN;;;IAAR;AACA;AAAQ;UAAM;GAAN;;;IAAR;AACA;AAAQ;UAAM;GAAN;;;IAAR;CAHD;;AAMA,WAAW,IAAX,CAAgB;AACf;AAAQ;UAAM;GAAN;;;IAAR;AACA;AAAQ;UAAM;GAAN;;;IAAR;AACA;AAAQ;UAAM;GAAN;;;IAAR;CAHD;;AAMA,IAAI,mBAAmB,IAAI,YAAJ,CAAiB;AACvC,OAAM;AACL,QAAM,MAAN;AACA,SAAO,aAAP;EAFD;AAIA,cAAa;AACZ,QAAM,MAAN;AACA,SAAO,aAAP;AACA,YAAU,IAAV;EAHD;AAKA,YAAW;AACV,QAAM,MAAN;AACA,iBAAe,CAAC,OAAD,EAAU,MAAV,EAAkB,UAAlB,CAAf;EAFD;AAIA,aAAY;AACX,QAAM,CAAC,MAAD,CAAN;EADD;CAdsB,CAAnB;;AAmBJ,IAAI,gBAAgB,IAAI,YAAJ,CAAiB;AACpC,SAAQ;AACP,QAAM,MAAN;EADD;AAGA,eAAc;AACb,QAAM,MAAN;EADD;AAGA,YAAW;AACV,QAAM,IAAN;AACA;AAAW,wBAAW;AACrB,WAAO,IAAI,IAAJ,EAAP,CADqB;IAAX;;;KAAX;EAFD;CAPmB,CAAhB;;AAeJ,WAAW,YAAX,CAAwB,gBAAxB;AACA,QAAQ,YAAR,CAAqB,aAArB","file":"/common/collections/vocabulary.js.map","sourcesContent":["Vocabulary = new Mongo.Collection('vocabulary', {});\nTermDay = new Mongo.Collection('termDay', {});\n\nif (Meteor.isServer) {\n\tVocabulary._ensureIndex({\n\t\tterm: 1,\n\t\tdescription: 1\n\t});\n}\n\nVocabulary.allow({\n\tinsert: () => false,\n\tupdate: () => false,\n\tremove: () => false\n});\n\nVocabulary.deny({\n\tinsert: () => true,\n\tupdate: () => true,\n\tremove: () => true\n});\n\nlet VocabularySchema = new SimpleSchema({\n\tterm: {\n\t\ttype: String,\n\t\tregEx: /^[a-zA-Z]+$/\n\t},\n\tpreposition: {\n\t\ttype: String,\n\t\tregEx: /^[a-zA-Z]+$/,\n\t\toptional: true\n\t},\n\twordClass: {\n\t\ttype: String,\n\t\tallowedValues: ['Nomen', 'Verb', 'Adjektiv']\n\t},\n\tdefinition: {\n\t\ttype: [String]\n\t}\n});\n\nlet TermDaySchema = new SimpleSchema({\n\tuserId: {\n\t\ttype: String\n\t},\n\tvocabularyId: {\n\t\ttype: String\n\t},\n\ttimestamp: {\n\t\ttype: Date,\n\t\tautoValue: function() {\n\t\t\treturn new Date();\n\t\t}\n\t}\n});\n\nVocabulary.attachSchema(VocabularySchema);\nTermDay.attachSchema(TermDaySchema);\n"]},"hash":"b14667560e9d5a72e5ae205d4ea94b5fcadedf08"}
