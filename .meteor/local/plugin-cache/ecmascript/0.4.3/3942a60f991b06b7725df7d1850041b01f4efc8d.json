{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/startup.js","filenameRelative":"/server/startup.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/startup.js.map","sourceFileName":"/server/startup.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"startup"},"ignored":false,"code":"Meteor.startup(function () {\n\tMeteor.users.find({\n\t\t\"status.online\": true\n\t}).observe({\n\t\tadded: function () {\n\t\t\tfunction added(obj) {\n\t\t\t\tvar today = new Date();\n\t\t\t\t// log online\n\t\t\t\tvar latestEntry = Data.Status.findOne({\n\t\t\t\t\tuserId: obj._id\n\t\t\t\t}, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\t\tlimit: 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (latestEntry) {\n\t\t\t\t\tif (latestEntry.status !== 'online') {\n\t\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\t\tstatus: \"online\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(obj._id + ' set online');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\tstatus: \"online\"\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(obj._id + ' set online');\n\t\t\t\t}\n\n\t\t\t\tvar lastEntryTermDay = TermDay.findOne({\n\t\t\t\t\tuserId: obj._id\n\t\t\t\t}, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\t\tlimit: 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tvar termDayIds = R.pluck('vocabularyId')(TermDay.find({\n\t\t\t\t\tuserId: obj._id\n\t\t\t\t}).fetch());\n\t\t\t\tvar vocabulary = Vocabulary.find({\n\t\t\t\t\t_id: {\n\t\t\t\t\t\t$nin: termDayIds\n\t\t\t\t\t}\n\t\t\t\t}).fetch();\n\t\t\t\t// only insert a new vocabulary if there doesn't exist one for today\n\t\t\t\tif (!lastEntryTermDay || lastEntryTermDay.timestamp.getDate() !== today.getDate()) {\n\t\t\t\t\tTermDay.insert({\n\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\tvocabularyId: vocabulary[Math.floor(Math.random() * vocabulary.length)]._id\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn added;\n\t\t}(),\n\t\tremoved: function () {\n\t\t\tfunction removed(obj) {\n\t\t\t\tvar today = new Date();\n\t\t\t\t//log offline\n\t\t\t\tvar latestEntry = Data.Status.findOne({\n\t\t\t\t\tuserId: obj._id\n\t\t\t\t}, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\t\tlimit: 1\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (latestEntry) {\n\t\t\t\t\tif (latestEntry.status !== 'offline') {\n\n\t\t\t\t\t\tconsole.log(latestEntry.timestamp.getDate());\n\t\t\t\t\t\tconsole.log(today.getDate());\n\n\t\t\t\t\t\t//set exit and entry points if user stays online over midnight\n\t\t\t\t\t\tif (latestEntry.timestamp.getDate() < today.getDate()) {\n\t\t\t\t\t\t\tvar year = latestEntry.timestamp.getFullYear();\n\t\t\t\t\t\t\tvar month = latestEntry.timestamp.getMonth();\n\t\t\t\t\t\t\tvar lastDay = latestEntry.timestamp.getDate();\n\t\t\t\t\t\t\tvar todayDay = today.getDate();\n\t\t\t\t\t\t\tvar beforeMidnight = new Date(year, month, lastDay, 23, 59, 59, 999);\n\t\t\t\t\t\t\tvar afterMidnight = new Date(year, month, todayDay, 0, 0, 0, 1);\n\n\t\t\t\t\t\t\t// set offline before midnight\n\t\t\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\t\t\tstatus: \"offline\",\n\t\t\t\t\t\t\t\ttimestamp: beforeMidnight\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(beforeMidnight);\n\t\t\t\t\t\t\tconsole.log(obj._id + ' set offline');\n\n\t\t\t\t\t\t\t// set online after midnight\n\t\t\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\t\t\tstatus: \"online\",\n\t\t\t\t\t\t\t\ttimestamp: afterMidnight\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(afterMidnight);\n\t\t\t\t\t\t\tconsole.log(obj._id + ' set online');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\t\tstatus: \"offline\",\n\t\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(obj._id + ' set offline');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn removed;\n\t\t}()\n\t});\n});","ast":null,"map":{"version":3,"sources":["/server/startup.js"],"names":[],"mappings":"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","file":"/server/startup.js.map","sourcesContent":["Meteor.startup(function() {\n\tMeteor.users.find({\n\t\t\"status.online\": true\n\t}).observe({\n\t\tadded: function(obj) {\n\t\t\tlet today = new Date();\n\t\t\t// log online\n\t\t\tlet latestEntry = Data.Status.findOne({\n\t\t\t\tuserId: obj._id\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\tlimit: 1\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (latestEntry) {\n\t\t\t\tif (latestEntry.status !== 'online') {\n\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\tstatus: \"online\"\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(obj._id + ' set online');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tData.Status.insert({\n\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\tstatus: \"online\"\n\t\t\t\t});\n\t\t\t\tconsole.log(obj._id + ' set online');\n\t\t\t}\n\n\t\t\tlet lastEntryTermDay = TermDay.findOne({\n\t\t\t\tuserId: obj._id\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\tlimit: 1\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet termDayIds = R.pluck('vocabularyId')(TermDay.find({\n\t\t\t\tuserId: obj._id\n\t\t\t}).fetch());\n\t\t\tlet vocabulary = Vocabulary.find({\n\t\t\t\t_id: {\n\t\t\t\t\t$nin: termDayIds\n\t\t\t\t}\n\t\t\t}).fetch();\n\t\t\t// only insert a new vocabulary if there doesn't exist one for today\n\t\t\tif (!lastEntryTermDay || lastEntryTermDay.timestamp.getDate() !== today.getDate()) {\n\t\t\t\tTermDay.insert({\n\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\tvocabularyId: vocabulary[Math.floor(Math.random() * vocabulary.length)]._id\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tremoved: function(obj) {\n\t\t\tlet today = new Date();\n\t\t\t//log offline\n\t\t\tlet latestEntry = Data.Status.findOne({\n\t\t\t\tuserId: obj._id\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\ttimestamp: -1,\n\t\t\t\t\tlimit: 1\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (latestEntry) {\n\t\t\t\tif (latestEntry.status !== 'offline') {\n\n\t\t\t\t\tconsole.log(latestEntry.timestamp.getDate());\n\t\t\t\t\tconsole.log(today.getDate());\n\n\t\t\t\t\t//set exit and entry points if user stays online over midnight\n\t\t\t\t\tif (latestEntry.timestamp.getDate() < today.getDate()) {\n\t\t\t\t\t\tlet year = latestEntry.timestamp.getFullYear();\n\t\t\t\t\t\tlet month = latestEntry.timestamp.getMonth();\n\t\t\t\t\t\tlet lastDay = latestEntry.timestamp.getDate();\n\t\t\t\t\t\tlet todayDay = today.getDate();\n\t\t\t\t\t\tlet beforeMidnight = new Date(year, month, lastDay, 23, 59, 59, 999);\n\t\t\t\t\t\tlet afterMidnight = new Date(year, month, todayDay, 0, 0, 0, 1);\n\n\t\t\t\t\t\t// set offline before midnight\n\t\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\t\tstatus: \"offline\",\n\t\t\t\t\t\t\ttimestamp: beforeMidnight\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(beforeMidnight);\n\t\t\t\t\t\tconsole.log(obj._id + ' set offline');\n\n\t\t\t\t\t\t// set online after midnight\n\t\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\t\tstatus: \"online\",\n\t\t\t\t\t\t\ttimestamp: afterMidnight\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(afterMidnight);\n\t\t\t\t\t\tconsole.log(obj._id + ' set online');\n\t\t\t\t\t}\n\n\t\t\t\t\tData.Status.insert({\n\t\t\t\t\t\tuserId: obj._id,\n\t\t\t\t\t\tstatus: \"offline\",\n\t\t\t\t\t\ttimestamp: new Date()\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(obj._id + ' set offline');\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t});\n});\n"]},"hash":"3942a60f991b06b7725df7d1850041b01f4efc8d"}
