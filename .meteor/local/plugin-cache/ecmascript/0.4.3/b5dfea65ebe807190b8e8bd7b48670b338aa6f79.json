{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/views/high/index/components/wordsAll.js","filenameRelative":"/client/views/high/index/components/wordsAll.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/views/high/index/components/wordsAll.js.map","sourceFileName":"/client/views/high/index/components/wordsAll.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"wordsAll"},"ignored":false,"code":"Template.wordsAll.onCreated(function () {\n\tvar template = Template.instance();\n\ttemplate.subscribe('dataWords');\n});\n\nTemplate.wordsAll.helpers({\n\ttop5: function () {\n\t\tfunction top5() {\n\t\t\tvar result = [];\n\t\t\tvar data = Data.Words.find({}).fetch();\n\t\t\tvar byVocabularyId = R.groupBy(function (entry) {\n\t\t\t\treturn entry.vocabularyId;\n\t\t\t});\n\n\t\t\tvar groupedByVocabularyId = byVocabularyId(data);\n\t\t\tfor (var k in meteorBabelHelpers.sanitizeForInObject(groupedByVocabularyId)) {\n\t\t\t\tif (groupedByVocabularyId.hasOwnProperty(k)) {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\tterm: groupedByVocabularyId[k][0].vocabularyName,\n\t\t\t\t\t\tcount: R.sum(R.pluck('viewed')(groupedByVocabularyId[k]))\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar sortByViewed = R.sortBy(R.prop('count'));\n\t\t\tresult = R.take(5, R.reverse(sortByViewed(result)));\n\t\t\treturn result;\n\t\t}\n\n\t\treturn top5;\n\t}()\n});","ast":null,"map":{"version":3,"sources":["/client/views/high/index/components/wordsAll.js"],"names":[],"mappings":"AAAA,SAAS,QAAT,CAAkB,SAAlB,CAA4B,YAAM;AACjC,KAAI,WAAW,SAAS,QAAT,EAAX,CAD6B;AAEjC,UAAS,SAAT,CAAmB,WAAnB,EAFiC;CAAN,CAA5B;;AAKA,SAAS,QAAT,CAAkB,OAAlB,CAA0B;AACzB;kBAAO;AACN,OAAI,SAAS,EAAT,CADE;AAEN,OAAI,OAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,EAAhB,EAAoB,KAApB,EAAP,CAFE;AAGN,OAAI,iBAAiB,EAAE,OAAF,CAAU,UAAS,KAAT,EAAgB;AAC9C,WAAO,MAAM,YAAN,CADuC;IAAhB,CAA3B,CAHE;;AAON,OAAI,wBAAwB,eAAe,IAAf,CAAxB,CAPE;AAQN,QAAK,IAAI,CAAJ,2CAAS,sBAAd,EAAqC;AACpC,QAAI,sBAAsB,cAAtB,CAAqC,CAArC,CAAJ,EAA6C;AAC5C,YAAO,IAAP,CAAY;AACX,YAAM,sBAAsB,CAAtB,EAAyB,CAAzB,EAA4B,cAA5B;AACN,aAAO,EAAE,GAAF,CAAM,EAAE,KAAF,CAAQ,QAAR,EAAkB,sBAAsB,CAAtB,CAAlB,CAAN,CAAP;MAFD,EAD4C;KAA7C;IADD,CARM;AAgBN,OAAI,eAAe,EAAE,MAAF,CAAS,EAAE,IAAF,CAAO,OAAP,CAAT,CAAf,CAhBE;AAiBN,YAAS,EAAE,IAAF,CAAO,CAAP,EAAU,EAAE,OAAF,CAAU,aAAa,MAAb,CAAV,CAAV,CAAT,CAjBM;AAkBN,UAAO,MAAP,CAlBM;;;;IADkB;CAA1B","file":"/client/views/high/index/components/wordsAll.js.map","sourcesContent":["Template.wordsAll.onCreated(() => {\n\tlet template = Template.instance();\n\ttemplate.subscribe('dataWords');\n});\n\nTemplate.wordsAll.helpers({\n\ttop5() {\n\t\tlet result = [];\n\t\tlet data = Data.Words.find({}).fetch();\n\t\tlet byVocabularyId = R.groupBy(function(entry) {\n\t\t\treturn entry.vocabularyId;\n\t\t});\n\n\t\tlet groupedByVocabularyId = byVocabularyId(data);\n\t\tfor (let k in groupedByVocabularyId) {\n\t\t\tif (groupedByVocabularyId.hasOwnProperty(k)) {\n\t\t\t\tresult.push({\n\t\t\t\t\tterm: groupedByVocabularyId[k][0].vocabularyName,\n\t\t\t\t\tcount: R.sum(R.pluck('viewed')(groupedByVocabularyId[k]))\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tlet sortByViewed = R.sortBy(R.prop('count'));\n\t\tresult = R.take(5, R.reverse(sortByViewed(result)));\n\t\treturn result;\n\t}\n});\n"]},"hash":"b5dfea65ebe807190b8e8bd7b48670b338aa6f79"}
