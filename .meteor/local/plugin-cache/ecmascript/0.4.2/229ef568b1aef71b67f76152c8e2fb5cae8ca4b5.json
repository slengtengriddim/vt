{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/views/high/register/register.js","filenameRelative":"/client/views/high/register/register.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/views/high/register/register.js.map","sourceFileName":"/client/views/high/register/register.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"register"},"ignored":false,"code":"Template.register.onCreated(function () {\n\tvar template = Template.instance();\n\n\ttemplate.searchQuery = new ReactiveVar();\n\ttemplate.searching = new ReactiveVar(false);\n\ttemplate.isAlphabetic = new ReactiveVar(true);\n\ttemplate.isLength64 = new ReactiveVar(true);\n\n\tTracker.autorun(function () {\n\t\ttemplate.subscribe('vocabularyRegister', template.searchQuery.get(), function () {\n\t\t\tsetTimeout(function () {\n\t\t\t\ttemplate.searching.set(false);\n\t\t\t}, 300);\n\t\t});\n\t\ttemplate.subscribe('ownedFavourites');\n\n\t\t// Session.set(LENGTH_FAV, Favourites.find().count());\n\t\t// Session.set(LENGTH_NOT_FAV, Vocabulary.find().count() - Favourites.find().count());\n\t});\n});\n\nTemplate.register.helpers({\n\tsearching: function () {\n\t\tfunction searching() {\n\t\t\treturn Template.instance().searching.get();\n\t\t}\n\n\t\treturn searching;\n\t}(),\n\tquery: function () {\n\t\tfunction query() {\n\t\t\treturn Template.instance().searchQuery.get();\n\t\t}\n\n\t\treturn query;\n\t}(),\n\tisAlphabetic: function () {\n\t\tfunction isAlphabetic() {\n\t\t\treturn Template.instance().isAlphabetic.get();\n\t\t}\n\n\t\treturn isAlphabetic;\n\t}(),\n\tisLength64: function () {\n\t\tfunction isLength64() {\n\t\t\treturn Template.instance().isLength64.get();\n\t\t}\n\n\t\treturn isLength64;\n\t}(),\n\tfavLengthShort: function () {\n\t\tfunction favLengthShort() {\n\t\t\treturn Session.get(LENGTH_FAV) < 5;\n\t\t}\n\n\t\treturn favLengthShort;\n\t}(),\n\tnotFavLengthShort: function () {\n\t\tfunction notFavLengthShort() {\n\t\t\treturn Session.get(LENGTH_NOT_FAV) < 5;\n\t\t}\n\n\t\treturn notFavLengthShort;\n\t}(),\n\tvocabulary: function () {\n\t\tfunction vocabulary() {\n\t\t\t// Sort and group entries by letter and create a new array of iterable objects for cascaded template iteration\n\t\t\tvar vocabularyIndexed = [];\n\t\t\tvocabularyIndexed.fav = [];\n\t\t\tvocabularyIndexed.notFav = [];\n\n\t\t\tvar favIds = R.pluck('vocabularyId')(Favourites.find({}).fetch());\n\n\t\t\tvar alphabet = R.split('', 'abcdefghijklmnopqrstuvwxyz'.toUpperCase());\n\t\t\tvar regex = function () {\n\t\t\t\tfunction regex(letter) {\n\t\t\t\t\treturn new RegExp(\"^\" + letter, \"i\");\n\t\t\t\t}\n\n\t\t\t\treturn regex;\n\t\t\t}();\n\n\t\t\talphabet.forEach(function (entry) {\n\t\t\t\tvar arrayFav = Vocabulary.find({\n\t\t\t\t\tterm: {\n\t\t\t\t\t\t$in: [regex(entry)]\n\t\t\t\t\t},\n\t\t\t\t\t_id: {\n\t\t\t\t\t\t$in: favIds\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tterm: 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (arrayFav.count() !== 0) {\n\t\t\t\t\tvocabularyIndexed.fav.push({\n\t\t\t\t\t\t'letter': entry,\n\t\t\t\t\t\t'entries': arrayFav\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\talphabet.forEach(function (entry) {\n\t\t\t\tvar arrayNotFav = Vocabulary.find({\n\t\t\t\t\tterm: {\n\t\t\t\t\t\t$in: [regex(entry)]\n\t\t\t\t\t},\n\t\t\t\t\t_id: {\n\t\t\t\t\t\t$nin: favIds\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tterm: 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (arrayNotFav.count() !== 0) {\n\t\t\t\t\tvocabularyIndexed.notFav.push({\n\t\t\t\t\t\t'letter': entry,\n\t\t\t\t\t\t'entries': arrayNotFav\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (vocabularyIndexed) {\n\t\t\t\treturn vocabularyIndexed;\n\t\t\t}\n\t\t}\n\n\t\treturn vocabulary;\n\t}()\n});\n\nTemplate.register.events({\n\t'keyup [name=\"search\"]': function () {\n\t\tfunction keyupNameSearch(event, template) {\n\t\t\tvar value = event.target.value;\n\t\t\tif (value !== '') {\n\t\t\t\t// check if string is valid\n\t\t\t\tif (Validate.isAlphabetic(value)) {\n\t\t\t\t\ttemplate.isAlphabetic.set(true);\n\t\t\t\t} else {\n\t\t\t\t\ttemplate.isAlphabetic.set(false);\n\t\t\t\t}\n\t\t\t\tif (Validate.isLength64(value)) {\n\t\t\t\t\ttemplate.isLength64.set(true);\n\t\t\t\t} else {\n\t\t\t\t\ttemplate.isLength64.set(false);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// && event.keyCode === 13\n\t\t\tif (value !== '') {\n\t\t\t\tif (template.isAlphabetic.get() && template.isLength64.get()) {\n\t\t\t\t\ttemplate.searchQuery.set(value);\n\t\t\t\t\ttemplate.searching.set(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value === '') {\n\t\t\t\ttemplate.searchQuery.set(value);\n\t\t\t\ttemplate.isAlphabetic.set(true);\n\t\t\t\ttemplate.isLength64.set(true);\n\t\t\t}\n\t\t}\n\n\t\treturn keyupNameSearch;\n\t}()\n});","ast":null,"map":{"version":3,"sources":["/client/views/high/register/register.js"],"names":[],"mappings":"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","file":"/client/views/high/register/register.js.map","sourcesContent":["Template.register.onCreated(() => {\n\tlet template = Template.instance();\n\n\ttemplate.searchQuery = new ReactiveVar();\n\ttemplate.searching = new ReactiveVar(false);\n\ttemplate.isAlphabetic = new ReactiveVar(true);\n\ttemplate.isLength64 = new ReactiveVar(true);\n\n\tTracker.autorun(() => {\n\t\ttemplate.subscribe('vocabularyRegister', template.searchQuery.get(), () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\ttemplate.searching.set(false);\n\t\t\t}, 300);\n\t\t});\n\t\ttemplate.subscribe('ownedFavourites');\n\n\t\t// Session.set(LENGTH_FAV, Favourites.find().count());\n\t\t// Session.set(LENGTH_NOT_FAV, Vocabulary.find().count() - Favourites.find().count());\n\t});\n});\n\nTemplate.register.helpers({\n\tsearching() {\n\t\treturn Template.instance().searching.get();\n\t},\n\tquery() {\n\t\treturn Template.instance().searchQuery.get();\n\t},\n\tisAlphabetic() {\n\t\treturn Template.instance().isAlphabetic.get();\n\t},\n\tisLength64() {\n\t\treturn Template.instance().isLength64.get();\n\t},\n\tfavLengthShort() {\n\t\treturn Session.get(LENGTH_FAV) < 5;\n\t},\n\tnotFavLengthShort() {\n\t\treturn Session.get(LENGTH_NOT_FAV) < 5;\n\t},\n\tvocabulary() {\n\t\t// Sort and group entries by letter and create a new array of iterable objects for cascaded template iteration\n\t\tlet vocabularyIndexed = [];\n\t\tvocabularyIndexed.fav = [];\n\t\tvocabularyIndexed.notFav = [];\n\n\n\t\tlet favIds = R.pluck('vocabularyId')(Favourites.find({}).fetch());\n\n\t\tlet alphabet = R.split('', 'abcdefghijklmnopqrstuvwxyz'.toUpperCase());\n\t\tlet regex = letter => new RegExp(\"^\" + letter, \"i\");\n\n\t\talphabet.forEach(entry => {\n\t\t\tlet arrayFav = Vocabulary.find({\n\t\t\t\tterm: {\n\t\t\t\t\t$in: [regex(entry)]\n\t\t\t\t},\n\t\t\t\t_id: {\n\t\t\t\t\t$in: favIds\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\tterm: 1\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (arrayFav.count() !== 0) {\n\t\t\t\tvocabularyIndexed.fav.push({\n\t\t\t\t\t'letter': entry,\n\t\t\t\t\t'entries': arrayFav\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\talphabet.forEach(entry => {\n\t\t\tlet arrayNotFav = Vocabulary.find({\n\t\t\t\tterm: {\n\t\t\t\t\t$in: [regex(entry)]\n\t\t\t\t},\n\t\t\t\t_id: {\n\t\t\t\t\t$nin: favIds\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\tterm: 1\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (arrayNotFav.count() !== 0) {\n\t\t\t\tvocabularyIndexed.notFav.push({\n\t\t\t\t\t'letter': entry,\n\t\t\t\t\t'entries': arrayNotFav\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (vocabularyIndexed) {\n\t\t\treturn vocabularyIndexed;\n\t\t}\n\t}\n});\n\nTemplate.register.events({\n\t'keyup [name=\"search\"]' (event, template) {\n\t\tlet value = event.target.value;\n\t\tif (value !== '') {\n\t\t\t// check if string is valid\n\t\t\tif (Validate.isAlphabetic(value)) {\n\t\t\t\ttemplate.isAlphabetic.set(true);\n\t\t\t} else {\n\t\t\t\ttemplate.isAlphabetic.set(false);\n\t\t\t}\n\t\t\tif (Validate.isLength64(value)) {\n\t\t\t\ttemplate.isLength64.set(true);\n\t\t\t} else {\n\t\t\t\ttemplate.isLength64.set(false);\n\t\t\t}\n\t\t}\n\t\t// && event.keyCode === 13\n\t\tif (value !== '') {\n\t\t\tif (template.isAlphabetic.get() && template.isLength64.get()) {\n\t\t\t\ttemplate.searchQuery.set(value);\n\t\t\t\ttemplate.searching.set(true);\n\t\t\t}\n\t\t}\n\n\t\tif (value === '') {\n\t\t\ttemplate.searchQuery.set(value);\n\t\t\ttemplate.isAlphabetic.set(true);\n\t\t\ttemplate.isLength64.set(true);\n\t\t}\n\t},\n\n\t// 'click .btn-fav' (event, template) {\n\t// \tMeteor.call('toggleFavourite', this._id);\n\t//\n\t// \t// TODO DRY\n\t// \tif (Favourites.find({\n\t// \t\t\tvocabularyId: this._id\n\t// \t\t}).count() === 0) {\n\t// \t\t// add to favourites\n\t// \t\tif (Session.get(RANDOM_NOT_FAV) && Session.get(COUNT_VIEWED) >= Session.get(LENGTH_NOT_FAV) - 1) {\n\t// \t\t\tlet val = (Session.get(COUNT_VIEWED) + 1) % Session.get(LENGTH_NOT_FAV);\n\t// \t\t\tSession.set(COUNT_VIEWED, val);\n\t// \t\t}\n\t// \t\tif ((Session.get(LENGTH_NOT_FAV) === 1)) {\n\t// \t\t\tSession.set(RANDOM_FAV, true);\n\t// \t\t\tSession.set(RANDOM_NOT_FAV, false);\n\t// \t\t}\n\t// \t} else {\n\t// \t\t// remove from favourites\n\t// \t\tif (Session.get(RANDOM_FAV) && Session.get(COUNT_VIEWED) >= Session.get(LENGTH_FAV) - 1) {\n\t// \t\t\tlet val = (Session.get(COUNT_VIEWED) + 1) % Session.get(LENGTH_FAV);\n\t// \t\t\tSession.set(COUNT_VIEWED, val);\n\t// \t\t}\n\t// \t\tif ((Session.get(LENGTH_FAV) === 1)) {\n\t// \t\t\tSession.set(RANDOM_FAV, false);\n\t// \t\t\tSession.set(RANDOM_NOT_FAV, true);\n\t// \t\t}\n\t// \t}\n\t// }\n});\n"]},"hash":"229ef568b1aef71b67f76152c8e2fb5cae8ca4b5"}
