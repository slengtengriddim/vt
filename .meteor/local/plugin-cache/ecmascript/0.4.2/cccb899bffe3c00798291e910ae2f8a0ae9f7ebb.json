{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/views/high/index/charts/chart_fav_line.js","filenameRelative":"/client/views/high/index/charts/chart_fav_line.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/views/high/index/charts/chart_fav_line.js.map","sourceFileName":"/client/views/high/index/charts/chart_fav_line.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"chart_fav_line"},"ignored":false,"code":"Template.chartFavLine.onCreated(function () {\n\tvar template = Template.instance();\n\ttemplate.subscribe('dataFavHigh');\n\ttemplate.subscribe('dataFavLow');\n});\n\n// Template.chartFavLine.rendered = function() {\n// \t\t// chart object\n// \t\tlet chart = nv.models.lineChart()\n// \t\t\t.margin({\n// \t\t\t\tleft: 100\n// \t\t\t}) //Adjust chart margins to give the x-axis some breathing room.\n// \t\t\t.useInteractiveGuideline(true) //We want nice looking tooltips and a guideline!\n// \t\t\t.duration(350) //how fast do you want the lines to transition?\n// \t\t\t.showLegend(true) //Show the legend, allowing users to turn on/off line series.\n// \t\t\t.showYAxis(true) //Show the y-axis\n// \t\t\t.showXAxis(true) //Show the x-axis\n// \t\t;\n//\n// \t\t// chart details\n// \t\tnv.addGraph(function() {\n// \t\t\tlet dataLow = Data.Fav.Low.find({}, {\n// \t\t\t\tsort: {\n// \t\t\t\t\ttimesViewed: 1\n// \t\t\t\t}\n// \t\t\t}).fetch();\n// \t\t\tlet dataHigh = Data.Fav.High.find({}, {\n// \t\t\t\tsort: {\n// \t\t\t\t\ttimesViewed: 1\n// \t\t\t\t}\n// \t\t\t}).fetch();\n//\n// \t\t\tchart.xAxis.axisLabel('Tag').tickFormat(d3.format('d'));\n// \t\t\tchart.yAxis.axisLabel('Clicks').tickFormat(d3.format('d'));\n//\n// \t\t\td3.select('#chartFavLine svg')\n// \t\t\t\t.datum(\n// \t\t\t\t\t[{\n// \t\t\t\t\t\tvalues: dataLow,\n// \t\t\t\t\t\tkey: 'Low',\n// \t\t\t\t\t\tcolor: \"#2ca02c\"\n// \t\t\t\t\t},\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvalues: dataHigh,\n// \t\t\t\t\t\tkey: 'High',\n// \t\t\t\t\t\tcolor: \"#ff7f0e\"\n// \t\t\t\t\t}]\n// \t\t\t\t)\n// \t\t\t\t.call(chart)\n// \t\t\t\t;\n//\n// \t\t\tnv.utils.windowResize(chart.update);\n//\n// \t\t\treturn chart;\n// \t\t});\n//\n// \t\t// update chart when data changes\n// \t\tthis.autorun(function() {\n// \t\t\tlet dataLow = Data.Fav.Low.find({}, {\n// \t\t\t\tsort: {\n// \t\t\t\t\ttimesViewed: 1\n// \t\t\t\t}\n// \t\t\t}).fetch();\n// \t\t\tlet dataHigh = Data.Fav.High.find({}, {\n// \t\t\t\tsort: {\n// \t\t\t\t\ttimesViewed: 1\n// \t\t\t\t}\n// \t\t\t}).fetch();\n//\n// \t\t\td3.select('#chartFavLine svg').datum(\n// \t\t\t\t[{\n// \t\t\t\t\tvalues: dataLow,\n// \t\t\t\t\tkey: 'Low',\n// \t\t\t\t\tcolor: \"#2ca02c\"\n// \t\t\t\t},\n// \t\t\t\t{\n// \t\t\t\t\tvalues: dataHigh,\n// \t\t\t\t\tkey: 'High',\n// \t\t\t\t\tcolor: \"#ff7f0e\"\n// \t\t\t\t}]\n// \t\t\t).call(chart);\n// \t\t\tchart.update();\n// \t\t});\n// }","ast":null,"map":{"version":3,"sources":["/client/views/high/index/charts/chart_fav_line.js"],"names":[],"mappings":"AAAA,SAAS,YAAT,CAAsB,SAAtB,CAAgC,YAAM;AACrC,KAAI,WAAW,SAAS,QAAT,EAAX,CADiC;AAErC,UAAS,SAAT,CAAmB,aAAnB,EAFqC;AAGrC,UAAS,SAAT,CAAmB,YAAnB,EAHqC;CAAN,CAAhC","file":"/client/views/high/index/charts/chart_fav_line.js.map","sourcesContent":["Template.chartFavLine.onCreated(() => {\n\tlet template = Template.instance();\n\ttemplate.subscribe('dataFavHigh');\n\ttemplate.subscribe('dataFavLow');\n});\n\n\n\n\n\n// Template.chartFavLine.rendered = function() {\n// \t\t// chart object\n// \t\tlet chart = nv.models.lineChart()\n// \t\t\t.margin({\n// \t\t\t\tleft: 100\n// \t\t\t}) //Adjust chart margins to give the x-axis some breathing room.\n// \t\t\t.useInteractiveGuideline(true) //We want nice looking tooltips and a guideline!\n// \t\t\t.duration(350) //how fast do you want the lines to transition?\n// \t\t\t.showLegend(true) //Show the legend, allowing users to turn on/off line series.\n// \t\t\t.showYAxis(true) //Show the y-axis\n// \t\t\t.showXAxis(true) //Show the x-axis\n// \t\t;\n//\n// \t\t// chart details\n// \t\tnv.addGraph(function() {\n// \t\t\tlet dataLow = Data.Fav.Low.find({}, {\n// \t\t\t\tsort: {\n// \t\t\t\t\ttimesViewed: 1\n// \t\t\t\t}\n// \t\t\t}).fetch();\n// \t\t\tlet dataHigh = Data.Fav.High.find({}, {\n// \t\t\t\tsort: {\n// \t\t\t\t\ttimesViewed: 1\n// \t\t\t\t}\n// \t\t\t}).fetch();\n//\n// \t\t\tchart.xAxis.axisLabel('Tag').tickFormat(d3.format('d'));\n// \t\t\tchart.yAxis.axisLabel('Clicks').tickFormat(d3.format('d'));\n//\n// \t\t\td3.select('#chartFavLine svg')\n// \t\t\t\t.datum(\n// \t\t\t\t\t[{\n// \t\t\t\t\t\tvalues: dataLow,\n// \t\t\t\t\t\tkey: 'Low',\n// \t\t\t\t\t\tcolor: \"#2ca02c\"\n// \t\t\t\t\t},\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvalues: dataHigh,\n// \t\t\t\t\t\tkey: 'High',\n// \t\t\t\t\t\tcolor: \"#ff7f0e\"\n// \t\t\t\t\t}]\n// \t\t\t\t)\n// \t\t\t\t.call(chart)\n// \t\t\t\t;\n//\n// \t\t\tnv.utils.windowResize(chart.update);\n//\n// \t\t\treturn chart;\n// \t\t});\n//\n// \t\t// update chart when data changes\n// \t\tthis.autorun(function() {\n// \t\t\tlet dataLow = Data.Fav.Low.find({}, {\n// \t\t\t\tsort: {\n// \t\t\t\t\ttimesViewed: 1\n// \t\t\t\t}\n// \t\t\t}).fetch();\n// \t\t\tlet dataHigh = Data.Fav.High.find({}, {\n// \t\t\t\tsort: {\n// \t\t\t\t\ttimesViewed: 1\n// \t\t\t\t}\n// \t\t\t}).fetch();\n//\n// \t\t\td3.select('#chartFavLine svg').datum(\n// \t\t\t\t[{\n// \t\t\t\t\tvalues: dataLow,\n// \t\t\t\t\tkey: 'Low',\n// \t\t\t\t\tcolor: \"#2ca02c\"\n// \t\t\t\t},\n// \t\t\t\t{\n// \t\t\t\t\tvalues: dataHigh,\n// \t\t\t\t\tkey: 'High',\n// \t\t\t\t\tcolor: \"#ff7f0e\"\n// \t\t\t\t}]\n// \t\t\t).call(chart);\n// \t\t\tchart.update();\n// \t\t});\n// }\n"]},"hash":"cccb899bffe3c00798291e910ae2f8a0ae9f7ebb"}
