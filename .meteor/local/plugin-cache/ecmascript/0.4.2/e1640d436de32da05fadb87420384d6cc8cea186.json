{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/ongoworks:security/lib/client/Security.js","filenameRelative":"/packages/ongoworks:security/lib/client/Security.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/ongoworks:security/lib/client/Security.js.map","sourceFileName":"/packages/ongoworks:security/lib/client/Security.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Security"},"ignored":false,"code":"// We only stub on the client to prevent errors if putting in common code\n\nSecurity = {\n  // the starting point of the chain\n  permit: function () {\n    function permit() {\n      return new Security.Rule();\n    }\n\n    return permit;\n  }(),\n  can: function () {\n    function can() {\n      return new Security.Check();\n    }\n\n    return can;\n  }(),\n  defineMethod: function () {\n    function securityDefineMethod(name) {\n      // Check whether a rule with the given name already exists; can't overwrite\n      if (Security.Rule.prototype[name]) {\n        throw new Error('A security method with the name \"' + name + '\" has already been defined');\n      }\n      Security.Rule.prototype[name] = function () {\n        return this;\n      };\n    }\n\n    return securityDefineMethod;\n  }()\n};\n\nMongo.Collection.prototype.permit = function () {\n  return Security.permit().collections(this);\n};","ast":null,"map":{"version":3,"sources":["/packages/ongoworks:security/lib/client/Security.js"],"names":[],"mappings":";;AAEA,WAAW;;AAET;AAAQ,aAAS,MAAT,GAAkB;AACxB,aAAO,IAAI,SAAS,IAAT,EAAX,CADwB;KAAlB;;WAAS;KAAjB;AAGA;AAAK,aAAS,GAAT,GAAe;AAClB,aAAO,IAAI,SAAS,KAAT,EAAX,CADkB;KAAf;;WAAS;KAAd;AAGA;AAAc,aAAS,oBAAT,CAA8B,IAA9B,EAAoC;;AAEhD,UAAI,SAAS,IAAT,CAAc,SAAd,CAAwB,IAAxB,CAAJ,EAAmC;AACjC,cAAM,IAAI,KAAJ,CAAU,sCAAsC,IAAtC,GAA6C,4BAA7C,CAAhB,CADiC;OAAnC;AAGA,eAAS,IAAT,CAAc,SAAd,CAAwB,IAAxB,IAAgC,YAAY;AAC1C,eAAO,IAAP,CAD0C;OAAZ,CALgB;KAApC;;WAAS;KAAvB;CARF;;AAmBA,MAAM,UAAN,CAAiB,SAAjB,CAA2B,MAA3B,GAAoC,YAAY;AAC9C,SAAO,SAAS,MAAT,GAAkB,WAAlB,CAA8B,IAA9B,CAAP,CAD8C;CAAZ","file":"/packages/ongoworks:security/lib/client/Security.js.map","sourcesContent":["// We only stub on the client to prevent errors if putting in common code\n\nSecurity = {\n  // the starting point of the chain\n  permit: function permit() {\n    return new Security.Rule();\n  },\n  can: function can() {\n    return new Security.Check();\n  },\n  defineMethod: function securityDefineMethod(name) {\n    // Check whether a rule with the given name already exists; can't overwrite\n    if (Security.Rule.prototype[name]) {\n      throw new Error('A security method with the name \"' + name + '\" has already been defined');\n    }\n    Security.Rule.prototype[name] = function () {\n      return this;\n    };\n  }\n};\n\nMongo.Collection.prototype.permit = function () {\n  return Security.permit().collections(this);\n};\n"]},"hash":"e1640d436de32da05fadb87420384d6cc8cea186"}
