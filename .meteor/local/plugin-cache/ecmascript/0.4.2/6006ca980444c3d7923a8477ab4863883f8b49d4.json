{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/views/high/uebersicht/charts/status/status.js","filenameRelative":"/client/views/high/uebersicht/charts/status/status.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/views/high/uebersicht/charts/status/status.js.map","sourceFileName":"/client/views/high/uebersicht/charts/status/status.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"status"},"ignored":false,"code":"Template.status.onCreated(function () {\n\tvar template = Template.instance();\n\ttemplate.subscribe('dataDetail');\n\ttemplate.subscribe('userStatus');\n});\n\nTemplate.status.events({\n\t'click .btn-test': function () {\n\t\tfunction clickBtnTest(event, template) {\n\t\t\tvar result = [];\n\t\t\t// let dataOnline = Data.Status.find({\n\t\t\t// \tstatus: \"online\"\n\t\t\t// }, {\n\t\t\t// \tfields: {\n\t\t\t// \t\t_id: 0,\n\t\t\t// \t\ttimestamp: 1,\n\t\t\t// \t\tuserId: 1,\n\t\t\t// \t\tstatus: 1\n\t\t\t// \t}\n\t\t\t// }).fetch();\n\t\t\t// let dataOffline = Data.Status.find({\n\t\t\t// \tstatus: \"offline\"\n\t\t\t// }, {\n\t\t\t// \tfields: {\n\t\t\t// \t\t_id: 0,\n\t\t\t// \t\ttimestamp: 1,\n\t\t\t// \t\tuserId: 1,\n\t\t\t// \t\tstatus: 1\n\t\t\t// \t}\n\t\t\t// }).fetch();\n\t\t\tvar data = Data.Status.find({}, {\n\t\t\t\tsort: {\n\t\t\t\t\ttimestamp: 1\n\t\t\t\t}\n\t\t\t}).fetch();\n\t\t\t// console.log(dataOffline);\n\t\t\t// console.log(dataOnline);\n\t\t\tvar byUser = R.groupBy(function (entry) {\n\t\t\t\treturn entry.userId;\n\t\t\t});\n\t\t\tvar byDate = R.groupBy(function (entry) {\n\t\t\t\tvar day = entry.timestamp;\n\n\t\t\t\t// day.setMinutes(0);\n\t\t\t\t// day.setSeconds(0);\n\t\t\t\t// day.setMilliseconds(0);\n\t\t\t\tif (entry.timestamp.getHours()) {\n\t\t\t\t\treturn day.getDate();\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar online = void 0;\n\t\t\tvar offline = void 0;\n\t\t\tvar isOnline = function () {\n\t\t\t\tfunction isOnline(n, m) {\n\t\t\t\t\treturn n.status === \"online\";\n\t\t\t\t}\n\n\t\t\t\treturn isOnline;\n\t\t\t}();\n\t\t\tvar isOffline = function () {\n\t\t\t\tfunction isOffline(n, m) {\n\t\t\t\t\treturn n.status === \"offline\";\n\t\t\t\t}\n\n\t\t\t\treturn isOffline;\n\t\t\t}();\n\t\t\tvar getRange = function () {\n\t\t\t\tfunction getRange(n) {\n\t\t\t\t\treturn n[1] - n[0];\n\t\t\t\t}\n\n\t\t\t\treturn getRange;\n\t\t\t}();\n\t\t\tvar getMinutes = function () {\n\t\t\t\tfunction getMinutes(n) {\n\t\t\t\t\treturn Math.floor(n / 1000 / 60);\n\t\t\t\t}\n\n\t\t\t\treturn getMinutes;\n\t\t\t}();\n\t\t\tvar getSeconds = function () {\n\t\t\t\tfunction getSeconds(n) {\n\t\t\t\t\treturn n / 1000 % 60;\n\t\t\t\t}\n\n\t\t\t\treturn getSeconds;\n\t\t\t}();\n\n\t\t\tvar groupedByUser = byUser(data);\n\n\t\t\tfor (var k in meteorBabelHelpers.sanitizeForInObject(groupedByUser)) {\n\t\t\t\tif (groupedByUser.hasOwnProperty(k)) {\n\n\t\t\t\t\tvar groupedByDate = byDate(groupedByUser[k]);\n\t\t\t\t\tconsole.log(groupedByDate);\n\t\t\t\t\tfor (var l in meteorBabelHelpers.sanitizeForInObject(groupedByDate)) {\n\t\t\t\t\t\tif (groupedByDate.hasOwnProperty(l)) {\n\t\t\t\t\t\t\tonline = R.pluck('timestamp')(R.filter(isOnline, groupedByDate[l]));\n\t\t\t\t\t\t\toffline = R.pluck('timestamp')(R.filter(isOffline, groupedByDate[l]));\n\n\t\t\t\t\t\t\tvar onOff = R.zip(online, offline);\n\t\t\t\t\t\t\tvar timeRanges = R.map(getRange, onOff);\n\t\t\t\t\t\t\tvar timeTotalPerDatePerUser = R.sum(timeRanges);\n\t\t\t\t\t\t\tconsole.log(timeRange);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// console.log(data);\n\t\t\t// console.log(groupedByUser);\n\n\t\t\tvar byVocabularyId = R.groupBy(function (entry) {\n\t\t\t\treturn entry.vocabularyId;\n\t\t\t});\n\t\t\t// let byMode = R.groupBy(function(entry) {\n\t\t\t// \treturn entry.mode;\n\t\t\t// });\n\t\t\t// let byAttention = R.groupBy(function(entry) {\n\t\t\t// \treturn entry.attention;\n\t\t\t// });\n\t\t\t// let byDate = R.groupBy(function(entry) {\n\t\t\t// \tlet day = entry.timestamp;\n\t\t\t// \t// day.setHours(0);\n\t\t\t// \t// day.setMinutes(0);\n\t\t\t// \tday.setSeconds(0);\n\t\t\t// \tday.setMilliseconds(0);\n\t\t\t// \tif (entry.timestamp.getMinutes()) {\n\t\t\t// \t\treturn day;\n\t\t\t// \t}\n\t\t\t// });\n\n\t\t\t// let groupedByVocabularyId = byVocabularyId(data);\n\t\t\t// for (let k in groupedByVocabularyId) {\n\t\t\t// \tif (groupedByVocabularyId.hasOwnProperty(k)) {\n\t\t\t// \t\tresult.push({\n\t\t\t// \t\t\tx: groupedByVocabularyId[k][0].vocabularyName,\n\t\t\t// \t\t\ty: R.sum(R.pluck('viewed')(groupedByVocabularyId[k]))\n\t\t\t// \t\t});\n\t\t\t// \t}\n\t\t\t// };\n\t\t\tresult.forEach(function (entry) {\n\t\t\t\tconsole.log(R.prop('y', entry));\n\t\t\t});\n\t\t\t// console.log(result);\n\t\t}\n\n\t\treturn clickBtnTest;\n\t}()\n});","ast":null,"map":{"version":3,"sources":["/client/views/high/uebersicht/charts/status/status.js"],"names":[],"mappings":"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","file":"/client/views/high/uebersicht/charts/status/status.js.map","sourcesContent":["Template.status.onCreated(() => {\n\tlet template = Template.instance();\n\ttemplate.subscribe('dataDetail');\n\ttemplate.subscribe('userStatus');\n});\n\nTemplate.status.events({\n\t'click .btn-test' (event, template) {\n\t\tlet result = [];\n\t\t// let dataOnline = Data.Status.find({\n\t\t// \tstatus: \"online\"\n\t\t// }, {\n\t\t// \tfields: {\n\t\t// \t\t_id: 0,\n\t\t// \t\ttimestamp: 1,\n\t\t// \t\tuserId: 1,\n\t\t// \t\tstatus: 1\n\t\t// \t}\n\t\t// }).fetch();\n\t\t// let dataOffline = Data.Status.find({\n\t\t// \tstatus: \"offline\"\n\t\t// }, {\n\t\t// \tfields: {\n\t\t// \t\t_id: 0,\n\t\t// \t\ttimestamp: 1,\n\t\t// \t\tuserId: 1,\n\t\t// \t\tstatus: 1\n\t\t// \t}\n\t\t// }).fetch();\n\t\tlet data = Data.Status.find({}, {\n\t\t\tsort: {\n\t\t\t\ttimestamp: 1\n\t\t\t}\n\t\t}).fetch();\n\t\t// console.log(dataOffline);\n\t\t// console.log(dataOnline);\n\t\tlet byUser = R.groupBy(function(entry) {\n\t\t\treturn entry.userId;\n\t\t});\n\t\tlet byDate = R.groupBy(function(entry) {\n\t\t\tlet day = entry.timestamp;\n\n\t\t\t// day.setMinutes(0);\n\t\t\t// day.setSeconds(0);\n\t\t\t// day.setMilliseconds(0);\n\t\t\tif (entry.timestamp.getHours()) {\n\t\t\t\treturn day.getDate();\n\t\t\t}\n\t\t});\n\t\tlet online;\n\t\tlet offline;\n\t\tlet isOnline = (n, m) => n.status === \"online\";\n\t\tlet isOffline = (n, m) => n.status === \"offline\";\n\t\tlet getRange = n => n[1] - n[0];\n\t\tlet getMinutes = n => Math.floor(n/1000/60);\n\t\tlet getSeconds = n => (n/1000) % 60;\n\n\t\tlet groupedByUser = byUser(data);\n\n\t\tfor (let k in groupedByUser) {\n\t\t\tif (groupedByUser.hasOwnProperty(k)) {\n\n\t\t\t\tlet groupedByDate = byDate(groupedByUser[k]);\n\t\t\t\tconsole.log(groupedByDate);\n\t\t\t\tfor (let l in groupedByDate) {\n\t\t\t\t\tif (groupedByDate.hasOwnProperty(l)) {\n\t\t\t\t\t\tonline = R.pluck('timestamp')(R.filter(isOnline, groupedByDate[l]));\n\t\t\t\t\t\toffline = R.pluck('timestamp')(R.filter(isOffline, groupedByDate[l]));\n\n\t\t\t\t\t\tlet onOff = R.zip(online, offline);\n\t\t\t\t\t\tlet timeRanges = R.map(getRange, onOff);\n\t\t\t\t\t\tlet timeTotalPerDatePerUser = R.sum(timeRanges);\n\t\t\t\t\t\tconsole.log(timeRange);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\t// console.log(data);\n\t\t// console.log(groupedByUser);\n\n\n\t\tlet byVocabularyId = R.groupBy(function(entry) {\n\t\t\treturn entry.vocabularyId;\n\t\t});\n\t\t// let byMode = R.groupBy(function(entry) {\n\t\t// \treturn entry.mode;\n\t\t// });\n\t\t// let byAttention = R.groupBy(function(entry) {\n\t\t// \treturn entry.attention;\n\t\t// });\n\t\t// let byDate = R.groupBy(function(entry) {\n\t\t// \tlet day = entry.timestamp;\n\t\t// \t// day.setHours(0);\n\t\t// \t// day.setMinutes(0);\n\t\t// \tday.setSeconds(0);\n\t\t// \tday.setMilliseconds(0);\n\t\t// \tif (entry.timestamp.getMinutes()) {\n\t\t// \t\treturn day;\n\t\t// \t}\n\t\t// });\n\n\t\t// let groupedByVocabularyId = byVocabularyId(data);\n\t\t// for (let k in groupedByVocabularyId) {\n\t\t// \tif (groupedByVocabularyId.hasOwnProperty(k)) {\n\t\t// \t\tresult.push({\n\t\t// \t\t\tx: groupedByVocabularyId[k][0].vocabularyName,\n\t\t// \t\t\ty: R.sum(R.pluck('viewed')(groupedByVocabularyId[k]))\n\t\t// \t\t});\n\t\t// \t}\n\t\t// };\n\t\tresult.forEach(entry => {\n\t\t\t\tconsole.log(R.prop('y', entry));\n\t\t\t})\n\t\t\t// console.log(result);\n\n\t}\n});\n"]},"hash":"6006ca980444c3d7923a8477ab4863883f8b49d4"}
