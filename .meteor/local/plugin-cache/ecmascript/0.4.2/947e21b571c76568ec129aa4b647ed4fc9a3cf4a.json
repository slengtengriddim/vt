{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/views/favouriten/favouriten.js","filenameRelative":"/client/views/favouriten/favouriten.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/views/favouriten/favouriten.js.map","sourceFileName":"/client/views/favouriten/favouriten.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"favouriten"},"ignored":false,"code":"Template.favouriten.onCreated(function () {\n\tvar _this = this;\n\n\tthis.autorun(function () {\n\t\t_this.subscribe('ownedFavourites');\n\t\t_this.subscribe('vocabularyFavourised');\n\n\t\t// Session.set(LENGTH_FAV, Favourites.find().count());\n\t\t// Session.set(LENGTH_NOT_FAV, Vocabulary.find().count() - Favourites.find().count());\n\t});\n});\n\nTemplate.favouriten.helpers({\n\tfavourites: function () {\n\t\tfunction favourites() {\n\t\t\tvar favIds = R.pluck('vocabularyId')(Favourites.find({}).fetch());\n\t\t\tif (Favourites.find().count() !== 0) {\n\t\t\t\treturn Vocabulary.find({\n\t\t\t\t\t_id: {\n\t\t\t\t\t\t$in: favIds\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tterm: 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn favourites;\n\t}()\n});\n\n// Template.favouriten.events({\n// \t'click .btn-delete' (event, template) {\n// \t\tlet self = this;\n// \t\tconsole.log(self._id);\n// \t\tMeteor.call('deleteFavourite', self._id);\n//\n// \t\tif (Session.get(RANDOM_FAV) && Session.get(COUNT_VIEWED) >= Session.get(LENGTH_FAV) - 1) {\n// \t\t\tlet val = (Session.get(COUNT_VIEWED) + 1) % Session.get(LENGTH_FAV);\n// \t\t\tSession.set(COUNT_VIEWED, val);\n// \t\t}\n// \t\t// set random bar buttons to non fav list if the last entry in fav list has been removed via fav menu\n// \t\tif ((Session.get(LENGTH_FAV) === 1)) {\n// \t\t\tSession.set(RANDOM_FAV, false);\n// \t\t\tSession.set(RANDOM_NOT_FAV, true);\n// \t\t}\n// \t}\n// });","ast":null,"map":{"version":3,"sources":["/client/views/favouriten/favouriten.js"],"names":[],"mappings":"AAAA,SAAS,UAAT,CAAoB,SAApB,CAA8B,YAAW;;;AACxC,MAAK,OAAL,CAAa,YAAM;AAClB,QAAK,SAAL,CAAe,iBAAf,EADkB;AAElB,QAAK,SAAL,CAAe,sBAAf;;;;AAFkB,EAAN,CAAb,CADwC;CAAX,CAA9B;;AAWA,SAAS,UAAT,CAAoB,OAApB,CAA4B;AAC3B;wBAAa;AACZ,OAAI,SAAS,EAAE,KAAF,CAAQ,cAAR,EAAwB,WAAW,IAAX,CAAgB,EAAhB,EAAoB,KAApB,EAAxB,CAAT,CADQ;AAEZ,OAAI,WAAW,IAAX,GAAkB,KAAlB,OAA8B,CAA9B,EAAiC;AACpC,WAAO,WAAW,IAAX,CAAgB;AACtB,UAAK;AACJ,WAAK,MAAL;MADD;KADM,EAIJ;AACF,WAAM;AACL,YAAM,CAAN;MADD;KALM,CAAP,CADoC;IAArC,MAUO;AACN,WAAO,IAAP,CADM;IAVP;;;;IAH0B;CAA5B","file":"/client/views/favouriten/favouriten.js.map","sourcesContent":["Template.favouriten.onCreated(function() {\n\tthis.autorun(() => {\n\t\tthis.subscribe('ownedFavourites');\n\t\tthis.subscribe('vocabularyFavourised');\n\n\t\t// Session.set(LENGTH_FAV, Favourites.find().count());\n\t\t// Session.set(LENGTH_NOT_FAV, Vocabulary.find().count() - Favourites.find().count());\n\t});\n});\n\n\nTemplate.favouriten.helpers({\n\tfavourites() {\n\t\tlet favIds = R.pluck('vocabularyId')(Favourites.find({}).fetch());\n\t\tif (Favourites.find().count() !== 0) {\n\t\t\treturn Vocabulary.find({\n\t\t\t\t_id: {\n\t\t\t\t\t$in: favIds\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\tsort: {\n\t\t\t\t\tterm: 1\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\n// Template.favouriten.events({\n// \t'click .btn-delete' (event, template) {\n// \t\tlet self = this;\n// \t\tconsole.log(self._id);\n// \t\tMeteor.call('deleteFavourite', self._id);\n//\n// \t\tif (Session.get(RANDOM_FAV) && Session.get(COUNT_VIEWED) >= Session.get(LENGTH_FAV) - 1) {\n// \t\t\tlet val = (Session.get(COUNT_VIEWED) + 1) % Session.get(LENGTH_FAV);\n// \t\t\tSession.set(COUNT_VIEWED, val);\n// \t\t}\n// \t\t// set random bar buttons to non fav list if the last entry in fav list has been removed via fav menu\n// \t\tif ((Session.get(LENGTH_FAV) === 1)) {\n// \t\t\tSession.set(RANDOM_FAV, false);\n// \t\t\tSession.set(RANDOM_NOT_FAV, true);\n// \t\t}\n// \t}\n// });\n"]},"hash":"947e21b571c76568ec129aa4b647ed4fc9a3cf4a"}
