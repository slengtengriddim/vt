{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/views/high/index/chart_words_all.js","filenameRelative":"/client/views/high/index/chart_words_all.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/views/high/index/chart_words_all.js.map","sourceFileName":"/client/views/high/index/chart_words_all.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"chart_words_all"},"ignored":false,"code":"Template.chartWordsAll.onCreated(function () {\n    var template = Template.instance();\n    template.subscribe('dataViewed'); // Data.Viewed.find()\n});\n\nTemplate.chartWordsAll.rendered = function () {\n\n    // chart object\n    var chart = nv.models.discreteBarChart().x(function (d) {\n        return d.vocabularyName;\n    }).y(function (d) {\n        return d.timesViewed;\n    }).staggerLabels(true)\n    //.staggerLabels(historicalBarChart[0].values.length > 8)\n    .showValues(true).duration(250);\n\n    // chart details\n    nv.addGraph(function () {\n        var data = Data.Viewed.find({}, {\n            limit: 5,\n            sort: {\n                timesViewed: -1\n            }\n        }).fetch();\n\n        var barChart = [{\n            key: \"Top 5 beliebte Woerter\",\n            values: data\n        }];\n\n        d3.select('#chartWordsAll svg').datum(barChart).call(chart);\n\n        nv.utils.windowResize(chart.update);\n\n        return chart;\n    });\n\n    // update chart when data changes\n    this.autorun(function () {\n        var data = Data.Viewed.find({}, {\n            limit: 5,\n            sort: {\n                timesViewed: -1\n            }\n        }).fetch();\n\n        var barChart = [{\n            key: \"Top 5 beliebte Woerter\",\n            values: data\n        }];\n\n        d3.select('#chartWordsAll svg').datum(barChart).call(chart);\n\n        chart.update();\n    });\n};\n\n// data = Data.Viewed.find({}, {\n//     limit: 5,\n//     sort: {\n//         timesViewed: -1\n//     }\n// });","ast":null,"map":{"version":3,"sources":["/client/views/high/index/chart_words_all.js"],"names":[],"mappings":"AAAA,SAAS,aAAT,CAAuB,SAAvB,CAAiC,YAAM;AACtC,QAAI,WAAW,SAAS,QAAT,EAAX,CADkC;AAErC,aAAS,SAAT,CAAmB,YAAnB;AAFqC,CAAN,CAAjC;;AAKA,SAAS,aAAT,CAAuB,QAAvB,GAAkC,YAAW;;;AAG5C,QAAI,QAAQ,GAAG,MAAH,CAAU,gBAAV,GACN,CADM,CACJ,UAAS,CAAT,EAAY;AAAE,eAAO,EAAE,cAAF,CAAT;KAAZ,CADI,CAEN,CAFM,CAEJ,UAAS,CAAT,EAAY;AAAE,eAAO,EAAE,WAAF,CAAT;KAAZ,CAFI,CAGN,aAHM,CAGQ,IAHR;;KAKN,UALM,CAKK,IALL,EAMN,QANM,CAMG,GANH,CAAR;;;AAHwC,MAa5C,CAAG,QAAH,CAAY,YAAW;AAChB,YAAI,OAAO,KAAK,MAAL,CAAY,IAAZ,CAAiB,EAAjB,EAAqB;AACxB,mBAAO,CAAP;AACA,kBAAM;AACF,6BAAa,CAAC,CAAD;aADjB;SAFG,EAKJ,KALI,EAAP,CADY;;AAQhB,YAAI,WAAW,CACX;AACI,iBAAK,wBAAL;AACA,oBAAQ,IAAR;SAHO,CAAX,CARY;;AAgBtB,WAAG,MAAH,CAAU,oBAAV,EACG,KADH,CACS,QADT,EAEG,IAFH,CAEQ,KAFR,EAhBsB;;AAqBtB,WAAG,KAAH,CAAS,YAAT,CAAsB,MAAM,MAAN,CAAtB,CArBsB;;AAuBtB,eAAO,KAAP,CAvBsB;KAAX,CAAZ;;;AAb4C,QAwC5C,CAAK,OAAL,CAAa,YAAW;AACjB,YAAI,OAAO,KAAK,MAAL,CAAY,IAAZ,CAAiB,EAAjB,EAAqB;AACxB,mBAAO,CAAP;AACA,kBAAM;AACF,6BAAa,CAAC,CAAD;aADjB;SAFG,EAKJ,KALI,EAAP,CADa;;AAQjB,YAAI,WAAW,CACX;AACI,iBAAK,wBAAL;AACA,oBAAQ,IAAR;SAHO,CAAX,CARa;;AAerB,WAAG,MAAH,CAAU,oBAAV,EACA,KADA,CACM,QADN,EAEA,IAFA,CAEK,KAFL,EAfqB;;AAoBxB,cAAM,MAAN,GApBwB;KAAX,CAAb,CAxC4C;CAAX","file":"/client/views/high/index/chart_words_all.js.map","sourcesContent":["Template.chartWordsAll.onCreated(() => {\n\tlet template = Template.instance();\n\t\ttemplate.subscribe('dataViewed'); // Data.Viewed.find()\n});\n\nTemplate.chartWordsAll.rendered = function() {\n\n\t// chart object\n\tlet chart = nv.models.discreteBarChart()\n      .x(function(d) { return d.vocabularyName })\n      .y(function(d) { return d.timesViewed })\n      .staggerLabels(true)\n      //.staggerLabels(historicalBarChart[0].values.length > 8)\n      .showValues(true)\n      .duration(250)\n      ;\n\n\t// chart details\n\tnv.addGraph(function() {\n        let data = Data.Viewed.find({}, {\n                limit: 5,\n                sort: {\n                    timesViewed: -1\n                }\n            }).fetch();\n\n        let barChart = [\n            {\n                key: \"Top 5 beliebte Woerter\",\n                values: data\n            }\n        ];\n\n\n\t\td3.select('#chartWordsAll svg')\n\t\t  .datum(barChart)\n\t\t  .call(chart)\n\t\t  ;\n\n\t\tnv.utils.windowResize(chart.update);\n\n\t\treturn chart;\n\t});\n\n\t// update chart when data changes\n\tthis.autorun(function() {\n        let data = Data.Viewed.find({}, {\n                limit: 5,\n                sort: {\n                    timesViewed: -1\n                }\n            }).fetch();\n\n        let barChart = [\n            {\n                key: \"Top 5 beliebte Woerter\",\n                values: data\n            }\n        ];\n\n    d3.select('#chartWordsAll svg')\n\t  .datum(barChart)\n\t  .call(chart)\n\t  ;\n\n\tchart.update();\n\t});\n\n};\n\n\n// data = Data.Viewed.find({}, {\n//     limit: 5,\n//     sort: {\n//         timesViewed: -1\n//     }\n// });\n"]},"hash":"c0e1f334a2ebdc5c62a8bcef3b46e030bdc399ba"}
