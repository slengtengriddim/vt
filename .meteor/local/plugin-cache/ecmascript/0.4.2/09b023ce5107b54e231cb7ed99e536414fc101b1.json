{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/views/high/stats/charts/chart_bar_modes.js","filenameRelative":"/client/views/high/stats/charts/chart_bar_modes.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/views/high/stats/charts/chart_bar_modes.js.map","sourceFileName":"/client/views/high/stats/charts/chart_bar_modes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"chart_bar_modes"},"ignored":false,"code":"Template.chartBarModes.rendered = function () {\n\tvar data = function data() {\n\t\tvar countLesen = Data.Detail.find({ mode: 'lesen' }).count();\n\t\tvar countWort = Data.Detail.find({ mode: 'wort' }).count();\n\t\tvar countDefinition = Data.Detail.find({ mode: 'definition' }).count();\n\t\tvar countEingabe = Data.Detail.find({ mode: 'eingabe' }).count();\n\n\t\treturn [{\n\t\t\tmode: 'lesen',\n\t\t\tcount: countLesen\n\t\t}, {\n\t\t\tmode: 'wort',\n\t\t\tcount: countWort\n\t\t}, {\n\t\t\tmode: 'definition',\n\t\t\tcount: countDefinition\n\t\t}, {\n\t\t\tmode: 'eingabe',\n\t\t\tcount: countEingabe\n\t\t}];\n\t};\n\n\tvar barChart = function barChart() {\n\t\treturn [{\n\t\t\tkey: \"Browse Modi\",\n\t\t\tvalues: data()\n\t\t}];\n\t};\n\n\t// chart object\n\tvar chart = nv.models.discreteBarChart().x(function (d) {\n\t\treturn d.mode;\n\t}).y(function (d) {\n\t\treturn d.count;\n\t}).valueFormat(d3.format('f')).staggerLabels(true)\n\t//.staggerLabels(historicalBarChart[0].values.length > 8)\n\t.showValues(true).duration(250);\n\n\t// chart details\n\tnv.addGraph(function () {\n\t\td3.select('#chartBarModes svg').datum(barChart()).call(chart);\n\t\tnv.utils.windowResize(chart.update);\n\t\treturn chart;\n\t});\n\n\t// update chart when data changes\n\tthis.autorun(function () {\n\t\td3.select('#chartBarModes svg').datum(barChart()).call(chart);\n\t\tchart.update();\n\t});\n};","ast":null,"map":{"version":3,"sources":["/client/views/high/stats/charts/chart_bar_modes.js"],"names":[],"mappings":"AAAA,SAAS,aAAT,CAAuB,QAAvB,GAAkC,YAAW;AAC5C,KAAI,OAAO,SAAP,IAAO,GAAM;AAChB,MAAI,aAAa,KAAK,MAAL,CAAY,IAAZ,CAAiB,EAAC,MAAM,OAAN,EAAlB,EAAkC,KAAlC,EAAb,CADY;AAEhB,MAAI,YAAY,KAAK,MAAL,CAAY,IAAZ,CAAiB,EAAC,MAAM,MAAN,EAAlB,EAAiC,KAAjC,EAAZ,CAFY;AAGhB,MAAI,kBAAkB,KAAK,MAAL,CAAY,IAAZ,CAAiB,EAAC,MAAM,YAAN,EAAlB,EAAuC,KAAvC,EAAlB,CAHY;AAIhB,MAAI,eAAe,KAAK,MAAL,CAAY,IAAZ,CAAiB,EAAC,MAAM,SAAN,EAAlB,EAAoC,KAApC,EAAf,CAJY;;AAMhB,SAAO,CAAC;AACP,SAAM,OAAN;AACA,UAAO,UAAP;GAFM,EAGL;AACD,SAAM,MAAN;AACA,UAAO,SAAP;GALM,EAML;AACD,SAAM,YAAN;AACA,UAAO,eAAP;GARM,EASL;AACD,SAAM,SAAN;AACA,UAAO,YAAP;GAXM,CAAP,CANgB;EAAN,CADiC;;AAsB5C,KAAI,WAAW,SAAX,QAAW,GAAM;AACpB,SAAO,CAAC;AACP,QAAK,aAAL;AACA,WAAQ,MAAR;GAFM,CAAP,CADoB;EAAN;;;AAtB6B,KA8BxC,QAAQ,GAAG,MAAH,CAAU,gBAAV,GACV,CADU,CACR,UAAS,CAAT,EAAY;AACd,SAAO,EAAE,IAAF,CADO;EAAZ,CADQ,CAIV,CAJU,CAIR,UAAS,CAAT,EAAY;AACd,SAAO,EAAE,KAAF,CADO;EAAZ,CAJQ,CAOV,WAPU,CAOE,GAAG,MAAH,CAAU,GAAV,CAPF,EAQV,aARU,CAQI,IARJ;;EAUV,UAVU,CAUC,IAVD,EAWV,QAXU,CAWD,GAXC,CAAR;;;AA9BwC,GA4C5C,CAAG,QAAH,CAAY,YAAW;AACtB,KAAG,MAAH,CAAU,oBAAV,EACE,KADF,CACQ,UADR,EAEE,IAFF,CAEO,KAFP,EADsB;AAItB,KAAG,KAAH,CAAS,YAAT,CAAsB,MAAM,MAAN,CAAtB,CAJsB;AAKtB,SAAO,KAAP,CALsB;EAAX,CAAZ;;;AA5C4C,KAqD5C,CAAK,OAAL,CAAa,YAAW;AACvB,KAAG,MAAH,CAAU,oBAAV,EACE,KADF,CACQ,UADR,EAEE,IAFF,CAEO,KAFP,EADuB;AAIvB,QAAM,MAAN,GAJuB;EAAX,CAAb,CArD4C;CAAX","file":"/client/views/high/stats/charts/chart_bar_modes.js.map","sourcesContent":["Template.chartBarModes.rendered = function() {\n\tlet data = () => {\n\t\tlet countLesen = Data.Detail.find({mode: 'lesen'}).count();\n\t\tlet countWort = Data.Detail.find({mode: 'wort'}).count();\n\t\tlet countDefinition = Data.Detail.find({mode: 'definition'}).count();\n\t\tlet countEingabe = Data.Detail.find({mode: 'eingabe'}).count();\n\n\t\treturn [{\n\t\t\tmode: 'lesen',\n\t\t\tcount: countLesen\n\t\t},{\n\t\t\tmode: 'wort',\n\t\t\tcount: countWort\n\t\t},{\n\t\t\tmode: 'definition',\n\t\t\tcount: countDefinition\n\t\t},{\n\t\t\tmode: 'eingabe',\n\t\t\tcount: countEingabe\n\t\t}];\n\t};\n\n\tlet barChart = () => {\n\t\treturn [{\n\t\t\tkey: \"Browse Modi\",\n\t\t\tvalues: data()\n\t\t}]\n\t};\n\n\t// chart object\n\tlet chart = nv.models.discreteBarChart()\n\t\t.x(function(d) {\n\t\t\treturn d.mode\n\t\t})\n\t\t.y(function(d) {\n\t\t\treturn d.count\n\t\t})\n\t\t.valueFormat(d3.format('f'))\n\t\t.staggerLabels(true)\n\t\t//.staggerLabels(historicalBarChart[0].values.length > 8)\n\t\t.showValues(true)\n\t\t.duration(250);\n\n\t// chart details\n\tnv.addGraph(function() {\n\t\td3.select('#chartBarModes svg')\n\t\t\t.datum(barChart())\n\t\t\t.call(chart);\n\t\tnv.utils.windowResize(chart.update);\n\t\treturn chart;\n\t});\n\n\t// update chart when data changes\n\tthis.autorun(function() {\n\t\td3.select('#chartBarModes svg')\n\t\t\t.datum(barChart())\n\t\t\t.call(chart);\n\t\tchart.update();\n\t});\n};\n"]},"hash":"09b023ce5107b54e231cb7ed99e536414fc101b1"}
