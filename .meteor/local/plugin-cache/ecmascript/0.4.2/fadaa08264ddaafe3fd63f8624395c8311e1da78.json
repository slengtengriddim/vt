{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/views/high/uebersicht/charts/status/chart_line_online_user.js","filenameRelative":"/client/views/high/uebersicht/charts/status/chart_line_online_user.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/views/high/uebersicht/charts/status/chart_line_online_user.js.map","sourceFileName":"/client/views/high/uebersicht/charts/status/chart_line_online_user.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"chart_line_online_user"},"ignored":false,"code":"Template.chartLineOnlineUser.rendered = function () {\n\n\tvar chart = nv.models.lineChart().margin({\n\t\tleft: 200\n\t}) //Adjust chart margins to give the x-axis some breathing room.\n\t.useInteractiveGuideline(true) //We want nice looking tooltips and a guideline!\n\t.duration(350) //how fast do you want the lines to transition?\n\t.showLegend(true) //Show the legend, allowing users to turn on/off line series.\n\t.showYAxis(true) //Show the y-axis\n\t.showXAxis(true).x(function (d) {\n\t\treturn d.x;\n\t}).y(function (d) {\n\t\treturn d.y;\n\t});\n\n\t// chart.xAxis\n\t// .axisLabel(\"Time (s)\")\n\t// .tickFormat(d3.format(',.1f'))\n\t// .staggerLabels(true);\n\n\t// .tickFormat(function(d) {\n\t// \treturn d3.time.format('%e, %H:%M')(new Date(d))\n\t// });\n\n\t// chart.yAxis\n\t// \t.axisLabel('Voltage (v)')\n\t// \t.tickFormat(function(d) {\n\t// \t\tif (d == null) {\n\t// \t\t\treturn 'N/A';\n\t// \t\t}\n\t// \t\treturn d3.format(',.2f')(d);\n\t// \t});\n\tchart.yAxis.tickFormat(function (d) {\n\t\t// return d3.time.format('%-H h : %M m : %S s')(new Date(d))\n\t\tvar date = new Date(d);\n\t\tdate.setHours(date.getHours() - 1);\n\t\tconsole.log(date.getHours());\n\t\tif (date.getHours() === 0) {\n\t\t\treturn d3.time.format('%M min : %S sec')(date);\n\t\t} else {\n\t\t\treturn d3.time.format('%-H h : %M min : %S sec')(date);\n\t\t}\n\t});\n\n\tnv.addGraph(function () {\n\t\td3.select('#chartLineOnlineUser svg').datum(data()).call(chart);\n\n\t\tnv.utils.windowResize(chart.update);\n\n\t\treturn chart;\n\t});\n\n\t// update chart when data changes\n\tthis.autorun(function () {\n\t\td3.select('#chartLineOnlineUser svg').datum(data()).call(chart);\n\n\t\tchart.update();\n\t});\n\n\tfunction data() {\n\t\tvar result = [];\n\t\tvar data = Data.Status.find({}, {\n\t\t\tsort: {\n\t\t\t\ttimestamp: 1\n\t\t\t}\n\t\t}).fetch();\n\t\tvar byUser = R.groupBy(function (entry) {\n\t\t\treturn entry.userId;\n\t\t});\n\t\tvar byDate = R.groupBy(function (entry) {\n\t\t\tvar day = entry.timestamp;\n\t\t\tif (entry.timestamp.getDate()) {\n\t\t\t\treturn day.getDate();\n\t\t\t}\n\t\t});\n\t\tvar online = void 0;\n\t\tvar offline = void 0;\n\t\tvar isOnline = function isOnline(n, m) {\n\t\t\treturn n.status === \"online\";\n\t\t};\n\t\tvar isOffline = function isOffline(n, m) {\n\t\t\treturn n.status === \"offline\";\n\t\t};\n\t\tvar getRange = function getRange(n) {\n\t\t\treturn n[1] - n[0];\n\t\t};\n\n\t\tvar groupedByUser = byUser(data);\n\n\t\tfor (var k in meteorBabelHelpers.sanitizeForInObject(groupedByUser)) {\n\t\t\tif (groupedByUser.hasOwnProperty(k)) {\n\t\t\t\t// console.log(k);\n\t\t\t\tvar userValues = [];\n\t\t\t\tvar userStream = {\n\t\t\t\t\tvalues: userValues,\n\t\t\t\t\tkey: k, // userId\n\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\tclassed: 'dashed'\n\t\t\t\t};\n\n\t\t\t\tvar groupedByDate = byDate(groupedByUser[k]);\n\t\t\t\t// console.log(groupedByDate);\n\t\t\t\tfor (var l in meteorBabelHelpers.sanitizeForInObject(groupedByDate)) {\n\t\t\t\t\tif (groupedByDate.hasOwnProperty(l)) {\n\t\t\t\t\t\tonline = R.pluck('timestamp')(R.filter(isOnline, groupedByDate[l]));\n\t\t\t\t\t\toffline = R.pluck('timestamp')(R.filter(isOffline, groupedByDate[l]));\n\n\t\t\t\t\t\tvar onOff = R.zip(online, offline);\n\t\t\t\t\t\tvar timeRanges = R.map(getRange, onOff);\n\t\t\t\t\t\tvar timeTotalPerDatePerUser = R.sum(timeRanges);\n\t\t\t\t\t\t// console.log(l);\n\t\t\t\t\t\t// console.log(timeTotalPerDatePerUser);\n\t\t\t\t\t\tuserValues.push({\n\t\t\t\t\t\t\tx: l, // date\n\t\t\t\t\t\t\ty: timeTotalPerDatePerUser\n\t\t\t\t\t\t}); //the nulls are to show how defined works\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tresult.push(userStream);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t};\n};","ast":null,"map":{"version":3,"sources":["/client/views/high/uebersicht/charts/status/chart_line_online_user.js"],"names":[],"mappings":"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","file":"/client/views/high/uebersicht/charts/status/chart_line_online_user.js.map","sourcesContent":["Template.chartLineOnlineUser.rendered = function() {\n\n\tvar chart = nv.models.lineChart()\n\t\t.margin({\n\t\t\tleft: 200\n\t\t}) //Adjust chart margins to give the x-axis some breathing room.\n\t\t.useInteractiveGuideline(true) //We want nice looking tooltips and a guideline!\n\t\t.duration(350) //how fast do you want the lines to transition?\n\t\t.showLegend(true) //Show the legend, allowing users to turn on/off line series.\n\t\t.showYAxis(true) //Show the y-axis\n\t\t.showXAxis(true)\n\t\t.x(function(d) {\n\t\t\treturn d.x\n\t\t})\n\t\t.y(function(d) {\n\t\t\treturn d.y\n\t\t});\n\n\t// chart.xAxis\n\t// .axisLabel(\"Time (s)\")\n\t// .tickFormat(d3.format(',.1f'))\n\t// .staggerLabels(true);\n\n\t// .tickFormat(function(d) {\n\t// \treturn d3.time.format('%e, %H:%M')(new Date(d))\n\t// });\n\n\t// chart.yAxis\n\t// \t.axisLabel('Voltage (v)')\n\t// \t.tickFormat(function(d) {\n\t// \t\tif (d == null) {\n\t// \t\t\treturn 'N/A';\n\t// \t\t}\n\t// \t\treturn d3.format(',.2f')(d);\n\t// \t});\n\tchart.yAxis\n\t\t.tickFormat(function(d) {\n\t\t\t// return d3.time.format('%-H h : %M m : %S s')(new Date(d))\n\t\t\tvar date = new Date(d);\n\t\t\tdate.setHours(date.getHours()-1);\n\t\t\tconsole.log(date.getHours());\n\t\t\tif (date.getHours() === 0) {\n\t\t\t\treturn d3.time.format('%M min : %S sec')(date)\n\t\t\t} else {\n\t\t\t\treturn d3.time.format('%-H h : %M min : %S sec')(date)\n\t\t\t}\n\t\t});\n\n\tnv.addGraph(function() {\n\t\td3.select('#chartLineOnlineUser svg')\n\t\t\t.datum(data())\n\t\t\t.call(chart);\n\n\t\tnv.utils.windowResize(chart.update);\n\n\t\treturn chart;\n\t});\n\n\t// update chart when data changes\n\tthis.autorun(function() {\n\t\td3.select('#chartLineOnlineUser svg')\n\t\t\t.datum(data())\n\t\t\t.call(chart);\n\n\t\tchart.update();\n\t});\n\n\tfunction data() {\n\t\tlet result = [];\n\t\tlet data = Data.Status.find({}, {\n\t\t\tsort: {\n\t\t\t\ttimestamp: 1\n\t\t\t}\n\t\t}).fetch();\n\t\tlet byUser = R.groupBy(function(entry) {\n\t\t\treturn entry.userId;\n\t\t});\n\t\tlet byDate = R.groupBy(function(entry) {\n\t\t\tlet day = entry.timestamp;\n\t\t\tif (entry.timestamp.getDate()) {\n\t\t\t\treturn day.getDate();\n\t\t\t}\n\t\t});\n\t\tlet online;\n\t\tlet offline;\n\t\tlet isOnline = (n, m) => n.status === \"online\";\n\t\tlet isOffline = (n, m) => n.status === \"offline\";\n\t\tlet getRange = n => n[1] - n[0];\n\n\t\tlet groupedByUser = byUser(data);\n\n\t\tfor (let k in groupedByUser) {\n\t\t\tif (groupedByUser.hasOwnProperty(k)) {\n\t\t\t\t// console.log(k);\n\t\t\t\tlet userValues = [];\n\t\t\t\tlet userStream = {\n\t\t\t\t\tvalues: userValues,\n\t\t\t\t\tkey: k, // userId\n\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\tclassed: 'dashed'\n\t\t\t\t}\n\n\t\t\t\tlet groupedByDate = byDate(groupedByUser[k]);\n\t\t\t\t// console.log(groupedByDate);\n\t\t\t\tfor (let l in groupedByDate) {\n\t\t\t\t\tif (groupedByDate.hasOwnProperty(l)) {\n\t\t\t\t\t\tonline = R.pluck('timestamp')(R.filter(isOnline, groupedByDate[l]));\n\t\t\t\t\t\toffline = R.pluck('timestamp')(R.filter(isOffline, groupedByDate[l]));\n\n\t\t\t\t\t\tlet onOff = R.zip(online, offline);\n\t\t\t\t\t\tlet timeRanges = R.map(getRange, onOff);\n\t\t\t\t\t\tlet timeTotalPerDatePerUser = R.sum(timeRanges);\n\t\t\t\t\t\t// console.log(l);\n\t\t\t\t\t\t// console.log(timeTotalPerDatePerUser);\n\t\t\t\t\t\tuserValues.push({\n\t\t\t\t\t\t\tx: l, // date\n\t\t\t\t\t\t\ty: timeTotalPerDatePerUser\n\t\t\t\t\t\t}); //the nulls are to show how defined works\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tresult.push(userStream);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t};\n}\n"]},"hash":"fadaa08264ddaafe3fd63f8624395c8311e1da78"}
