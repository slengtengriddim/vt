{"version":3,"sources":["meteor://ðŸ’»app/packages/chrismbeckett_toastr/packages/chrismbeckett_toastr.js"],"names":[],"mappingsfile":"/packages/chrismbeckett_toastr.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/chrismbeckett:toastr/lib/toastr.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*                                                                                                                     // 1\n * Toastr                                                                                                              // 2\n * Copyright 2012-2015                                                                                                 // 3\n * Authors: John Papa, Hans FjÃ¤llemark, and Tim Ferrell.                                                               // 4\n * All Rights Reserved.                                                                                                // 5\n * Use, reproduction, distribution, and modification of this code is subject to the terms and                          // 6\n * conditions of the MIT license, available at http://www.opensource.org/licenses/mit-license.php                      // 7\n *                                                                                                                     // 8\n * ARIA Support: Greta Krafsig                                                                                         // 9\n *                                                                                                                     // 10\n * Project: https://github.com/CodeSeven/toastr                                                                        // 11\n */                                                                                                                    // 12\n/* global define */                                                                                                    // 13\n; (function (define) {                                                                                                 // 14\n    define(['jquery'], function ($) {                                                                                  // 15\n        return (function () {                                                                                          // 16\n            var $container;                                                                                            // 17\n            var listener;                                                                                              // 18\n            var toastId = 0;                                                                                           // 19\n            var toastType = {                                                                                          // 20\n                error: 'error',                                                                                        // 21\n                info: 'info',                                                                                          // 22\n                success: 'success',                                                                                    // 23\n                warning: 'warning'                                                                                     // 24\n            };                                                                                                         // 25\n                                                                                                                       // 26\n            var toastr = {                                                                                             // 27\n                clear: clear,                                                                                          // 28\n                remove: remove,                                                                                        // 29\n                error: error,                                                                                          // 30\n                getContainer: getContainer,                                                                            // 31\n                info: info,                                                                                            // 32\n                options: {},                                                                                           // 33\n                subscribe: subscribe,                                                                                  // 34\n                success: success,                                                                                      // 35\n                version: '2.1.2',                                                                                      // 36\n                warning: warning                                                                                       // 37\n            };                                                                                                         // 38\n                                                                                                                       // 39\n            var previousToast;                                                                                         // 40\n                                                                                                                       // 41\n            return toastr;                                                                                             // 42\n                                                                                                                       // 43\n            ////////////////                                                                                           // 44\n                                                                                                                       // 45\n            function error(message, title, optionsOverride) {                                                          // 46\n                return notify({                                                                                        // 47\n                    type: toastType.error,                                                                             // 48\n                    iconClass: getOptions().iconClasses.error,                                                         // 49\n                    message: message,                                                                                  // 50\n                    optionsOverride: optionsOverride,                                                                  // 51\n                    title: title                                                                                       // 52\n                });                                                                                                    // 53\n            }                                                                                                          // 54\n                                                                                                                       // 55\n            function getContainer(options, create) {                                                                   // 56\n                if (!options) { options = getOptions(); }                                                              // 57\n                $container = $('#' + options.containerId);                                                             // 58\n                if ($container.length) {                                                                               // 59\n                    return $container;                                                                                 // 60\n                }                                                                                                      // 61\n                if (create) {                                                                                          // 62\n                    $container = createContainer(options);                                                             // 63\n                }                                                                                                      // 64\n                return $container;                                                                                     // 65\n            }                                                                                                          // 66\n                                                                                                                       // 67\n            function info(message, title, optionsOverride) {                                                           // 68\n                return notify({                                                                                        // 69\n                    type: toastType.info,                                                                              // 70\n                    iconClass: getOptions().iconClasses.info,                                                          // 71\n                    message: message,                                                                                  // 72\n                    optionsOverride: optionsOverride,                                                                  // 73\n                    title: title                                                                                       // 74\n                });                                                                                                    // 75\n            }                                                                                                          // 76\n                                                                                                                       // 77\n            function subscribe(callback) {                                                                             // 78\n                listener = callback;                                                                                   // 79\n            }                                                                                                          // 80\n                                                                                                                       // 81\n            function success(message, title, optionsOverride) {                                                        // 82\n                return notify({                                                                                        // 83\n                    type: toastType.success,                                                                           // 84\n                    iconClass: getOptions().iconClasses.success,                                                       // 85\n                    message: message,                                                                                  // 86\n                    optionsOverride: optionsOverride,                                                                  // 87\n                    title: title                                                                                       // 88\n                });                                                                                                    // 89\n            }                                                                                                          // 90\n                                                                                                                       // 91\n            function warning(message, title, optionsOverride) {                                                        // 92\n                return notify({                                                                                        // 93\n                    type: toastType.warning,                                                                           // 94\n                    iconClass: getOptions().iconClasses.warning,                                                       // 95\n                    message: message,                                                                                  // 96\n                    optionsOverride: optionsOverride,                                                                  // 97\n                    title: title                                                                                       // 98\n                });                                                                                                    // 99\n            }                                                                                                          // 100\n                                                                                                                       // 101\n            function clear($toastElement, clearOptions) {                                                              // 102\n                var options = getOptions();                                                                            // 103\n                if (!$container) { getContainer(options); }                                                            // 104\n                if (!clearToast($toastElement, options, clearOptions)) {                                               // 105\n                    clearContainer(options);                                                                           // 106\n                }                                                                                                      // 107\n            }                                                                                                          // 108\n                                                                                                                       // 109\n            function remove($toastElement) {                                                                           // 110\n                var options = getOptions();                                                                            // 111\n                if (!$container) { getContainer(options); }                                                            // 112\n                if ($toastElement && $(':focus', $toastElement).length === 0) {                                        // 113\n                    removeToast($toastElement);                                                                        // 114\n                    return;                                                                                            // 115\n                }                                                                                                      // 116\n                if ($container.children().length) {                                                                    // 117\n                    $container.remove();                                                                               // 118\n                }                                                                                                      // 119\n            }                                                                                                          // 120\n                                                                                                                       // 121\n            // internal functions                                                                                      // 122\n                                                                                                                       // 123\n            function clearContainer (options) {                                                                        // 124\n                var toastsToClear = $container.children();                                                             // 125\n                for (var i = toastsToClear.length - 1; i >= 0; i--) {                                                  // 126\n                    clearToast($(toastsToClear[i]), options);                                                          // 127\n                }                                                                                                      // 128\n            }                                                                                                          // 129\n                                                                                                                       // 130\n            function clearToast ($toastElement, options, clearOptions) {                                               // 131\n                var force = clearOptions && clearOptions.force ? clearOptions.force : false;                           // 132\n                if ($toastElement && (force || $(':focus', $toastElement).length === 0)) {                             // 133\n                    $toastElement[options.hideMethod]({                                                                // 134\n                        duration: options.hideDuration,                                                                // 135\n                        easing: options.hideEasing,                                                                    // 136\n                        complete: function () { removeToast($toastElement); }                                          // 137\n                    });                                                                                                // 138\n                    return true;                                                                                       // 139\n                }                                                                                                      // 140\n                return false;                                                                                          // 141\n            }                                                                                                          // 142\n                                                                                                                       // 143\n            function createContainer(options) {                                                                        // 144\n                $container = $('<div/>')                                                                               // 145\n                    .attr('id', options.containerId)                                                                   // 146\n                    .addClass(options.positionClass)                                                                   // 147\n                    .attr('aria-live', 'polite')                                                                       // 148\n                    .attr('role', 'alert');                                                                            // 149\n                                                                                                                       // 150\n                $container.appendTo($(options.target));                                                                // 151\n                return $container;                                                                                     // 152\n            }                                                                                                          // 153\n                                                                                                                       // 154\n            function getDefaults() {                                                                                   // 155\n                return {                                                                                               // 156\n                    tapToDismiss: true,                                                                                // 157\n                    toastClass: 'toast',                                                                               // 158\n                    containerId: 'toast-container',                                                                    // 159\n                    debug: false,                                                                                      // 160\n                                                                                                                       // 161\n                    showMethod: 'fadeIn', //fadeIn, slideDown, and show are built into jQuery                          // 162\n                    showDuration: 300,                                                                                 // 163\n                    showEasing: 'swing', //swing and linear are built into jQuery                                      // 164\n                    onShown: undefined,                                                                                // 165\n                    hideMethod: 'fadeOut',                                                                             // 166\n                    hideDuration: 1000,                                                                                // 167\n                    hideEasing: 'swing',                                                                               // 168\n                    onHidden: undefined,                                                                               // 169\n                    closeMethod: false,                                                                                // 170\n                    closeDuration: false,                                                                              // 171\n                    closeEasing: false,                                                                                // 172\n                                                                                                                       // 173\n                    extendedTimeOut: 1000,                                                                             // 174\n                    iconClasses: {                                                                                     // 175\n                        error: 'toast-error',                                                                          // 176\n                        info: 'toast-info',                                                                            // 177\n                        success: 'toast-success',                                                                      // 178\n                        warning: 'toast-warning'                                                                       // 179\n                    },                                                                                                 // 180\n                    iconClass: 'toast-info',                                                                           // 181\n                    positionClass: 'toast-top-right',                                                                  // 182\n                    timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky                           // 183\n                    titleClass: 'toast-title',                                                                         // 184\n                    messageClass: 'toast-message',                                                                     // 185\n                    escapeHtml: false,                                                                                 // 186\n                    target: 'body',                                                                                    // 187\n                    closeHtml: '<button type=\"button\">&times;</button>',                                               // 188\n                    newestOnTop: true,                                                                                 // 189\n                    preventDuplicates: false,                                                                          // 190\n                    progressBar: false                                                                                 // 191\n                };                                                                                                     // 192\n            }                                                                                                          // 193\n                                                                                                                       // 194\n            function publish(args) {                                                                                   // 195\n                if (!listener) { return; }                                                                             // 196\n                listener(args);                                                                                        // 197\n            }                                                                                                          // 198\n                                                                                                                       // 199\n            function notify(map) {                                                                                     // 200\n                var options = getOptions();                                                                            // 201\n                var iconClass = map.iconClass || options.iconClass;                                                    // 202\n                                                                                                                       // 203\n                if (typeof (map.optionsOverride) !== 'undefined') {                                                    // 204\n                    options = $.extend(options, map.optionsOverride);                                                  // 205\n                    iconClass = map.optionsOverride.iconClass || iconClass;                                            // 206\n                }                                                                                                      // 207\n                                                                                                                       // 208\n                if (shouldExit(options, map)) { return; }                                                              // 209\n                                                                                                                       // 210\n                toastId++;                                                                                             // 211\n                                                                                                                       // 212\n                $container = getContainer(options, true);                                                              // 213\n                                                                                                                       // 214\n                var intervalId = null;                                                                                 // 215\n                var $toastElement = $('<div/>');                                                                       // 216\n                var $titleElement = $('<div/>');                                                                       // 217\n                var $messageElement = $('<div/>');                                                                     // 218\n                var $progressElement = $('<div/>');                                                                    // 219\n                var $closeElement = $(options.closeHtml);                                                              // 220\n                var progressBar = {                                                                                    // 221\n                    intervalId: null,                                                                                  // 222\n                    hideEta: null,                                                                                     // 223\n                    maxHideTime: null                                                                                  // 224\n                };                                                                                                     // 225\n                var response = {                                                                                       // 226\n                    toastId: toastId,                                                                                  // 227\n                    state: 'visible',                                                                                  // 228\n                    startTime: new Date(),                                                                             // 229\n                    options: options,                                                                                  // 230\n                    map: map                                                                                           // 231\n                };                                                                                                     // 232\n                                                                                                                       // 233\n                personalizeToast();                                                                                    // 234\n                                                                                                                       // 235\n                displayToast();                                                                                        // 236\n                                                                                                                       // 237\n                handleEvents();                                                                                        // 238\n                                                                                                                       // 239\n                publish(response);                                                                                     // 240\n                                                                                                                       // 241\n                if (options.debug && console) {                                                                        // 242\n                    console.log(response);                                                                             // 243\n                }                                                                                                      // 244\n                                                                                                                       // 245\n                return $toastElement;                                                                                  // 246\n                                                                                                                       // 247\n                function escapeHtml(source) {                                                                          // 248\n                    if (source == null)                                                                                // 249\n                        source = \"\";                                                                                   // 250\n                                                                                                                       // 251\n                    return new String(source)                                                                          // 252\n                        .replace(/&/g, '&amp;')                                                                        // 253\n                        .replace(/\"/g, '&quot;')                                                                       // 254\n                        .replace(/'/g, '&#39;')                                                                        // 255\n                        .replace(/</g, '&lt;')                                                                         // 256\n                        .replace(/>/g, '&gt;');                                                                        // 257\n                }                                                                                                      // 258\n                                                                                                                       // 259\n                function personalizeToast() {                                                                          // 260\n                    setIcon();                                                                                         // 261\n                    setTitle();                                                                                        // 262\n                    setMessage();                                                                                      // 263\n                    setCloseButton();                                                                                  // 264\n                    setProgressBar();                                                                                  // 265\n                    setSequence();                                                                                     // 266\n                }                                                                                                      // 267\n                                                                                                                       // 268\n                function handleEvents() {                                                                              // 269\n                    $toastElement.hover(stickAround, delayedHideToast);                                                // 270\n                    if (!options.onclick && options.tapToDismiss) {                                                    // 271\n                        $toastElement.click(hideToast);                                                                // 272\n                    }                                                                                                  // 273\n                                                                                                                       // 274\n                    if (options.closeButton && $closeElement) {                                                        // 275\n                        $closeElement.click(function (event) {                                                         // 276\n                            if (event.stopPropagation) {                                                               // 277\n                                event.stopPropagation();                                                               // 278\n                            } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {              // 279\n                                event.cancelBubble = true;                                                             // 280\n                            }                                                                                          // 281\n                            hideToast(true);                                                                           // 282\n                        });                                                                                            // 283\n                    }                                                                                                  // 284\n                                                                                                                       // 285\n                    if (options.onclick) {                                                                             // 286\n                        $toastElement.click(function (event) {                                                         // 287\n                            options.onclick(event);                                                                    // 288\n                            hideToast();                                                                               // 289\n                        });                                                                                            // 290\n                    }                                                                                                  // 291\n                }                                                                                                      // 292\n                                                                                                                       // 293\n                function displayToast() {                                                                              // 294\n                    $toastElement.hide();                                                                              // 295\n                                                                                                                       // 296\n                    $toastElement[options.showMethod](                                                                 // 297\n                        {duration: options.showDuration, easing: options.showEasing, complete: options.onShown}        // 298\n                    );                                                                                                 // 299\n                                                                                                                       // 300\n                    if (options.timeOut > 0) {                                                                         // 301\n                        intervalId = setTimeout(hideToast, options.timeOut);                                           // 302\n                        progressBar.maxHideTime = parseFloat(options.timeOut);                                         // 303\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;                          // 304\n                        if (options.progressBar) {                                                                     // 305\n                            progressBar.intervalId = setInterval(updateProgress, 10);                                  // 306\n                        }                                                                                              // 307\n                    }                                                                                                  // 308\n                }                                                                                                      // 309\n                                                                                                                       // 310\n                function setIcon() {                                                                                   // 311\n                    if (map.iconClass) {                                                                               // 312\n                        $toastElement.addClass(options.toastClass).addClass(iconClass);                                // 313\n                    }                                                                                                  // 314\n                }                                                                                                      // 315\n                                                                                                                       // 316\n                function setSequence() {                                                                               // 317\n                    if (options.newestOnTop) {                                                                         // 318\n                        $container.prepend($toastElement);                                                             // 319\n                    } else {                                                                                           // 320\n                        $container.append($toastElement);                                                              // 321\n                    }                                                                                                  // 322\n                }                                                                                                      // 323\n                                                                                                                       // 324\n                function setTitle() {                                                                                  // 325\n                    if (map.title) {                                                                                   // 326\n                        $titleElement.append(!options.escapeHtml ? map.title : escapeHtml(map.title)).addClass(options.titleClass);\n                        $toastElement.append($titleElement);                                                           // 328\n                    }                                                                                                  // 329\n                }                                                                                                      // 330\n                                                                                                                       // 331\n                function setMessage() {                                                                                // 332\n                    if (map.message) {                                                                                 // 333\n                        $messageElement.append(!options.escapeHtml ? map.message : escapeHtml(map.message)).addClass(options.messageClass);\n                        $toastElement.append($messageElement);                                                         // 335\n                    }                                                                                                  // 336\n                }                                                                                                      // 337\n                                                                                                                       // 338\n                function setCloseButton() {                                                                            // 339\n                    if (options.closeButton) {                                                                         // 340\n                        $closeElement.addClass('toast-close-button').attr('role', 'button');                           // 341\n                        $toastElement.prepend($closeElement);                                                          // 342\n                    }                                                                                                  // 343\n                }                                                                                                      // 344\n                                                                                                                       // 345\n                function setProgressBar() {                                                                            // 346\n                    if (options.progressBar) {                                                                         // 347\n                        $progressElement.addClass('toast-progress');                                                   // 348\n                        $toastElement.prepend($progressElement);                                                       // 349\n                    }                                                                                                  // 350\n                }                                                                                                      // 351\n                                                                                                                       // 352\n                function shouldExit(options, map) {                                                                    // 353\n                    if (options.preventDuplicates) {                                                                   // 354\n                        if (map.message === previousToast) {                                                           // 355\n                            return true;                                                                               // 356\n                        } else {                                                                                       // 357\n                            previousToast = map.message;                                                               // 358\n                        }                                                                                              // 359\n                    }                                                                                                  // 360\n                    return false;                                                                                      // 361\n                }                                                                                                      // 362\n                                                                                                                       // 363\n                function hideToast(override) {                                                                         // 364\n                    var method = override && options.closeMethod !== false ? options.closeMethod : options.hideMethod; // 365\n                    var duration = override && options.closeDuration !== false ?                                       // 366\n                        options.closeDuration : options.hideDuration;                                                  // 367\n                    var easing = override && options.closeEasing !== false ? options.closeEasing : options.hideEasing; // 368\n                    if ($(':focus', $toastElement).length && !override) {                                              // 369\n                        return;                                                                                        // 370\n                    }                                                                                                  // 371\n                    clearTimeout(progressBar.intervalId);                                                              // 372\n                    return $toastElement[method]({                                                                     // 373\n                        duration: duration,                                                                            // 374\n                        easing: easing,                                                                                // 375\n                        complete: function () {                                                                        // 376\n                            removeToast($toastElement);                                                                // 377\n                            if (options.onHidden && response.state !== 'hidden') {                                     // 378\n                                options.onHidden();                                                                    // 379\n                            }                                                                                          // 380\n                            response.state = 'hidden';                                                                 // 381\n                            response.endTime = new Date();                                                             // 382\n                            publish(response);                                                                         // 383\n                        }                                                                                              // 384\n                    });                                                                                                // 385\n                }                                                                                                      // 386\n                                                                                                                       // 387\n                function delayedHideToast() {                                                                          // 388\n                    if (options.timeOut > 0 || options.extendedTimeOut > 0) {                                          // 389\n                        intervalId = setTimeout(hideToast, options.extendedTimeOut);                                   // 390\n                        progressBar.maxHideTime = parseFloat(options.extendedTimeOut);                                 // 391\n                        progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;                          // 392\n                    }                                                                                                  // 393\n                }                                                                                                      // 394\n                                                                                                                       // 395\n                function stickAround() {                                                                               // 396\n                    clearTimeout(intervalId);                                                                          // 397\n                    progressBar.hideEta = 0;                                                                           // 398\n                    $toastElement.stop(true, true)[options.showMethod](                                                // 399\n                        {duration: options.showDuration, easing: options.showEasing}                                   // 400\n                    );                                                                                                 // 401\n                }                                                                                                      // 402\n                                                                                                                       // 403\n                function updateProgress() {                                                                            // 404\n                    var percentage = ((progressBar.hideEta - (new Date().getTime())) / progressBar.maxHideTime) * 100; // 405\n                    $progressElement.width(percentage + '%');                                                          // 406\n                }                                                                                                      // 407\n            }                                                                                                          // 408\n                                                                                                                       // 409\n            function getOptions() {                                                                                    // 410\n                return $.extend({}, getDefaults(), toastr.options);                                                    // 411\n            }                                                                                                          // 412\n                                                                                                                       // 413\n            function removeToast($toastElement) {                                                                      // 414\n                if (!$container) { $container = getContainer(); }                                                      // 415\n                if ($toastElement.is(':visible')) {                                                                    // 416\n                    return;                                                                                            // 417\n                }                                                                                                      // 418\n                $toastElement.remove();                                                                                // 419\n                $toastElement = null;                                                                                  // 420\n                if ($container.children().length === 0) {                                                              // 421\n                    $container.remove();                                                                               // 422\n                    previousToast = undefined;                                                                         // 423\n                }                                                                                                      // 424\n            }                                                                                                          // 425\n                                                                                                                       // 426\n        })();                                                                                                          // 427\n    });                                                                                                                // 428\n}(typeof define === 'function' && define.amd ? define : function (deps, factory) {                                     // 429\n    if (typeof module !== 'undefined' && module.exports) { //Node                                                      // 430\n        module.exports = factory(require('jquery'));                                                                   // 431\n    } else {                                                                                                           // 432\n        window.toastr = factory(window.jQuery);                                                                        // 433\n    }                                                                                                                  // 434\n}));                                                                                                                   // 435\n                                                                                                                       // 436\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}